--devbgascension

-- Bytecode (Base64):
-- BgNcB1ZlY3RvcjIDbmV3BUNvbG9yBlJhbmRvbQZDb2xvcjMHZnJvbUhTVgpOZXh0TnVtYmVyBVRvSFNWBG1hdGgFY2xhbXAFVURpbTIJZnJvbVNjYWxlCFBvc2l0aW9uAVgDTWluA01heAFZCEluc3RhbmNlBUZyYW1lC0FuY2hvclBvaW50D0JvcmRlclNpemVQaXhlbARTaXplBlpJbmRleAZQYXJlbnQKX3BhcnRpY2xlcwJJRAVGbGlwcwhMaWZldGltZQVTdGF0ZQRTZWVkBVNoYWRlDVJvdGF0aW9uU3BlZWQIUm90YXRpb24IVmVsb2NpdHkGU3ByZWFkDVN3YXlBbXBsaXR1ZGUNU3dheUludGVuc2l0eQlGbGlwU3BlZWQJTGFzdE5vaXNlC05leHRJbnRlZ2VyC1NwcmVhZEFuZ2xlBkNyZWF0ZQNtaW4EdGFzawR3YWl0BXNwYXduBEVtaXQFbm9pc2UDYWJzA3JhZANzaW4DY29zCmZyb21PZmZzZXQQQWJzb2x1dGVQb3NpdGlvbgxWaWV3cG9ydFNpemUFdGFibGUFY2xlYXIHRGVzdHJveQRFbnVtC0Vhc2luZ1N0eWxlBFNpbmUPRWFzaW5nRGlyZWN0aW9uBUluT3V0CEdldFZhbHVlEEJhY2tncm91bmRDb2xvcjMEZ2FtZQpSdW5TZXJ2aWNlCkdldFNlcnZpY2UMVHdlZW5TZXJ2aWNlB1BsYXllcnMRUmVwbGljYXRlZFN0b3JhZ2UHcmVxdWlyZQZDbGllbnQDR3VpEkdldFNjcmVlbkd1aUhvbGRlcgZTaGFyZWQJRnJhbWV3b3JrCVV0aWxpdGllcwVUYWJsZQlDb3VudEtleXMJd29ya3NwYWNlDUN1cnJlbnRDYW1lcmELTG9jYWxQbGF5ZXIWQmFja2dyb3VuZFRyYW5zcGFyZW5jeQlQbGF5ZXJHdWkJU2NyZWVuR3VpCF9vdmVybGF5CUhlYXJ0YmVhdAdDb25uZWN0C051bWJlclJhbmdlBkJvdHRvbQlFeHBsb3Npb24ABRECAwAANQQACgUCBAQHDCsCBw0xAgcNOwIHDkECBw+UAQIHEJgBAgcPogECBxCmAQIHD7ABAgcQtAECzAGkAgIAAAQAgIwDFACMBCgAnwIDAk0EAaQDAAAA8AQLAAQAAICkAwcAABhQ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

local v1 = game:GetService("RunService")
game:GetService("TweenService")
local u2 = game:GetService("TweenService")
local v3 = game:GetService("Players")
local v4 = game:GetService("ReplicatedStorage")
require(v4.Client.Gui.GetScreenGuiHolder)
local u5 = require(v4.Shared.Framework.Utilities.Table.CountKeys)
local u6 = workspace.CurrentCamera
local v7 = v3.LocalPlayer
Vector2.new(0, 1)
local u8 = Random.new()
local u9 = {
    ["_particles"] = {}
}
local u10 = Instance.new("Frame")
u10.Size = UDim2.fromScale(1, 1)
u10.BackgroundTransparency = 1
u10.ZIndex = 50
u10.Parent = v7.PlayerGui.ScreenGui._overlay
function u9.Create(_, p11) --[[Anonymous function at line 70]]
    --[[
    Upvalues:
        [1] = u8
        [2] = u10
        [3] = u9
    --]]
    local v12 = Vector2.new(20, 40)
    local v13 = p11.Color == "Random" and Color3.fromHSV(u8:NextNumber(), 0.85, 1) or p11.Color
    local v14, v15, v16 = v13:ToHSV()
    local v17 = Color3.fromHSV
    local v18 = v16 - 0.3
    local v19 = v17(v14, v15, (math.clamp(v18, 0, 1)))
    local v20 = UDim2.fromScale(u8:NextNumber(p11.Position.X.Min, p11.Position.X.Max), u8:NextNumber(p11.Position.Y.Min, p11.Position.Y.Max))
    local v21 = Instance.new("Frame")
    v21.AnchorPoint = Vector2.new(0.5, 0.5)
    v21.BorderSizePixel = 0
    v21.Size = UDim2.new(0, v12.X, 0, v12.Y)
    v21.Position = v20
    v21.ZIndex = 20
    v21.Parent = u10
    u9._particles[v21] = {
        ["ID"] = 1,
        ["Flips"] = 0,
        ["Lifetime"] = 0,
        ["Size"] = v12,
        ["Position"] = v20,
        ["State"] = u8:NextNumber() * 2 - 1,
        ["Seed"] = u8:NextInteger(0, 1000),
        ["Shade"] = v19,
        ["Color"] = v13,
        ["RotationSpeed"] = p11.RotationSpeed,
        ["Rotation"] = u8:NextInteger(p11.Rotation.Min, p11.Rotation.Max),
        ["Velocity"] = u8:NextInteger(p11.Velocity.Min, p11.Velocity.Max),
        ["Spread"] = u8:NextInteger(p11.SpreadAngle.Min, p11.SpreadAngle.Max),
        ["SwayAmplitude"] = p11.SwayAmplitude,
        ["SwayIntensity"] = p11.SwayIntensity,
        ["FlipSpeed"] = p11.FlipSpeed,
        ["LastNoise"] = nil
    }
end
function u9.Emit(_, u22, u23, u24) --[[Anonymous function at line 112]]
    --[[
    Upvalues:
        [1] = u5
        [2] = u9
    --]]
    task.spawn(function() --[[Anonymous function at line 113]]
        --[[
        Upvalues:
            [1] = u5
            [2] = u9
            [3] = u23
            [4] = u22
            [5] = u24
        --]]
        local v25 = 35 - u5(u9._particles)
        if v25 > 0 then
            local v26 = u23
            for _ = 1, math.min(v25, v26) do
                u9:Create(u22)
                if u24 then
                    task.wait(u24)
                end
            end
        end
    end)
end
local u27 = 0
v1.Heartbeat:Connect(function(p28) --[[Anonymous function at line 130]]
    --[[
    Upvalues:
        [1] = u9
        [2] = u6
        [3] = u2
        [4] = u27
    --]]
    for v29, v30 in u9._particles do
        local v31 = v30.Lifetime
        local v32 = v30.LastNoise
        local v33 = v30.Position
        local v34 = math.noise(v31 * v30.SwayIntensity, v30.Seed)
        local v35
        if v32 then
            local v36 = v34 - v32
            v35 = math.abs(v36) or 0
        else
            v35 = 0
        end
        local v37 = v31 ^ 0.45
        local v38 = v30.Spread
        local v39 = math.rad(v38) - 3.141592653589793
        local v40 = Vector2.new(math.sin(v39), (math.cos(v39))) * v30.Velocity * v37
        local v41 = UDim2.fromOffset(v34 * v30.SwayAmplitude + v40.X, v31 * 980.0000000000001 + v40.Y)
        if v29.AbsolutePosition.Y < u6.ViewportSize.X + 100 then
            local v42 = v30.State + p28 * v30.FlipSpeed
            local v43 = (v37 - v31) / 4
            local v44 = v42 + math.clamp(v43, 0, (1 / 0)) + v35 * 30
            if v44 > 2 then
                v30.Flips = v30.Flips + 1
                v44 = 0
            end
            local v45 = v30.Flips % 2 == 0
            local v46 = v44 % 1
            local v47 = u2
            if v44 > 1 then
                v46 = 1 - v46 or v46
            end
            local v48 = v47:GetValue(v46, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut)
            v29.BackgroundColor3 = v45 and v30.Color or v30.Shade
            v29.Size = UDim2.new(0, v30.Size.X * v48, 0, v30.Size.Y)
            v29.Position = v33 + v41
            v29.Rotation = v30.Rotation + (v31 + v37) * v30.RotationSpeed + v35 ^ 10
            v30.LastNoise = v34
            v30.Lifetime = v30.Lifetime + p28
            v30.State = v44
        else
            table.clear(v30)
            u9._particles[v29] = nil
            v29:Destroy()
        end
    end
    u27 = u27 + 1
end)
local v49 = {
    ["Color"] = "Random",
    ["Position"] = {
        ["X"] = NumberRange.new(0, 1),
        ["Y"] = NumberRange.new(0.9)
    },
    ["FlipSpeed"] = 0.25,
    ["RotationSpeed"] = 100,
    ["SwayIntensity"] = 0.25,
    ["SwayAmplitude"] = 400,
    ["Velocity"] = NumberRange.new(1250, 1750),
    ["Rotation"] = NumberRange.new(-360, 360),
    ["SpreadAngle"] = NumberRange.new(-5, 5)
}
u9.Bottom = v49
local v50 = {
    ["Color"] = "Random",
    ["Position"] = {
        ["X"] = NumberRange.new(0.5, 0.5),
        ["Y"] = NumberRange.new(0.5, 0.5)
    },
    ["FlipSpeed"] = 0.25,
    ["RotationSpeed"] = 100,
    ["SwayIntensity"] = 0.25,
    ["SwayAmplitude"] = 400,
    ["Velocity"] = NumberRange.new(1250, 1750),
    ["Rotation"] = NumberRange.new(-360, 360),
    ["SpreadAngle"] = NumberRange.new(-60, 60)
}
u9.Explosion = v50
return u9