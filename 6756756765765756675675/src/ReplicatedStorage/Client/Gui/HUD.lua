--devbgascension

-- Bytecode (Base64):
-- 

local u1 = game:GetService("Players")
local u2 = game:GetService("ReplicatedStorage")
local u3 = game:GetService("RunService")
local u4 = game:GetService("TweenService")
game:GetService("TextService")
game:GetService("SoundService")
local u5 = game:GetService("UserInputService")
game:GetService("HttpService")
local u6 = game:GetService("MarketplaceService")
local u7 = game:GetService("StarterGui")
local u8 = require(u2.Shared.Framework.Network.Remote)
local v9 = require(u2.Client.Framework.Utilities.UserInput)
local u10 = require(u2.Client.Framework.Services.LocalData)
require(u2.Shared.Types)
local u11 = require(u2.Shared.Framework.Utilities.String.FormatSuffix)
require(u2.Shared.Data.Gum)
local u12 = require(u2.Client.Framework.Utilities.Gui.Animations.SetFade)
require(u2.Shared.Data.Flavors)
local u13 = require(u2.Shared.Utils.Stats.StatsUtil)
local v14 = require(u2.Shared.Framework.Utilities.every)
local u15 = require(u2.Client.Gui.Utils.ClickableButton)
require(u2.Shared.Data.Eggs)
local u16 = require(u2.Shared.Utils.Stats.ItemUtil)
local u17 = require(u2.Client.Gui.GuiFrame)
local u18 = require(u2.Shared.Data.Currency)
local u19 = require(u2.Client.Gui.Utils.PlayLocalSound)
local u20 = require(u2.Shared.Framework.Utilities.CharacterUtil)
local u21 = require(u2.Client.Gui.Tooltip)
local u22 = require(u2.Shared.Framework.Classes.Emitter)
local u23 = require(u2.Client.Gui.HookKeybind)
local u24 = require(u2.Shared.Framework.Utilities.String.FormatCommas)
require(u2.Shared.Utils.AnimateColor)
local u25 = require(u2.Shared.Constants)
local v26 = require(u2.Client.Gui.Utils.SequentialSound)
local u27 = require(u2.Client.Effects.HatchEgg)
local u28 = require(u2.Client.Effects.PhysicalItem)
local u29 = require(u2.Client.Gui.Utils.Notification)
local u30 = require(u2.Client.Effects.OutlinePulse)
local u31 = require(u2.Shared.Framework.Utilities.Math.GetPositionOnArc)
local u32 = require(u2.Client.Gui.Utils.ItemFrame)
local u33 = require(u2.Client.Gui.Utils.Achievement)
local u34 = require(u2.Shared.Data.Builders.AchievementBuilder)
local u35 = require(u2.Shared.Utils.Stats.QuestUtil)
local v36 = require(u2.Shared.Framework.Classes.Queue)
local u37 = require(u2.Client.Gui.Utils.AutoButtonColor)
local u38 = require(u2.Shared.Palette)
local u39 = require(u2.Shared.Utils.RichText)
local v40 = require(u2.Shared.Framework.Classes.Pool)
require(u2.Client.Framework.Utilities.Gui.HookScrollingFrame)
require(u2.Shared.Data.Builders.TooltipBuilder)
local u41 = require(u2.Client.IsTrading)
local u42 = require(u2.Client.Effects.Bubble)
local u43 = require(u2.Shared.Utils.WorldUtil)
local u44 = require(u2.Client.LowDetail)
local u45 = require(u2.Shared.Utils.RaceUtil)
local u46 = require(u2.Shared.Framework.Utilities.Math.Time)
local u47 = require(u2.Shared.Data.Worlds)
local u48 = require(u2.Client.Music)
local u49 = require(u2.Client.Framework.Services.InputMode)
local u50 = require(u2.Shared.Utils.Stats.PetUtil)
require(u2.Shared.Data.Builders.PromptBuilder)
require(u2.Client.Gui.Prompt)
local u51 = require(u2.Client.Gui.PlayTransition)
local u52 = require(u2.Client.Gui.Frames.DoggyJump)
local u53 = require(u2.Client.Tutorial)
local u54 = require(u2.Client.Gui.Frames.Shop)
local u55 = require(u2.Client.Gui.Animations.Intro)
local u56 = require(u2.Shared.Utils.CurrencyUtil)
local u57 = require(u2.Shared.Data.Gamepasses)
require(u2.Shared.Framework.Utilities.ProductInfo)
require(u2.Client.Framework.Utilities.Gui.Confetti)
local u58 = require(u2.Client.Gui.Animations.ProcessingPurchase)
local u59 = require(u2.Client.Gui.Frames.WorldMap)
require(u2.Client.Gui.Frames.GumShop)
local u60 = require(u2.Shared.Utils.IsTradingPlaza)
local u61 = u1.LocalPlayer
local u62 = u61.PlayerGui.ScreenGui
local u63 = workspace.CurrentCamera
local u64 = TweenInfo.new(0.45, Enum.EasingStyle.Sine)
local u65 = TweenInfo.new(2.5, Enum.EasingStyle.Quad)
local u66 = u62.HUD.Effects.Bubble
u66.Visible = false
local function u70() --[[Anonymous function at line 98]]
    --[[
    Upvalues:
        [1] = u10
        [2] = u66
        [3] = u11
        [4] = u13
        [5] = u62
        [6] = u12
        [7] = u64
        [8] = u4
        [9] = u65
    --]]
    local v67 = u10:Get()
    if v67 then
        local v68 = UDim2.fromScale(0.6 + math.random() / 4, 0.85)
        local u69 = u66:Clone()
        u69.Icon.Label.Text = ("+%*"):format((u11(u13:GetBubblePower(v67), 1000000)))
        u69.Position = v68
        u69.Visible = true
        u69.Parent = u62.HUD.Effects
        u12(u69, 0, u64)
        u4:Create(u69, u65, {
            ["Position"] = v68 - UDim2.fromScale(0, 0.35)
        }):Play()
        task.delay(u65.Time - u64.Time, function() --[[Anonymous function at line 114]]
            --[[
            Upvalues:
                [1] = u12
                [2] = u69
                [3] = u64
            --]]
            u12(u69, 1, u64)
            task.wait(u64.Time)
            u69:Destroy()
        end)
    end
end
local v72 = v9.new({ Enum.UserInputType.MouseButton1, Enum.UserInputType.Touch, Enum.KeyCode.ButtonR2 }, function() --[[Anonymous function at line 138]]
    --[[
    Upvalues:
        [1] = u5
        [2] = u63
    --]]
    local v71 = u5:GetMouseLocation() / u63.ViewportSize
    return (v71.X > 0.35 or v71.Y <= 0.55) and (v71.X <= 0.85 or v71.Y <= 0.85)
end)
local u73 = os.clock()
local u74 = script:FindFirstChild("Blow")
local function u80() --[[Anonymous function at line 148]]
    --[[
    Upvalues:
        [1] = u62
        [2] = u73
    --]]
    local v75 = os.clock()
    local v76 = v75 * 3
    local v77 = math.floor(v76)
    u62.HUD.Chewing.Container.Label.MaxVisibleGraphemes = v77 % 4 + 7
    local v78 = (v75 - u73) / 0.5
    local v79 = math.min(1, v78)
    u62.HUD.Chewing.Container.Fill.Size = UDim2.new(v79, 0, 1, 6)
    if u62.HUD.Chewing.Container.Visible and v75 - u73 > 0.75 then
        u62.HUD.Chewing.Container.Visible = false
    end
end
local u81 = 0
local u82 = 0
local function u95() --[[Anonymous function at line 163]]
    --[[
    Upvalues:
        [1] = u20
        [2] = u61
        [3] = u82
        [4] = u53
        [5] = u10
        [6] = u81
        [7] = u49
        [8] = u43
    --]]
    local v83 = u20:GetRootPart(u61)
    if v83 then
        local v84 = u82 - v83.Position.Y
        if math.abs(v84) > 2 then
            return
        end
    end
    if u53.KeyProgress < 5 then
        return
    elseif u61:GetAttribute("InRace") then
        return
    else
        local v85 = u10:Get()
        if v85 then
            local v86 = os.clock()
            if v86 - u81 > (u49.Mode == "Touch" and 30 or 5) then
                local v87 = u20:GetRootPart(u61)
                local v88 = workspace.Worlds:FindFirstChild(u43:GetPlayerWorld(u61))
                local v89 = v88:FindFirstChild("Sell")
                local v90 = v87 and ((v87.Position - v89.Root.Position).Magnitude or (1 / 0)) or (1 / 0)
                if v87 then
                    for _, v91 in v88.Islands:GetChildren() do
                        if v85.AreasUnlocked[v91.Name] then
                            local v92 = v91.Island:FindFirstChild("Sell")
                            if v92 then
                                local v93 = (v87.Position - v92.Root.Position).Magnitude
                                if v93 < v90 then
                                    v89 = v92
                                    v90 = v93
                                end
                            end
                        end
                    end
                end
                local v94 = v87 and (v87.Position - v89.Root.Position).Magnitude or (1 / 0)
                u81 = v86
                if v94 <= 30 then
                    return
                end
            end
        end
    end
end
v72.ActivateOnPressedEvery = 0.5
local function u96() --[[Anonymous function at line 266]]
    --[[
    Upvalues:
        [1] = u60
        [2] = u17
        [3] = u62
        [4] = u28
        [5] = u10
        [6] = u20
        [7] = u61
    --]]
    if u60() then
        return false
    elseif u17:IsAnyOpen() or not (u62.HUD.Visible or u62.IslandRace.Visible) then
        return false
    elseif u28.IsGiftInRange then
        return false
    elseif u10:Get() then
        if u20:IsAlive(u61) then
            if u61.PlayerGui:FindFirstChild("Intro") then
                return false
            elseif u62:FindFirstChild("Prompt") then
                return false
            else
                return not u62.Trading.Visible
            end
        else
            return false
        end
    else
        return false
    end
end
v72.Activated:Connect(function() --[[Anonymous function at line 299]]
    --[[
    Upvalues:
        [1] = u96
        [2] = u10
        [3] = u13
        [4] = u95
        [5] = u20
        [6] = u61
        [7] = u74
        [8] = u8
        [9] = u73
        [10] = u80
        [11] = u70
    --]]
    if u96() then
        local v97 = u10:Get()
        local _ = v97.Bubble.Gum
        local v98 = u13:GetBubblePower(v97)
        local v99 = u13:GetBubbleStorage(v97)
        if v99 <= v97.Bubble.Amount + v98 then
            u95()
        end
        if v97.Passes["Infinity Gum"] or v99 > v97.Bubble.Amount then
            local v100 = u20:GetAnimator(u61)
            if v100 then
                v100:LoadAnimation(u74):Play()
                u8:FireServer("BlowBubble")
                u73 = os.clock()
                u80()
                u70()
            end
        else
            return
        end
    else
        return
    end
end)
v72.Pressed:Connect(function() --[[Anonymous function at line 345]]
    --[[
    Upvalues:
        [1] = u96
        [2] = u10
        [3] = u13
        [4] = u62
    --]]
    if u96() then
        local v101 = u10:Get()
        local _ = v101.Bubble.Gum
        if v101.Passes["Infinity Gum"] or v101.Bubble.Amount < u13:GetBubbleStorage(v101) then
            u62.HUD.Chewing.Container.Visible = true
        end
    else
        return
    end
end)
u62.HUD.Chewing.Container.Visible = false
u3.Heartbeat:Connect(u80)
v14(0.25, function() --[[Anonymous function at line 393]]
    --[[
    Upvalues:
        [1] = u20
        [2] = u61
        [3] = u82
    --]]
    local v102 = u20:GetRootPart(u61)
    if v102 then
        u82 = v102.Position.Y
    end
end)
local v103 = u62.HUD.Left.Currency
local u104 = TweenInfo.new(0.1, Enum.EasingStyle.Sine)
local u105 = TweenInfo.new(0.5, Enum.EasingStyle.Sine)
local u106 = false
local function v132(u107, u108) --[[Anonymous function at line 418]]
    --[[
    Upvalues:
        [1] = u18
        [2] = u106
        [3] = u10
        [4] = u11
        [5] = u56
        [6] = u13
        [7] = u4
        [8] = u104
        [9] = u105
        [10] = u62
    --]]
    local _ = u18[u108]
    local u109 = nil
    local u110 = -1
    local u111 = Instance.new("NumberValue")
    u111.Value = u110
    local u112 = os.clock()
    local function u118(p113) --[[Anonymous function at line 427]]
        --[[
        Upvalues:
            [1] = u112
            [2] = u106
            [3] = u10
            [4] = u107
            [5] = u11
            [6] = u111
            [7] = u108
            [8] = u110
        --]]
        local v114 = os.clock()
        if v114 - u112 > 0.125 and (u106 and p113 == nil) then
            u112 = v114
        end
        if u10:IsReady() then
            local v115 = u107.Frame.Label
            local v116 = u11
            local v117 = u111.Value
            v115.Text = v116(math.round(v117), 100000000000)
        else
            u107.Frame.Label.Text = "Loading..."
        end
        if p113 == true then
            u106 = true
        end
        if u108 == "Gems" then
            u107.Visible = u111.Value > 0
        end
        u110 = u111.Value
    end
    u10:ConnectDataChanged(u108, function(p119) --[[Anonymous function at line 450]]
        --[[
        Upvalues:
            [1] = u56
            [2] = u108
            [3] = u13
            [4] = u107
            [5] = u109
            [6] = u111
            [7] = u106
            [8] = u4
            [9] = u104
            [10] = u105
            [11] = u118
        --]]
        local v120 = u56:GetBalance(p119, u108)
        local v121 = u13:GetCurrencyCap(p119)[u108] or (1 / 0)
        local v122 = u107.Frame:FindFirstChild("Max")
        local v123 = v121 <= v120
        if v122 then
            v122.Visible = v123
        end
        if u109 then
            u109:Cancel()
        end
        if u111.Value < v120 and u106 then
            u4:Create(u107.Frame.Label.UIScale, u104, {
                ["Scale"] = 1.1
            }):Play()
            u109 = u4:Create(u111, u105, {
                ["Value"] = v120
            })
            u109:Play()
            task.delay(u104.Time, function() --[[Anonymous function at line 467]]
                --[[
                Upvalues:
                    [1] = u4
                    [2] = u107
                    [3] = u104
                --]]
                u4:Create(u107.Frame.Label.UIScale, u104, {
                    ["Scale"] = 1
                }):Play()
            end)
        else
            u111.Value = v120
        end
        u118(true)
    end)
    u10:ConnectDataChanged({
        "Teams",
        "TeamEquipped",
        "MasteryUpgrades",
        "Gamepasses"
    }, function(p124) --[[Anonymous function at line 476]]
        --[[
        Upvalues:
            [1] = u13
            [2] = u108
            [3] = u107
            [4] = u11
        --]]
        local v125 = u13:GetCurrencyMultiplier(p124, u108, true)
        u107.Frame.Icon.Label.Visible = v125 >= 100
        u107.Frame.Icon.Label.Text = ("x%*"):format((u11(v125, 1000, true)))
    end)
    u111:GetPropertyChangedSignal("Value"):Connect(function() --[[Anonymous function at line 482]]
        --[[
        Upvalues:
            [1] = u110
            [2] = u111
            [3] = u118
        --]]
        if u110 ~= u111.Value then
            u118()
        end
    end)
    local function v129() --[[Anonymous function at line 488]]
        --[[
        Upvalues:
            [1] = u107
            [2] = u62
        --]]
        local v126 = u107
        local v127 = UDim2.fromOffset
        local v128 = u107.Frame.Label.TextBounds.X / u62.UIScale.Scale + 100
        v126.Size = v127(math.max(v128, 250), 55)
    end
    u107.Frame.Label:GetPropertyChangedSignal("TextBounds"):Connect(v129)
    u62.UIScale:GetPropertyChangedSignal("Scale"):Connect(v129)
    local v130 = UDim2.fromOffset
    local v131 = u107.Frame.Label.TextBounds.X / u62.UIScale.Scale + 100
    u107.Size = v130(math.max(v131, 250), 55)
end
v132(v103.Coins, "Coins")
v132(v103.Gems, "Gems")
v132(v103.Tokens, "Tokens")
v132(v103.Tickets, "Tickets")
local u133 = TweenInfo.new(0.15, Enum.EasingStyle.Back)
local u134 = TweenInfo.new(0.15, Enum.EasingStyle.Sine)
local u135 = TweenInfo.new(0.5, Enum.EasingStyle.Back, Enum.EasingDirection.In)
local u136 = TweenInfo.new(0.075, Enum.EasingStyle.Sine)
local u137 = TweenInfo.new(0.075, Enum.EasingStyle.Sine, Enum.EasingDirection.In)
local u138 = Random.new()
local u139 = UDim2.fromScale(0.775, 0.6)
local u140 = Instance.new("Frame")
u140.Size = UDim2.new()
u140.BackgroundTransparency = 1
u140.ZIndex = 2
local v141 = Instance.new("TextLabel")
v141.Font = Enum.Font.FredokaOne
v141.TextSize = 40
v141.TextColor3 = Color3.new(1, 1, 1)
v141.AnchorPoint = Vector2.one / 2
v141.Parent = u140
local v142 = Instance.new("UIStroke")
v142.Thickness = 2.5
v142.Color = Color3.fromHex("#00295E")
v142.Parent = v141
local u143 = Instance.new("ImageLabel")
u143.AnchorPoint = Vector2.one / 2
u143.Size = UDim2.fromOffset(50, 50)
u143.ZIndex = u140.ZIndex - 1
u143.BackgroundTransparency = 1
local u144 = 0
local u145 = {}
local u146 = 0
local function u168(u147, p148) --[[Anonymous function at line 556]]
    --[[
    Upvalues:
        [1] = u18
        [2] = u62
        [3] = u145
        [4] = u22
        [5] = u2
        [6] = u3
        [7] = u140
        [8] = u138
        [9] = u139
        [10] = u143
        [11] = u4
        [12] = u134
        [13] = u146
        [14] = u144
        [15] = u133
        [16] = u135
        [17] = u19
        [18] = u136
        [19] = u137
        [20] = u12
        [21] = u11
    --]]
    local u149 = u18[u147]
    if u149 then
        local v150 = u62.HUD.Left.Currency:FindFirstChild(u147) or u147 == "Points" and u62.HUD.Right.Season or (u147 == "Shards" and u62.HUD.Right.Inventory or u147 == "ChallengePoints" and u62.HUD.Right.Inventory)
        if not v150 then
            if u147 == "CompetitiveScore" then
                v150 = u62.HUD.Right.Competitive
            else
                v150 = false
            end
        end
        if v150 then
            local u151 = u145[u147]
            if not u151 then
                local u152 = (u147 == "Points" or (u147 == "Shards" or (u147 == "ChallengePoints" or u147 == "CompetitiveScore"))) and v150.Button.Icon or v150.Frame
                local v153 = u22.fromEmitter(u2.Assets.Particles.Spots)
                v153.Rate = 0
                v153.Parent = u152
                u151 = {
                    ["ID"] = 0,
                    ["Intensity"] = Instance.new("NumberValue"),
                    ["LastSound"] = 0,
                    ["Emitter"] = v153
                }
                local u154 = 0
                u3.Heartbeat:Connect(function(p155) --[[Anonymous function at line 589]]
                    --[[
                    Upvalues:
                        [1] = u151
                        [2] = u154
                        [3] = u152
                    --]]
                    if u151.Intensity.Value ~= 0 then
                        u154 = u154 + p155 * 50
                        u152.Position = UDim2.new(0.5, math.noise(u154, 0) * u151.Intensity.Value, 0.5, math.noise(u154, 0, 100) * u151.Intensity.Value)
                    end
                end)
                u145[u147] = u151
            end
            local v156 = (u147 == "Points" or (u147 == "Shards" or (u147 == "ChallengePoints" or u147 == "CompetitiveScore"))) and v150 and v150 or v150.Frame.Icon
            local u157 = u140:Clone()
            local v158 = u138:NextUnitVector() / 20
            local u159 = u139 + UDim2.fromScale(v158.X, v158.Y)
            u157.Position = u159
            u157.Parent = u62._overlay
            local v160 = u143:Clone()
            v160.Image = u149.Image
            v160.ZIndex = -1
            v160.Position = UDim2.fromScale(0.5, 0.5)
            v160.Size = UDim2.fromOffset(100, 100)
            v160.Parent = u157
            local u161 = (v156.AbsolutePosition + v156.AbsoluteSize / 2) / u62.UIScale.Scale
            u4:Create(u151.Intensity, u134, {
                ["Value"] = 0
            }):Play()
            local u162 = u146 + 1
            u146 = u162
            for u163 = 1, 10 do
                local u164 = u144
                task.delay((u163 - 1) * 0.025, function() --[[Anonymous function at line 632]]
                    --[[
                    Upvalues:
                        [1] = u151
                        [2] = u138
                        [3] = u143
                        [4] = u149
                        [5] = u139
                        [6] = u62
                        [7] = u4
                        [8] = u133
                        [9] = u135
                        [10] = u161
                        [11] = u162
                        [12] = u146
                        [13] = u147
                        [14] = u134
                        [15] = u164
                        [16] = u163
                        [17] = u19
                    --]]
                    local u165 = u151.ID + 1
                    u151.ID = u165
                    local v166 = u138:NextUnitVector() * (u138:NextNumber() + 0.25) * 150
                    local v167 = u143:Clone()
                    v167.Size = UDim2.new()
                    v167.Image = u149.Image
                    v167.Position = u139 + UDim2.fromOffset(v166.X, v166.Y)
                    v167.Parent = u62._overlay
                    u4:Create(v167, u133, {
                        ["Size"] = u143.Size
                    }):Play()
                    task.wait(u133.Time + 0.3)
                    u4:Create(v167, u135, {
                        ["ImageTransparency"] = 1,
                        ["Position"] = UDim2.fromOffset(u161.X, u161.Y)
                    }):Play()
                    task.delay(u135.Time * 0.8, function() --[[Anonymous function at line 652]]
                        --[[
                        Upvalues:
                            [1] = u162
                            [2] = u146
                            [3] = u147
                            [4] = u151
                            [5] = u4
                            [6] = u134
                            [7] = u165
                        --]]
                        if u162 + 3 >= u146 then
                            if u147 ~= "Points" and u151.Emitter.Active < 40 then
                                u151.Emitter:Emit(5)
                            end
                            u4:Create(u151.Intensity, u134, {
                                ["Value"] = 15
                            }):Play()
                            task.wait(0.15)
                            if u165 == u151.ID then
                                u4:Create(u151.Intensity, u134, {
                                    ["Value"] = 0
                                }):Play()
                            end
                        end
                    end)
                    task.wait(u135.Time)
                    if u164 % 3 == 0 or u163 == 1 then
                        if u147 == "Points" then
                            u19("Points")
                        else
                            u19("CurrencyPickup")
                        end
                    end
                    v167:Destroy()
                end)
                u144 = u144 + 1
            end
            u4:Create(u157, u136, {
                ["Position"] = u159 + UDim2.fromOffset(0, -6)
            }):Play()
            task.delay(u136.Time, function() --[[Anonymous function at line 681]]
                --[[
                Upvalues:
                    [1] = u4
                    [2] = u157
                    [3] = u137
                    [4] = u159
                --]]
                u4:Create(u157, u137, {
                    ["Position"] = u159
                }):Play()
            end)
            if os.clock() - u151.LastSound > 0.1 then
                u19("CoinCollect")
                u151.LastSound = os.clock()
            end
            task.delay(0.5 + u136.Time, function() --[[Anonymous function at line 690]]
                --[[
                Upvalues:
                    [1] = u12
                    [2] = u157
                    [3] = u135
                    [4] = u4
                    [5] = u161
                --]]
                u12(u157, 1, u135)
                u4:Create(u157, u135, {
                    ["Position"] = UDim2.fromOffset(u161.X, u161.Y)
                }):Play()
                task.wait(u135.Time)
                u157:Destroy()
            end)
            u157.TextLabel.Text = ("+%*"):format((u11(p148)))
            u19("CurrencyPickup")
        end
    else
        return
    end
end
local u169 = u62.Received
local u170 = u169.Tray
local u171 = u170.Template
u171.Visible = true
u170.Parent = nil
u171.Parent = nil
local u172 = TweenInfo.new(0.5, Enum.EasingStyle.Circular, Enum.EasingDirection.InOut)
local u173 = v26(u2.Assets.Sounds.Items.ItemCollect, {
    ["Ramping"] = 5,
    ["Pitch"] = NumberRange.new(1, 2),
    ["Buffer"] = 0.1
})
local u174 = {}
local u175 = {}
local u176 = 0
local u177 = 0
local function u197() --[[Anonymous function at line 743]]
    --[[
    Upvalues:
        [1] = u170
        [2] = u177
        [3] = u169
        [4] = u39
        [5] = u16
        [6] = u171
        [7] = u32
        [8] = u30
        [9] = u11
        [10] = u173
        [11] = u19
        [12] = u2
        [13] = u4
    --]]
    local u178 = {
        ["Counts"] = {},
        ["Elements"] = {}
    }
    local u179 = 0
    local u180 = u170:Clone()
    u180.LayoutOrder = u177
    u180.Parent = u169
    u39.new():size(20)
    function u178.push(p181) --[[Anonymous function at line 756]]
        --[[
        Upvalues:
            [1] = u16
            [2] = u171
            [3] = u32
            [4] = u30
            [5] = u11
            [6] = u173
            [7] = u178
            [8] = u19
            [9] = u2
            [10] = u179
            [11] = u180
            [12] = u4
        --]]
        local u182 = u16:GetName(p181)
        local u183 = u16:GetAmount(p181)
        local u184 = u16:GetRarity(p181)
        local u185 = u171:Clone()
        u185.UIScale.Scale = 2
        local u186 = {
            ["Frame"] = u185,
            ["Item"] = p181,
            ["Amount"] = u16:GetAmount(p181)
        }
        local u187, v188 = u32(p181, true)
        u187.Name = "Inner"
        u187.Parent = u185
        u187.AnchorPoint = Vector2.one / 2
        u187.Position = UDim2.fromScale(0.5, 0.5)
        u187.Size = UDim2.fromScale(1, 1)
        local function v192(p189) --[[Anonymous function at line 781]]
            --[[
            Upvalues:
                [1] = u186
                [2] = u16
                [3] = u11
                [4] = u187
                [5] = u173
                [6] = u30
                [7] = u185
            --]]
            local v190 = u186.Amount + u16:GetAmount(p189)
            local v191 = ("x%*"):format((u11(v190, 1000)))
            u187.Button.Inner.Bottom.Visible = v190 > 1
            u187.Button.Inner.Bottom.Text = v191
            u186.Amount = v190
            u186.Expiry = os.clock() + 2.5
            u173()
            u30().Parent = u185
        end
        local v193 = #u178.Elements == 0 and 0 or math.random() / 5
        task.delay(v193, function() --[[Anonymous function at line 793]]
            --[[
            Upvalues:
                [1] = u178
                [2] = u182
                [3] = u184
                [4] = u19
                [5] = u2
                [6] = u183
                [7] = u185
                [8] = u179
                [9] = u180
                [10] = u4
                [11] = u30
                [12] = u173
            --]]
            if not u178.Counts[u182] then
                if u184 == "Legendary" or u184 == "Secret" then
                    u19("LegendaryNew")
                end
                u19(u2.Assets.Sounds.Items.ItemNew)
                u178.Counts[u182] = 0
            end
            local v194 = u178.Counts
            local v195 = u182
            v194[v195] = v194[v195] + u183
            u185.LayoutOrder = u179
            u185.Parent = u180
            u4:Create(u185.UIScale, TweenInfo.new(0.2, Enum.EasingStyle.Quint), {
                ["Scale"] = 1
            }):Play()
            task.delay(0.2, function() --[[Anonymous function at line 807]]
                --[[
                Upvalues:
                    [1] = u30
                    [2] = u185
                --]]
                u30().Parent = u185
                task.wait(0.25)
                u30().Parent = u185
                task.wait(0.25)
            end)
            u179 = u179 + 1
            u173()
        end)
        u186.Cleanup = v188
        u186.Add = v192
        u186.Expiry = os.clock() + 2.5 + v193
        local v196 = u178.Elements
        table.insert(v196, u186)
    end
    function u178.remove() --[[Anonymous function at line 826]]
        --[[
        Upvalues:
            [1] = u4
            [2] = u180
        --]]
        u4:Create(u180, TweenInfo.new(0.25), {
            ["Size"] = UDim2.new(1, 0)
        })
        task.delay(0.25, function() --[[Anonymous function at line 828]]
            --[[
            Upvalues:
                [1] = u180
            --]]
            u180:Destroy()
        end)
    end
    u177 = u177 + 1
    return u178
end
local function u213(p198) --[[Anonymous function at line 838]]
    --[[
    Upvalues:
        [1] = u62
        [2] = u169
        [3] = u4
        [4] = u172
        [5] = u31
        [6] = u19
        [7] = u176
    --]]
    local u199 = p198.Frame
    local u200 = Vector2.new(u62.AbsoluteSize.X / 2 + u199.Size.X.Offset / 2, u62.AbsoluteSize.Y + 300) * (1 / u62.UIScale.Scale)
    local u201 = u199.AbsolutePosition / u62.UIScale.Scale + Vector2.new(u199.Size.X.Offset / 2, u199.Size.Y.Offset)
    local u202 = u199.Inner
    u202.ZIndex = u169.ZIndex + 1
    u202.Size = u199.Size
    u202.Position = UDim2.fromOffset(u201.X, u201.Y)
    u202.Parent = u62
    local u203 = Instance.new("UIScale")
    u203.Parent = u202
    local u204 = Instance.new("NumberValue")
    u4:Create(u204, u172, {
        ["Value"] = 1
    }):Play()
    u204:GetPropertyChangedSignal("Value"):Connect(function() --[[Anonymous function at line 853]]
        --[[
        Upvalues:
            [1] = u31
            [2] = u201
            [3] = u200
            [4] = u204
            [5] = u203
            [6] = u202
        --]]
        local v205 = u31
        local v206 = u201.X
        local v207 = u201.Y
        local v208 = Vector3.new(v206, v207)
        local v209 = u200.X
        local v210 = u200.Y
        local v211 = v205(v208, Vector3.new(v209, v210), -400, u204.Value)
        u203.Scale = 1 - u204.Value
        u202.Position = UDim2.fromOffset(v211.X, v211.Y)
    end)
    u19("PetMove")
    u4:Create(u199, TweenInfo.new(0.25), {
        ["Size"] = UDim2.new()
    }):Play()
    task.delay(0.25, function() --[[Anonymous function at line 862]]
        --[[
        Upvalues:
            [1] = u199
        --]]
        u199:Destroy()
    end)
    task.delay(u172.Time, function() --[[Anonymous function at line 866]]
        --[[
        Upvalues:
            [1] = u176
            [2] = u204
            [3] = u202
        --]]
        local v212 = u176 - 1
        u176 = math.max(0, v212)
        u204:Destroy()
        u202:Destroy()
    end)
end
local function u220() --[[Anonymous function at line 873]]
    --[[
    Upvalues:
        [1] = u176
        [2] = u175
        [3] = u174
        [4] = u197
    --]]
    if u176 >= 8 then
        return
    end
    for _ = 1, 8 - u176 do
        local v214 = table.remove(u175, 1)
        if not v214 then
            break
        end
        local v215 = false
        for v216 = #u174, 1, -1 do
            local v217 = u174[v216]
            if #v217.Elements < 4 then
                v215 = true
                u176 = u176 + 1
                task.spawn(v217.push, v214)
                break
            end
        end
        if not v215 then
            local v218 = u197()
            task.spawn(v218.push, v214)
            u176 = u176 + 1
            local v219 = u174
            table.insert(v219, v218)
        end
    end
end
local function u226(p221) --[[Anonymous function at line 903]]
    --[[
    Upvalues:
        [1] = u174
        [2] = u16
        [3] = u175
        [4] = u220
    --]]
    local v222 = false
    for _, v223 in u174 do
        for _, v224 in v223.Elements do
            if v224.Item.Type ~= "Pet" and (v224.Item.Type ~= "PermanentBuff" and u16:Compare(p221, v224.Item)) then
                v224.Add(p221)
                v222 = true
            end
        end
        if v222 then
            break
        end
    end
    if not v222 then
        local v225 = u175
        table.insert(v225, p221)
        u220()
    end
end
v14(0.1, function() --[[Anonymous function at line 925]]
    --[[
    Upvalues:
        [1] = u174
        [2] = u213
        [3] = u220
    --]]
    local v227 = os.clock()
    for v228 = #u174, 1, -1 do
        local v229 = u174[v228]
        for v230 = #v229.Elements, 1, -1 do
            local v231 = v229.Elements[v230]
            if v227 >= v231.Expiry then
                task.spawn(u213, v231)
                table.remove(v229.Elements, v230)
                table.clear(v231)
                if #v229.Elements == 0 then
                    v229.remove()
                    table.remove(u174, v228)
                end
            end
        end
    end
    u220()
end)
local u232 = {}
local u233 = {}
local u234 = {}
local u235 = false
local function v240() --[[Anonymous function at line 958]]
    --[[
    Upvalues:
        [1] = u10
        [2] = u233
        [3] = u232
        [4] = u235
        [5] = u234
    --]]
    local v236 = u10:Get()
    if v236 then
        for v237, v238 in v236.QuestsCompleted do
            if u233[v237] ~= v238 then
                local v239 = u232[v237]
                if u235 and v239 then
                    u232[v237] = nil
                    u234[v237] = nil
                    v239((1 / 0))
                end
                u233[v237] = (u233[v237] or 0) + 1
            end
        end
    end
end
u10:ConnectDataChanged("Quests", function() --[[Function name: update, line 976]]
    --[[
    Upvalues:
        [1] = u10
        [2] = u234
        [3] = u232
        [4] = u35
        [5] = u34
        [6] = u33
        [7] = u235
    --]]
    local v241 = u10:Get()
    if not v241 then
        return
    end
    for _, u242 in v241.Quests do
        local v243 = u234[u242.Id]
        if v243 then
            local v244 = false
            for v245, v246 in u242.Progress do
                if not v243[v245] or v246 < v243[v245] then
                    v244 = true
                    break
                end
            end
            if v244 then
                u232[u242.Id] = nil
            end
        end
        local v247 = u232[u242.Id]
        if v247 then
            v247(u242.Progress[1])
        else
            local v248 = u242.Tasks[1]
            local u249 = u35:FormatTask(v248)
            if not (string.find(u242.Id, "daily") or string.find(u242.Id, "hourly")) then
                return
            end
            local v250 = u242.Id
            local v251 = string.sub(v250, 1, 5) == "daily" and "Daily" or "Hourly"
            local v253 = u34.new((("%* Challenge"):format(v251))):Icon(function(p252) --[[Anonymous function at line 1006]]
                --[[
                Upvalues:
                    [1] = u35
                    [2] = u242
                --]]
                u35:UpdateIcon(p252, u242)
            end):Description(u249)
            local v254 = u33:Create(u35:GetRequirement(v248), v253, function(_, _) --[[Anonymous function at line 1011]]
                --[[
                Upvalues:
                    [1] = u249
                --]]
                return u249
            end, "Completed")
            v254(u242.Progress[1])
            u232[u242.Id] = v254
        end
        u234[u242.Id] = table.clone(u242.Progress)
    end
    u235 = true
end)
u10:ConnectDataChanged("QuestsCompleted", v240)
local u255 = TweenInfo.new(0.35, Enum.EasingStyle.Sine)
local u256 = TweenInfo.new(u255.Time, Enum.EasingStyle.Back, Enum.EasingDirection.In)
local u257 = v36.new()
local u258 = u62.HUD.TradeRequest
u258.Visible = true
u258.Parent = nil
u8.Event("TradeRequest"):Connect(function(u259) --[[Function name: tradeRequest, line 1045]]
    --[[
    Upvalues:
        [1] = u257
        [2] = u258
        [3] = u39
        [4] = u38
        [5] = u62
        [6] = u37
        [7] = u15
        [8] = u8
        [9] = u4
        [10] = u255
        [11] = u19
        [12] = u30
        [13] = u256
    --]]
    u257:Push(5, function() --[[Anonymous function at line 1046]]
        --[[
        Upvalues:
            [1] = u258
            [2] = u39
            [3] = u259
            [4] = u38
            [5] = u62
            [6] = u37
            [7] = u15
            [8] = u8
            [9] = u257
            [10] = u4
            [11] = u255
            [12] = u19
            [13] = u30
            [14] = u256
        --]]
        local u260 = u258:Clone()
        u260.Position = UDim2.new(0.5, 0, 0, -10)
        u260.AnchorPoint = Vector2.new(0.5, 1)
        u260.Label.Text = u39.autoStroke((("%* has requested to trade!"):format((u39.autoColor(u259.Name, u38.Text.Cyan)))))
        u260.Parent = u62.HUD
        local u261 = false
        local function v262() --[[Anonymous function at line 1054]]
            --[[
            Upvalues:
                [1] = u261
                [2] = u260
            --]]
            if not u261 then
                u261 = true
                u260:Destroy()
            end
        end
        u37(u260.Buttons.Accept.Button, u38.Button.Green)
        u15(u260.Buttons.Accept.Button, function() --[[Anonymous function at line 1064]]
            --[[
            Upvalues:
                [1] = u8
                [2] = u259
                [3] = u261
                [4] = u260
                [5] = u257
            --]]
            u8:FireServer("TradeAcceptRequest", u259)
            if not u261 then
                u261 = true
                u260:Destroy()
            end
            u257:Clear()
        end)
        u37(u260.Buttons.Decline.Button, u38.Button.Red)
        u15(u260.Buttons.Decline.Button, function() --[[Anonymous function at line 1071]]
            --[[
            Upvalues:
                [1] = u261
                [2] = u260
                [3] = u257
            --]]
            if not u261 then
                u261 = true
                u260:Destroy()
            end
            u257:Next()
        end)
        u4:Create(u260, u255, {
            ["Position"] = UDim2.new(0.5, 0, 0, 40),
            ["AnchorPoint"] = Vector2.new(0.5, 0)
        }):Play()
        u19("NotificationTrade")
        task.spawn(function() --[[Anonymous function at line 1082]]
            --[[
            Upvalues:
                [1] = u259
                [2] = u260
            --]]
            local v263 = ("rbxthumb://type=AvatarHeadShot&id=%*&w=100&h=100"):format(u259.UserId)
            u260.Icon.Label.Image = v263
        end)
        task.delay(u255.Time, function() --[[Anonymous function at line 1088]]
            --[[
            Upvalues:
                [1] = u261
                [2] = u30
                [3] = u260
            --]]
            if not u261 then
                u30(function(p264) --[[Anonymous function at line 1090]]
                    --[[
                    Upvalues:
                        [1] = u260
                    --]]
                    p264.UICorner.CornerRadius = u260.UICorner.CornerRadius
                    p264.UIStroke.Thickness = 3
                end).Parent = u260
            end
        end)
        task.delay(5 - u256.Time - 0.25, function() --[[Anonymous function at line 1098]]
            --[[
            Upvalues:
                [1] = u261
                [2] = u4
                [3] = u260
                [4] = u256
            --]]
            if not u261 then
                u4:Create(u260, u256, {
                    ["Position"] = UDim2.new(0.5, 0, 0, -10),
                    ["AnchorPoint"] = Vector2.new(0.5, 1)
                }):Play()
            end
        end)
        return v262
    end)
end)
local u265 = {}
local u266 = u62.HUD.Unlocked
u266.Frame.UIScale.Scale = 1.5
u266.Parent = nil
local u267 = TweenInfo.new(0.35, Enum.EasingStyle.Quint)
local u268 = TweenInfo.new(1, Enum.EasingStyle.Sine)
local u269 = v36.new()
local function u273(p270) --[[Anonymous function at line 1127]]
    --[[
    Upvalues:
        [1] = u266
        [2] = u62
        [3] = u29
        [4] = u19
        [5] = u12
        [6] = u267
        [7] = u4
        [8] = u30
        [9] = u268
    --]]
    local u271 = u266:Clone()
    u271.Visible = true
    u271.Frame.Label.Text = ("You discovered %*!"):format(p270)
    u271.Parent = u62.HUD
    if p270 == "The Void" then
        u29("You unlocked the world map!", {
            ["Sound"] = "NotificationHelp"
        })
    end
    u19("IslandDiscovered")
    u12(u271, 0, u267)
    u4:Create(u271.Frame.UIScale, u267, {
        ["Scale"] = 1
    }):Play()
    task.defer(function() --[[Anonymous function at line 1141]]
        --[[
        Upvalues:
            [1] = u271
            [2] = u62
        --]]
        u271.Size = UDim2.fromOffset(u271.Frame.Label.TextBounds.X / u62.UIScale.Scale + 50, 70)
    end)
    task.delay(u267.Time, function() --[[Anonymous function at line 1145]]
        --[[
        Upvalues:
            [1] = u30
            [2] = u271
        --]]
        u30(function(p272) --[[Anonymous function at line 1146]]
            --[[
            Upvalues:
                [1] = u271
            --]]
            p272.UICorner.CornerRadius = u271.Frame.UICorner.CornerRadius
            p272.UIStroke.Thickness = u271.Frame.UIStroke.Thickness
        end).Parent = u271.Frame
    end)
    task.wait(u267.Time + 3)
    u12(u271, 1, u268)
    task.wait(u268.Time)
    u271:Destroy()
end
local u274 = true
local v275 = u273
u10:ConnectDataChanged("AreasUnlocked", function() --[[Function name: update, line 1161]]
    --[[
    Upvalues:
        [1] = u10
        [2] = u265
        [3] = u274
        [4] = u269
        [5] = u273
    --]]
    local v276 = u10:Get()
    if v276 then
        for u277 in v276.AreasUnlocked do
            if not u265[u277] then
                if not u274 then
                    u269:Push(4, function() --[[Anonymous function at line 1171]]
                        --[[
                        Upvalues:
                            [1] = u273
                            [2] = u277
                        --]]
                        u273(u277)
                    end)
                end
                u265[u277] = true
            end
        end
        u274 = false
    end
end)
local u278 = NumberRange.new(0)
local u279 = u62.HUD.Height.Container.Marker
local u280 = u62.HUD.Height.Label
local u281 = u62.HUD.Height.Container.Template
u281.Parent = nil
local u282 = 0
local u283 = u62.IslandRace.Height.Container.Template
u283.Parent = nil
local u284 = {}
local u285 = nil
local u286 = {}
local u291 = v40.new(function() --[[Anonymous function at line 1203]]
    --[[
    Upvalues:
        [1] = u281
        [2] = u38
    --]]
    local u287 = u281:Clone()
    local function v290() --[[Anonymous function at line 1205]]
        --[[
        Upvalues:
            [1] = u287
            [2] = u38
        --]]
        local v288 = u287:GetAttribute("Active")
        local v289 = v288 and 60 or 50
        u287.Size = UDim2.fromOffset(v289, v289)
        u287.UIGradient.Color = not v288 and u38.Button.Default.Color or u38.Button.Default.Enter
        u287.UIStroke.Color = v288 and Color3.fromRGB(43, 138, 255) or Color3.fromHex("#00295e")
    end
    v290()
    u287:SetAttribute("Active", false)
    u287:GetAttributeChangedSignal("Active"):Connect(v290)
    return u287
end)
local function u298(p292) --[[Anonymous function at line 1226]]
    --[[
    Upvalues:
        [1] = u278
    --]]
    local v293 = 0
    local v294 = 0
    if u278.Max < p292 then
        local v295 = p292 / 5
        v294 = math.floor(v295) * 5
        v293 = 1
    elseif u278.Min < p292 then
        local v296 = p292 - u278.Min
        v293 = v296 / (u278.Max - u278.Min)
        local v297 = v296 / 5
        v294 = math.floor(v297) * 5
    end
    return {
        ["Alpha"] = v293,
        ["Height"] = v294
    }
end
local function u313() --[[Anonymous function at line 1243]]
    --[[
    Upvalues:
        [1] = u10
        [2] = u43
        [3] = u61
        [4] = u62
        [5] = u298
        [6] = u291
        [7] = u11
        [8] = u284
    --]]
    local v299 = u10:Get()
    if v299 then
        local v300 = u43:GetPlayerWorld(u61)
        local v301 = workspace.Worlds:FindFirstChild(v300)
        local v302 = u62.WorldMap.Worlds:FindFirstChild(v300)
        if v302 and v301 then
            for _, v303 in v302.Islands:GetChildren() do
                local v304 = v303.Button:FindFirstChild("Icon")
                if v304 then
                    v304 = v304:FindFirstChild("Label")
                end
                if v304 then
                    v304 = v304:FindFirstChild("Bar")
                end
                local v305 = v301.Islands:FindFirstChild(v303.Name)
                if v305 and v304 then
                    local v306 = v305:GetAttribute("Height") or 0
                    local v307 = u298(v306)
                    local v308 = v299.AreasUnlocked[v303.Name] ~= nil
                    local v309 = u291:Get()
                    v309.Name = v303.Name
                    v309.Icon.Image = v304.Image
                    v309.Unknown.Visible = not v308
                    v309.Icon.ImageColor3 = v308 and Color3.new(1, 1, 1) or Color3.new()
                    local v310 = v309.Label
                    local v311 = u11
                    local v312 = v307.Height / 5
                    v310.Text = ("%*m"):format((v311(math.floor(v312) * 5)))
                    v309.Position = UDim2.fromScale(v307.Alpha, 0.5)
                    v309.AnchorPoint = Vector2.new(v307.Alpha, 0.5)
                    v309.Parent = u62.HUD.Height.Container
                    u284[v309] = v306
                end
            end
            u291:Done()
        end
    else
        return
    end
end
local u314 = u47["The Overworld"].Islands[2].Height * 1.25
local u315 = "The Overworld"
local u316 = false
local function u338() --[[Anonymous function at line 1290]]
    --[[
    Upvalues:
        [1] = u20
        [2] = u61
        [3] = u298
        [4] = u284
        [5] = u285
        [6] = u43
        [7] = u315
        [8] = u52
        [9] = u316
        [10] = u62
        [11] = u55
        [12] = u47
        [13] = u48
        [14] = u286
        [15] = u46
        [16] = u282
        [17] = u45
        [18] = u280
        [19] = u24
        [20] = u279
        [21] = u278
        [22] = u314
        [23] = u4
    --]]
    local v317 = u20:GetRootPart(u61)
    if not v317 then
        return
    end
    local v318 = u298(v317.Position.Y)
    local v319 = false
    for v320, v321 in u284 do
        local v322 = v318.Height - v321
        local v323 = math.abs(v322) < 50
        local v324 = v320:GetAttribute("Active")
        if v324 ~= v323 then
            v320:SetAttribute("Active", v323)
        end
        if v324 then
            v319 = true
            u285 = v320
        end
    end
    if not v319 then
        u285 = nil
    end
    u61:SetAttribute("OnIsland", v319)
    local v325 = u43:GetPlayerWorld(u61)
    local v326 = u315
    if v318.Height > 200 then
        if u285 then
            v326 = u285.Name
        end
    else
        v326 = v325
    end
    local v327 = u52:IsPlaying()
    if (v326 ~= u315 or v327 ~= u316) and (u62.IslandRace.Visible == false and (not v327 and u55.IsPlaying == false)) then
        local v328 = u47[v325]
        if v326 == v325 then
            u48:SetTrack(v328.Track)
        else
            local v329 = nil
            for _, v330 in v328.Islands do
                if v330.Name == v326 then
                    v329 = v330
                    break
                end
            end
            if v329 and v329.Track then
                u48:SetTrack(v329.Track)
            end
        end
    end
    u315 = v326
    u316 = v327
    for v331, v332 in u286 do
        local v333 = u20:GetRootPart(v331)
        if v333 then
            local v334 = u298(v333.Position.Y)
            v332.Position = UDim2.new(v334.Alpha, 0, 0, -10)
        end
    end
    local v335 = u46.now() - u282
    if v335 > 0 then
        u62.IslandRace.Height.Label.Text = ("\226\143\176 %* \226\143\176"):format((u46.formatTime(u45.RaceTime - v335)))
    end
    u62.IslandRace.Height.Label.Visible = v335 > 0
    u280.Text = ("%*m"):format((u24(v318.Height)))
    u279.AnchorPoint = Vector2.new(v318.Alpha, 0)
    u279.Position = UDim2.fromScale(v318.Alpha, 0)
    u62.IslandRace.Height.Container.Marker.Position = u279.Position
    u62.IslandRace.Height.Container.Marker.AnchorPoint = u279.AnchorPoint
    local v336 = (v317.Position.Y - u278.Min) / u314
    local v337 = math.clamp(v336, 0, 1)
    u4:Create(game.Lighting, TweenInfo.new(0.1, Enum.EasingStyle.Linear), {
        ["ClockTime"] = v337 * -12 + 12
    }):Play()
end
u43:OnPlayerWorldChanged(u61, function(p339) --[[Anonymous function at line 1381]]
    --[[
    Upvalues:
        [1] = u278
        [2] = u338
        [3] = u313
    --]]
    local v340 = workspace.Worlds:FindFirstChild(p339)
    if v340 then
        local v341 = v340:FindFirstChild("Islands")
        local v342 = v340:FindFirstChild("Spawn")
        if v342 and v341 then
            local v343 = v342.Position.Y - v342.Size.Y / 2
            local v344 = (-1 / 0)
            for _, v345 in v341:GetChildren() do
                local v346 = v345:FindFirstChild("Island")
                if v346 then
                    local v347 = v346:GetPivot().Position
                    local v348 = v347.Y
                    v343 = math.min(v343, v348)
                    local v349 = v347.Y
                    v344 = math.max(v344, v349)
                end
            end
            u278 = NumberRange.new(v343, v344)
            u338()
            u313()
        end
    else
        return
    end
end)
u10:ConnectDataChanged("AreasUnlocked", u313)
u8.Event("IslandRaceStart"):Connect(function(p350) --[[Anonymous function at line 1408]]
    --[[
    Upvalues:
        [1] = u1
        [2] = u61
        [3] = u286
        [4] = u283
        [5] = u62
        [6] = u338
        [7] = u282
    --]]
    for v351 in p350.Players do
        local v352 = u1:FindFirstChild(v351)
        if v352 and (v352 ~= u61 and not u286[v352]) then
            local v353 = u283:Clone()
            v353.Icon.Image = ("rbxthumb://type=AvatarBust&w=50&h=50&id=%*"):format(v352.UserId)
            v353.Parent = u62.IslandRace.Height.Container
            u286[v352] = v353
        end
    end
    u338()
    u282 = p350.StartTime
end)
v14(0.75, function() --[[Anonymous function at line 1425]]
    --[[
    Upvalues:
        [1] = u285
        [2] = u44
        [3] = u30
    --]]
    if u285 and not u44.Enabled then
        u30(function(p354) --[[Anonymous function at line 1429]]
            --[[
            Upvalues:
                [1] = u285
            --]]
            p354.UICorner.CornerRadius = UDim.new(1, 0)
            p354.UIStroke.Thickness = u285.UIStroke.Thickness
        end).Parent = u285
    end
end)
v14(0.1, u338)
local u355 = false
local function v360(u356) --[[Anonymous function at line 1442]]
    --[[
    Upvalues:
        [1] = u62
        [2] = u21
        [3] = u54
        [4] = u17
        [5] = u355
        [6] = u59
        [7] = u51
        [8] = u23
        [9] = u49
        [10] = u4
        [11] = u15
    --]]
    local function v357() --[[Anonymous function at line 1443]]
        --[[
        Upvalues:
            [1] = u62
            [2] = u21
            [3] = u356
            [4] = u54
            [5] = u17
            [6] = u355
            [7] = u59
            [8] = u51
        --]]
        if u62.HUD.Visible then
            u21:Hide()
            if u356.Name == "Codes" then
                task.defer(function() --[[Anonymous function at line 1447]]
                    --[[
                    Upvalues:
                        [1] = u54
                    --]]
                    task.wait()
                    u54.setPage("Redeem")
                end)
                u17:Toggle("RobuxShop")
                return
            end
            if u356.Name == "Trading" then
                u17:Toggle("TradingMenu")
                return
            end
            if u356.Name == "Map" then
                if u355 then
                    return
                elseif u59:IsOpen() then
                    u59:Close()
                else
                    u355 = true
                    u51("Loading Galaxy...", function() --[[Anonymous function at line 1460]]
                        --[[
                        Upvalues:
                            [1] = u59
                            [2] = u355
                        --]]
                        u59:Open()
                        u355 = false
                    end)
                end
            end
            u17:Toggle(u356.Name)
        end
    end
    local v358 = u356.Button:FindFirstChild("Keybind")
    if v358 then
        u23(v358, u356.Name, v357, function() --[[Anonymous function at line 1473]]
            --[[
            Upvalues:
                [1] = u356
            --]]
            return u356.Visible
        end)
    end
    local u359 = TweenInfo.new(0.25, Enum.EasingStyle.Quint)
    u356.Button.MouseEnter:Connect(function() --[[Anonymous function at line 1480]]
        --[[
        Upvalues:
            [1] = u49
            [2] = u4
            [3] = u356
            [4] = u359
        --]]
        if u49.Mode == "Keyboard" then
            u4:Create(u356.Button, u359, {
                ["Rotation"] = 3
            }):Play()
        end
    end)
    u356.Button.MouseLeave:Connect(function() --[[Anonymous function at line 1486]]
        --[[
        Upvalues:
            [1] = u4
            [2] = u356
            [3] = u359
        --]]
        u4:Create(u356.Button, u359, {
            ["Rotation"] = 0
        }):Play()
    end)
    u15(u356.Button, v357)
end
local function v366(p361, p362) --[[Anonymous function at line 1493]]
    --[[
    Upvalues:
        [1] = u17
        [2] = u62
        [3] = u50
        [4] = u25
        [5] = u168
        [6] = u27
        [7] = u226
    --]]
    for _, v363 in p361 do
        local v364 = u17:IsOpen("Season")
        if v364 then
            v364 = u62.Season.Frame.Content.Premium.Visible
        end
        local v365 = not v364
        if v365 then
            v365 = not p362
        end
        if v363.Type == "Pet" and (u17:IsOpen("Shiny") and u50:GetChance(v363) > u25.RareLegendaryThreshold) then
            v365 = false
        end
        if v363.Type == "Currency" then
            u168(v363.Currency, v363.Amount)
        elseif v363.Type == "Pet" and v365 then
            u17:Close()
            u27:DisplayPetOnce(v363)
        else
            u226(v363)
        end
        if u17:IsOpen("Season") then
            task.wait(math.random() / 2)
        end
    end
end
for _, v367 in u62.HUD.Right:GetChildren() do
    if v367:IsA("GuiObject") then
        v360(v367)
    end
end
local function v373() --[[Anonymous function at line 1522]]
    --[[
    Upvalues:
        [1] = u62
    --]]
    local v368 = 0
    for _, v369 in u62.HUD.Left.Buttons:GetChildren() do
        if v369:IsA("GuiObject") and v369.Visible then
            v368 = v368 + 1
        end
    end
    local v370 = u62.HUD.Left.Buttons
    local v371 = UDim2.fromOffset
    local v372 = v368 / 4
    v370.Size = v371(370, math.floor(v372) * 70)
end
for _, v374 in u62.HUD.Left.Buttons:GetChildren() do
    if v374:IsA("GuiObject") then
        v360(v374)
        v374:GetPropertyChangedSignal("Visible"):Connect(v373)
    end
end
v373()
u37(u62.HUD.Left.Currency.Gems.Frame.Buy.Button, u38.Button.Pink)
u15(u62.HUD.Left.Currency.Gems.Frame.Buy.Button, function() --[[Anonymous function at line 1544]]
    --[[
    Upvalues:
        [1] = u54
        [2] = u17
    --]]
    task.defer(function() --[[Anonymous function at line 1545]]
        --[[
        Upvalues:
            [1] = u54
        --]]
        task.wait()
        u54.setPage("Gems")
    end)
    u17:Open("RobuxShop")
end)
local u375 = u62.HUD.Left.Currency.Bubble.Frame.Buy
u37(u375.Button, u38.Button.Pink)
u15(u375.Button, function() --[[Anonymous function at line 1555]]
    --[[
    Upvalues:
        [1] = u58
        [2] = u6
        [3] = u61
        [4] = u57
    --]]
    u58:Show()
    u6:PromptGamePassPurchase(u61, u57["Infinity Gum"].Id)
end)
u10:ConnectDataChanged("Passes", function(p376) --[[Anonymous function at line 1559]]
    --[[
    Upvalues:
        [1] = u375
    --]]
    u375.Button.Visible = not p376.Passes["Infinity Gum"]
end)
u8.Event("HatchEgg"):Connect(function(p377) --[[Anonymous function at line 1566]]
    --[[
    Upvalues:
        [1] = u27
    --]]
    if p377 ~= nil then
        u27:Play(p377)
    end
end)
u8.Event("ExclusiveHatch"):Connect(function(p378, p379) --[[Anonymous function at line 1573]]
    --[[
    Upvalues:
        [1] = u58
        [2] = u27
        [3] = u17
    --]]
    u58:Hide()
    if p379 then
        u27:Play(p378)
    else
        local v380 = table.clone(p378.Pets)
        while true do
            local v381 = #v380 > 0 and table.remove(v380, 1)
            if not v381 then
                break
            end
            u27:Play({
                ["Name"] = p378.Name,
                ["Pets"] = { v381 },
                ["Speed"] = 1
            })
            repeat
                task.wait(0.1)
            until not u27:IsHatching()
        end
    end
    u17:OpenLast(true)
end)
u8.Event("ItemsReceived"):Connect(v366)
u8.Event("Notification"):Connect(u29)
local function u383() --[[Anonymous function at line 1604]]
    --[[
    Upvalues:
        [1] = u17
        [2] = u62
    --]]
    local v382 = u17:IsAnyOpen()
    u62.Notifications.AnchorPoint = Vector2.new(0.5, v382 and 1 or 0)
    u62.Notifications.Position = v382 and UDim2.new(0.5, 0, 0, 100) or UDim2.new(0.5, 0, 1, -210)
    u62.Notifications.UIListLayout.VerticalAlignment = v382 and Enum.VerticalAlignment.Top or Enum.VerticalAlignment.Bottom
end
u17:BindOnOpened("any", function() --[[Anonymous function at line 1610]]
    --[[
    Upvalues:
        [1] = u53
        [2] = u383
    --]]
    if not u53.Active then
        u383()
    end
end)
u17:BindOnClosed("any", function() --[[Anonymous function at line 1616]]
    --[[
    Upvalues:
        [1] = u53
        [2] = u383
    --]]
    if not u53.Active then
        u383()
    end
end)
local u384 = u62.HUD.Left.Currency.Bubble
u10:ConnectDataChanged({ "Passes", "OGData", "Bubble" }, function(p385) --[[Anonymous function at line 1627]]
    --[[
    Upvalues:
        [1] = u11
        [2] = u384
        [3] = u39
        [4] = u13
        [5] = u62
    --]]
    local _ = p385.Bubble.Gum
    local v386 = u11(p385.Bubble.Amount)
    if p385.Passes["Infinity Gum"] then
        u384.Frame.Label.Text = u39.autoStroke((("%* / <font size=\"58\">\226\136\158</font>"):format(v386)))
    else
        local v387 = u13:GetBubbleStorage(p385)
        u384.Frame.Label.Text = u39.autoStroke((("%*<font size=\"32\"> / %*</font>"):format(v386, (u11(v387)))))
    end
    task.defer(function() --[[Anonymous function at line 1638]]
        --[[
        Upvalues:
            [1] = u384
            [2] = u62
        --]]
        local v388 = u384.Frame.Label.TextBounds.X / u62.UIScale.Scale
        local v389 = u384
        local v390 = UDim2.fromOffset
        local v391 = v388 + 85
        v389.Size = v390(math.max(v391, 300), 55)
    end)
end)
u5.InputBegan:Connect(function(p392, p393) --[[Anonymous function at line 1645]]
    --[[
    Upvalues:
        [1] = u49
        [2] = u21
        [3] = u41
        [4] = u5
        [5] = u62
    --]]
    if not p393 and u49.Mode == "Touch" then
        u21:Hide()
    end
    if not (p393 or u41()) then
        if (u5:IsKeyDown(Enum.KeyCode.LeftShift) or u5:IsKeyDown(Enum.KeyCode.RightShift)) and p392.KeyCode == Enum.KeyCode.L then
            u62.HUD.Visible = not u62.HUD.Visible
        end
    end
end)
local u394 = u62.HUD.Right.RobuxShop.Radial
u3.Heartbeat:Connect(function(p395) --[[Anonymous function at line 1661]]
    --[[
    Upvalues:
        [1] = u394
    --]]
    u394.Rotation = (u394.Rotation + p395 * 20) % 360
end)
local function v398() --[[Anonymous function at line 1665]]
    --[[
    Upvalues:
        [1] = u42
        [2] = u62
    --]]
    local v396 = u42
    local v397 = not u62.HUD.Visible
    if v397 then
        v397 = not u62.IslandRace.Visible
    end
    v396.Faded = v397
end
u62.HUD:GetPropertyChangedSignal("Visible"):Connect(v398)
u62.IslandRace:GetPropertyChangedSignal("Visible"):Connect(v398)
local u399 = u62.HUD.Right.UIListLayout
u49.Changed:Connect(function() --[[Function name: updateRightListAlign, line 1675]]
    --[[
    Upvalues:
        [1] = u49
        [2] = u399
        [3] = u62
    --]]
    local v400 = u49.Mode == "Touch"
    u399.VerticalAlignment = v400 and Enum.VerticalAlignment.Center or Enum.VerticalAlignment.Bottom
    u62.HUD.Right.Position = UDim2.new(1, -30, 1, v400 and -100 or -30)
end)
local v401 = u49.Mode == "Touch"
u399.VerticalAlignment = v401 and Enum.VerticalAlignment.Center or Enum.VerticalAlignment.Bottom
u62.HUD.Right.Position = UDim2.new(1, -30, 1, v401 and -100 or -30)
task.spawn(function() --[[Anonymous function at line 1689]]
    --[[
    Upvalues:
        [1] = u7
    --]]
    while not pcall(function() --[[Anonymous function at line 1690]]
        --[[
        Upvalues:
            [1] = u7
        --]]
        u7:SetCoreGuiEnabled(Enum.CoreGuiType.Health, false)
    end) do
        task.wait(0.1)
    end
end)
return {
    ["displayItemsReceived"] = v366,
    ["islandDiscovery"] = v275
}