--devbgascension

-- Bytecode (Base64):
-- 

local v1 = game:GetService("Players")
local v2 = game:GetService("ReplicatedStorage")
local v3 = game:GetService("RunService")
local u4 = game:GetService("TweenService")
local u5 = game:GetService("UserInputService")
require(v2.Shared.Types)
local v6 = require(v2.Shared.Framework.Classes.Signal)
require(v2.Client.Framework.Utilities.UserInput)
local u7 = require(v2.Client.Gui.Utils.ClickableButton)
local u8 = require(v2.Shared.Data.Eggs)
local v9 = require(v2.Shared.Framework.Classes.Pool)
local u10 = require(v2.Shared.Utils.Stats.ItemUtil)
require(v2.Shared.Framework.Utilities.String.FormatCommas)
local u11 = require(v2.Shared.Framework.Utilities.String.FormatPercent)
local u12 = require(v2.Shared.Data.Pets)
local u13 = require(v2.Shared.Constants)
local u14 = require(v2.Shared.Utils.AnimateColor)
local u15 = require(v2.Client.Framework.Services.LocalData)
local u16 = require(v2.Shared.Data.Currency)
local u17 = require(v2.Shared.Palette)
local u18 = require(v2.Client.Gui.GuiFrame)
local u19 = require(v2.Shared.Framework.Network.Remote)
local u20 = require(v2.Client.Gui.Tooltip)
local u21 = require(v2.Shared.Data.Builders.TooltipBuilder)
local v22 = require(v2.Client.Gui.HookKeybind)
local u23 = require(v2.Shared.Data.Chests)
local u24 = require(v2.Shared.Framework.Utilities.Table.Array)
local v25 = require(v2.Shared.Framework.Utilities.every)
local u26 = require(v2.Shared.Framework.Utilities.Table.DeepCopy)
local u27 = require(v2.Shared.Utils.RichText)
local u28 = require(v2.Shared.Utils.Stats.StatsUtil)
local u29 = require(v2.Shared.Utils.GetInfinityEgg)
require(v2.Client.Framework.Utilities.Gui.HookScrollingFrame)
local u30 = require(v2.Client.Gui.Utils.AutoButtonColor)
require(v2.Shared.Framework.Utilities.Table.CountKeys)
local v31 = require(v2.Shared.Framework.Network.Bindable)
local u32 = require(v2.Shared.Framework.Utilities.String.FormatSuffix)
local u33 = require(v2.Shared.Framework.Utilities.Math.Time)
local u34 = require(v2.Shared.Utils.ApplyMultiplierToPool)
local u35 = require(v2.Shared.Utils.WorldUtil)
local u36 = require(v2.Shared.Utils.IndexUtil)
local u37 = require(v2.Shared.Data.Rifts)
local v38 = require(v2.Shared.Utils.CurrencyUtil)
local u39 = require(v2.Client.Tutorial)
local u40 = require(v2.Shared.Data.Builders.LootPoolBuilder)
local u41 = require(v2.Client.Gui.Utils.Shiny)
local u42 = require(v2.Shared.Framework.Utilities.ProductInfo)
local u43 = require(v2.Shared.Utils.GetInfinityChest)
local u44 = require(v2.Client.Framework.Services.InputMode)
local u45 = require(v2.Shared.Data.Builders.PromptBuilder)
local u46 = require(v2.Client.Gui.Prompt)
local u47 = require(v2.Shared.Utils.GetEggPool)
local u48 = require(v2.Shared.Data.Worlds)
local u49 = workspace.CurrentCamera
local u50 = v1.LocalPlayer
local u51 = u50.PlayerGui.ScreenGui
local u52 = u51.HUD.LootPoolViewer
u52.Visible = false
local u53 = u52.Content.Items.Template
u53.Parent = nil
local u54 = {
    ["_root"] = nil,
    ["_lastCost"] = nil,
    ["Activated"] = v6.new()
}
local u55 = 1
local u56 = 1
local u57 = 6
local u58 = nil
local u59 = nil
local u60 = nil
local u84 = v9.new(function() --[[Anonymous function at line 87]]
    --[[
    Upvalues:
        [1] = u53
        [2] = u58
        [3] = u15
        [4] = u52
        [5] = u8
        [6] = u21
        [7] = u36
        [8] = u27
        [9] = u20
        [10] = u7
        [11] = u12
        [12] = u19
        [13] = u45
        [14] = u17
        [15] = u30
        [16] = u46
    --]]
    local u61 = u53:Clone()
    local function u71() --[[Anonymous function at line 90]]
        --[[
        Upvalues:
            [1] = u58
            [2] = u61
            [3] = u15
            [4] = u52
            [5] = u8
            [6] = u21
            [7] = u36
            [8] = u27
        --]]
        local v62 = u58
        if v62 then
            v62 = u58[u61.LayoutOrder]
        end
        if v62 then
            local v63 = u15:Get()
            if v63 then
                if u52.Label.Text ~= "Infinity Egg" then
                    if v62.Item.Type ~= "Pet" then
                        return u21.fromItem(v62.Item)
                    end
                    local v64 = u8[u52.Label.Text]
                    if v64 then
                        v64 = v64.ProductId ~= nil
                    end
                    local v65 = u21.fromItem(v62.Item)
                    if u8[u52.Label.Text] then
                        if not (v64 or u36:HasAny(v63, u61.Name)) then
                            return
                        end
                        local u66 = v63.AutoDelete[u61.Name]
                        if not v64 then
                            local v67 = v65.Elements
                            table.insert(v67, {
                                ["Type"] = "Padding",
                                ["Size"] = 6
                            })
                            local v68 = v65.Elements
                            local v70 = {
                                ["Type"] = "Text",
                                ["Size"] = 24,
                                ["Text"] = u27.autoStroke(u66 and "Auto Deleting" or "Select to Auto Delete!"),
                                ["Callback"] = function(p69) --[[Function name: Callback, line 120]]
                                    --[[
                                    Upvalues:
                                        [1] = u66
                                    --]]
                                    p69.TextColor3 = u66 and Color3.fromRGB(255, 38, 38) or Color3.fromRGB(96, 218, 255)
                                end
                            }
                            table.insert(v68, v70)
                        end
                    end
                    return v65
                end
            end
        else
            return
        end
    end
    u20:OnEnter(u61.Button, function() --[[Anonymous function at line 133]]
        --[[
        Upvalues:
            [1] = u71
        --]]
        return u71()
    end)
    u7(u61.Button, function() --[[Anonymous function at line 137]]
        --[[
        Upvalues:
            [1] = u52
            [2] = u15
            [3] = u8
            [4] = u61
            [5] = u12
            [6] = u71
            [7] = u20
            [8] = u19
            [9] = u45
            [10] = u27
            [11] = u17
            [12] = u30
            [13] = u7
            [14] = u46
        --]]
        if u52.Label.Text == "Infinity Egg" then
            return
        else
            local u72 = u15:Get()
            if u72 then
                local v73 = u8[u52.Label.Text]
                if not (v73 and v73.ProductId) then
                    local u74 = u61.Name
                    local v75 = u12[u74]
                    if v75 then
                        if (v75.Rarity == "Legendary" or v75.Rarity == "Secret") and not u72.AutoDelete[u74] then
                            local v81 = u45.new("Delete"):Text((("Are you sure you want to auto delete this %*?"):format((u27.autoColor("Legendary Pet", u17.Text.Yellow))))):Button(function(p76, u77) --[[Anonymous function at line 170]]
                                --[[
                                Upvalues:
                                    [1] = u30
                                    [2] = u17
                                    [3] = u7
                                    [4] = u72
                                    [5] = u74
                                    [6] = u71
                                    [7] = u20
                                    [8] = u19
                                --]]
                                p76.Label.Text = "Yes"
                                u30(p76, u17.Button.Green)
                                u7(p76, function() --[[Anonymous function at line 173]]
                                    --[[
                                    Upvalues:
                                        [1] = u77
                                        [2] = u72
                                        [3] = u74
                                        [4] = u71
                                        [5] = u20
                                        [6] = u19
                                    --]]
                                    u77()
                                    if u72.AutoDelete[u74] then
                                        u72.AutoDelete[u74] = nil
                                    else
                                        u72.AutoDelete[u74] = true
                                    end
                                    local v78 = u71()
                                    if v78 then
                                        u20:Apply(v78, true)
                                    end
                                    u19:FireServer("ToggleAutoDelete", u74)
                                end)
                            end):Button(function(p79, u80) --[[Anonymous function at line 178]]
                                --[[
                                Upvalues:
                                    [1] = u30
                                    [2] = u17
                                    [3] = u7
                                --]]
                                p79.Label.Text = "Close"
                                u30(p79, u17.Button.Red)
                                u7(p79, function() --[[Anonymous function at line 181]]
                                    --[[
                                    Upvalues:
                                        [1] = u80
                                    --]]
                                    u80()
                                end)
                            end)
                            u20:Hide()
                            u46(v81:Build())
                            return
                        end
                        if u72.AutoDelete[u74] then
                            u72.AutoDelete[u74] = nil
                        else
                            u72.AutoDelete[u74] = true
                        end
                        local v82 = u71()
                        if v82 then
                            u20:Apply(v82, true)
                        end
                        u19:FireServer("ToggleAutoDelete", u74)
                    end
                end
            else
                return
            end
        end
    end, function() --[[Anonymous function at line 191]]
        --[[
        Upvalues:
            [1] = u61
        --]]
        return u61.Button.Icon.Label.ImageColor3 ~= Color3.new()
    end)
    return u61
end, function(p83) --[[Anonymous function at line 196]]
    --[[
    Upvalues:
        [1] = u14
    --]]
    p83.Button.Icon.Label.ImageColor3 = Color3.new()
    u14.None(p83.Button.Label)
end)
local function u89() --[[Anonymous function at line 202]]
    --[[
    Upvalues:
        [1] = u54
        [2] = u49
        [3] = u44
        [4] = u52
        [5] = u51
    --]]
    local v85 = u54._root
    if v85 then
        local v86, v87 = u49:WorldToScreenPoint(v85.Position)
        local v88 = u44.Mode == "Touch" and 150 or 0
        u52.Visible = v87
        u52.Position = UDim2.fromOffset(v86.X / u51.UIScale.Scale, v86.Y / u51.UIScale.Scale + v88)
    else
        u52.Visible = false
    end
end
local function u91(_) --[[Anonymous function at line 215]]
    --[[
    Upvalues:
        [1] = u52
        [2] = u51
    --]]
    local v90 = u52.Content.Items.UIGridLayout.AbsoluteContentSize / u51.UIScale.Scale
    u52.Size = UDim2.fromOffset(380, v90.Y + 40)
end
local u92 = 0
local u93 = 0
local u94 = TweenInfo.new(0.35, Enum.EasingStyle.Linear)
local function u102(p95) --[[Anonymous function at line 256]]
    --[[
    Upvalues:
        [1] = u58
        [2] = u52
        [3] = u4
        [4] = u94
        [5] = u10
        [6] = u56
        [7] = u57
        [8] = u84
        [9] = u11
        [10] = u14
        [11] = u41
        [12] = u13
        [13] = u59
        [14] = u93
        [15] = u55
    --]]
    if not u58 then
        return
    end
    if p95 then
        local u96 = u52.Content.Items:Clone()
        u96.Name = "Visual"
        u52.Content.Items.Position = UDim2.fromScale(1.5, 0.5)
        u96.Parent = u52.Content
        u4:Create(u52.Content.Items, u94, {
            ["Position"] = UDim2.fromScale(0.5, 0.5)
        }):Play()
        u4:Create(u96, u94, {
            ["Position"] = UDim2.fromScale(-1.5, 0.5)
        }):Play()
        task.delay(u94.Time, function() --[[Anonymous function at line 267]]
            --[[
            Upvalues:
                [1] = u96
                [2] = u10
            --]]
            for _, v97 in u96:GetChildren() do
                if v97:IsA("Frame") then
                    u10:UpdateIcon(v97.Button.Icon)
                end
            end
            u96:Destroy()
        end)
    end
    for v98 = (u56 - 1) * u57 + 1, u56 * u57 do
        local v99 = u58[v98]
        if not v99 then
            break
        end
        local v100 = u84:Get()
        v100.AutoDeleteHelper.Visible = false
        v100.LayoutOrder = v98
        v100.Name = u10:GetName(v99.Item)
        v100.Button.Label.Text = u11(v99.Chance, true)
        v100.Parent = u52.Content.Items
        u14.None(v100.Button.Icon.Label)
        u41:Remove(v100)
        local v101 = u10:GetRarity(v99.Item)
        if v101 == "Legendary" or v101 == "Secret" then
            u14.Cycle(v100.Button.Label, "Rainbow", {
                ["Speed"] = 0.5
            })
        else
            u14.None(v100.Button.Label)
            v100.Button.Label.TextColor3 = u13.RarityColors[v101]
        end
        if u59 then
            u59(v100, v99.Item)
        end
        u10:UpdateIcon(v100.Button.Icon, v99.Item)
    end
    u84:Done()
    u93 = os.clock()
    u52.Page.Text = ("%* / %*"):format(u56, u55)
    u52.Page.Visible = u55 > 1
end
function u54.Title(_, p103) --[[Anonymous function at line 314]]
    --[[
    Upvalues:
        [1] = u52
    --]]
    if p103 then
        u52.Label.Text = p103 or ""
        u52.Label.Highlight.Text = p103 or ""
    end
    u52.Label.Visible = p103 ~= nil
end
function u54.Cost(_, p104, p105) --[[Anonymous function at line 324]]
    --[[
    Upvalues:
        [1] = u32
        [2] = u10
        [3] = u52
        [4] = u51
        [5] = u16
        [6] = u54
    --]]
    if p104 then
        local v106 = u32(u10:GetAmount(p104) or 0, 1000000)
        local v107 = u52.Cost.Label
        if p105 then
            v106 = p105(v106) or v106
        end
        v107.Text = v106
        u10:UpdateIcon(u52.Cost.Icon, p104)
        task.defer(function() --[[Anonymous function at line 333]]
            --[[
            Upvalues:
                [1] = u52
                [2] = u51
            --]]
            u52.Cost.Label.Size = UDim2.fromOffset(u52.Cost.Label.TextBounds.X / u51.UIScale.Scale, 30)
        end)
        u52.Cost.Label.TextColor3 = p104.Type == "Currency" and u16[p104.Currency].Color or Color3.new(1, 1, 1)
    end
    u54._lastCost = p104
    u52.Cost.Icon.Visible = true
    u52.Cost.Visible = p104 ~= nil
end
function u54.Pool(_, p108, p109, p110) --[[Anonymous function at line 347]]
    --[[
    Upvalues:
        [1] = u24
        [2] = u10
        [3] = u55
        [4] = u56
        [5] = u58
        [6] = u57
        [7] = u59
        [8] = u102
        [9] = u91
    --]]
    local v112 = u24.from(p108):filter(function(p111) --[[Anonymous function at line 353]]
        --[[
        Upvalues:
            [1] = u10
        --]]
        return u10:GetRarity(p111.Item) ~= "Secret"
    end):table()
    local v113 = #v112 / p109
    u55 = math.ceil(v113)
    u56 = 1
    u58 = v112
    u57 = p109
    u59 = p110
    u102()
    task.defer(u91, #p108)
end
function u54.Attach(_, p114) --[[Anonymous function at line 372]]
    --[[
    Upvalues:
        [1] = u54
        [2] = u89
    --]]
    u54._root = p114
    u54.Activated:Clear()
    u89()
end
function u54.fromEgg(p115, p116) --[[Anonymous function at line 379]]
    --[[
    Upvalues:
        [1] = u15
        [2] = u92
        [3] = u58
        [4] = u52
        [5] = u8
        [6] = u54
        [7] = u35
        [8] = u50
        [9] = u28
        [10] = u47
        [11] = u60
        [12] = u10
        [13] = u12
        [14] = u36
        [15] = u39
    --]]
    local u117 = u15:Get()
    if not u117 then
        return
    end
    u92 = u92 + 1
    u58 = nil
    u52.Info.Visible = false
    u52.Keybinds["1"].Visible = true
    u52.Keybinds["2"].Visible = false
    u52.Keybinds["3"].Visible = false
    u52.Keybinds["1"].Button.Label.Text = "Use"
    u52.World.Visible = false
    local v118 = u8[p115]
    local v119 = v118 ~= nil
    local v120 = ("%* does not have valid data"):format(p115)
    assert(v119, v120)
    u54:Cost(v118.Cost)
    u54:Title(p115)
    local v121 = u35:GetPlayerWorld(u50) or "The Overworld"
    local v122 = v118.World ~= v121 and "None" or v121
    local v123 = u47(p115, v122, (u28:GetLuckMultiplier(u50, u117, v122, nil, p116)))
    u60 = p116
    u54:Pool(v123, 6, function(p124, p125) --[[Anonymous function at line 402]]
        --[[
        Upvalues:
            [1] = u10
            [2] = u12
            [3] = u36
            [4] = u117
        --]]
        if u10:GetRarity(p125) == "Secret" then
            p124.Visible = false
        else
            local _ = u12[p124.Name]
            local v126 = u36:HasAny(u117, p124.Name)
            local v127 = v126 and 0 or -10
            p124.Button.Icon.Size = UDim2.new(1, v127, 1, v127)
            p124.Button.Icon.Label.ImageColor3 = v126 and Color3.new(1, 1, 1) or Color3.new()
            p124.Button.Amount.Visible = false
            p124.Auto.Visible = u117.AutoDelete[p124.Name] ~= nil
            p124.AutoDeleteHelper.Visible = not p124.Auto.Visible and v126
        end
    end)
    for _, v128 in u117.MasteryUpgrades do
        if v128.Type == "StatEgg" then
            u52.Info.Visible = true
            break
        end
    end
    local v129 = u28:GetMaxEggHatches(u117)
    u52.Keybinds["1"].Visible = true
    u52.Keybinds["2"].Visible = not u39.Active
    u52.Keybinds["3"].Visible = v129 > 1
    u52.Keybinds["1"].Button.Label.Text = v129 > 1 and "Multi" or "Hatch"
    u52.Keybinds.UIListLayout.HorizontalAlignment = v129 > 1 and Enum.HorizontalAlignment.Center or Enum.HorizontalAlignment.Left
end
function u54.fromProductEgg(p130) --[[Anonymous function at line 434]]
    --[[
    Upvalues:
        [1] = u15
        [2] = u92
        [3] = u58
        [4] = u52
        [5] = u8
        [6] = u54
        [7] = u13
        [8] = u40
        [9] = u60
        [10] = u17
        [11] = u42
        [12] = u12
        [13] = u41
        [14] = u14
    --]]
    local u131 = u15:Get()
    if u131 then
        u92 = u92 + 1
        u58 = nil
        u52.Info.Visible = false
        u52.Keybinds["1"].Visible = true
        u52.Keybinds["2"].Visible = false
        u52.Keybinds["3"].Visible = false
        u52.Keybinds["1"].Button.Label.Text = "Use"
        u52.World.Visible = false
        local v132 = u8[p130]
        local v133 = v132 ~= nil
        local v134 = ("%* does not have valid data"):format(p130)
        assert(v133, v134)
        local v135 = v132.Pool[1].Item
        if v135.Type == "Pet" and v132.ProductId then
            u54:Title(p130)
            local v136 = 100 - u13.RobuxEggShinyChance - u13.RobuxEggMythicChance
            local v137 = u40.new():Add(v136, {
                ["Type"] = "Pet",
                ["Name"] = v135.Name
            }):Add(u13.RobuxEggShinyChance, {
                ["Type"] = "Pet",
                ["Name"] = v135.Name,
                ["Shiny"] = true
            }):Add(u13.RobuxEggMythicChance, {
                ["Type"] = "Pet",
                ["Name"] = v135.Name,
                ["Mythic"] = true
            }):Build()
            if u131.PolicyInfo.ArePaidRandomItemsRestricted == true then
                v137 = u40.new():Add(100, {
                    ["Type"] = "Pet",
                    ["Name"] = v135.Name
                }):Build()
            end
            u60 = nil
            u52.Cost.Icon.Visible = false
            u52.Cost.Visible = true
            u52.Cost.Label.TextColor3 = u17.Text.Green
            u42.fromProduct(v132.ProductId, function(p138) --[[Anonymous function at line 469]]
                --[[
                Upvalues:
                    [1] = u52
                    [2] = u13
                --]]
                u52.Cost.Label.Text = ("%*%*"):format(u13.RobuxUnicode, p138 and p138.PriceInRobux or "__")
            end)
            u54:Pool(v137, 6, function(p139, p140) --[[Anonymous function at line 473]]
                --[[
                Upvalues:
                    [1] = u12
                    [2] = u41
                    [3] = u14
                    [4] = u131
                --]]
                local _ = u12[p139.Name]
                if p140.Type == "Pet" then
                    if p140.Shiny then
                        u41:Add(p139)
                        u14.Cycle(p139.Button.Label, "Shiny", {
                            ["Speed"] = 0.4
                        })
                    elseif p140.Mythic then
                        u14.Cycle(p139.Button.Icon.Label, "MythicLight", {
                            ["Speed"] = 0.4
                        })
                        u14.Cycle(p139.Button.Label, "PotionMythic", {
                            ["Speed"] = 0.4
                        })
                    end
                end
                p139.Auto.Visible = false
                p139.Button.Icon.Size = UDim2.fromScale(1, 1)
                p139.Button.Icon.Label.ImageColor3 = Color3.new(1, 1, 1)
                p139.Button.Amount.Visible = false
                p139.Auto.Visible = u131.AutoDelete[p139.Name] ~= nil
            end)
            u52.Keybinds["1"].Visible = true
            u52.Keybinds["2"].Visible = false
            u52.Keybinds["3"].Visible = false
            u52.Keybinds["1"].Button.Label.Text = "Hatch"
            u52.Keybinds.UIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
            u52.Info.Visible = false
        end
    else
        return
    end
end
function u54.fromInfinityEgg(_) --[[Anonymous function at line 501]]
    --[[
    Upvalues:
        [1] = u15
        [2] = u29
        [3] = u50
        [4] = u92
        [5] = u58
        [6] = u52
        [7] = u54
        [8] = u13
        [9] = u84
        [10] = u34
        [11] = u28
        [12] = u36
        [13] = u11
        [14] = u14
        [15] = u10
        [16] = u60
        [17] = u48
        [18] = u91
    --]]
    local u141 = u15:Get()
    if not u141 then
        return
    end
    local u142 = u29(u50)
    if not u142 then
        return
    end
    u92 = u92 + 1
    u58 = nil
    u52.Info.Visible = false
    u52.Keybinds["1"].Visible = true
    u52.Keybinds["2"].Visible = false
    u52.Keybinds["3"].Visible = false
    u52.Keybinds["1"].Button.Label.Text = "Use"
    u52.World.Visible = false
    local u143 = u92
    u54:Cost(u142.Cost)
    u54:Title("Infinity Egg")
    local u144 = {}
    local u145 = 0
    local u146 = {}
    for v147, v148 in u13.RarityOrder do
        if #u142.Chances[v147] ~= 0 and v147 ~= "Secret" then
            local v149 = u84:Get()
            v149.LayoutOrder = v148
            v149.Parent = u52.Content.Items
            u144[v147] = v149
            u145 = u145 + 1
        end
    end
    for _, v151 in u34(u142.Rarities, u28:GetLuckMultiplier(u50, u141, "None"), function(p150) --[[Anonymous function at line 535]]
        return p150.Item == "Legendary" and true or p150.Item == "Secret"
    end) do
        u146[v151.Item] = v151.Chance
    end
    local u152 = nil
    task.spawn(function() --[[Anonymous function at line 544]]
        --[[
        Upvalues:
            [1] = u143
            [2] = u92
            [3] = u52
            [4] = u144
            [5] = u142
            [6] = u141
            [7] = u36
            [8] = u11
            [9] = u146
            [10] = u14
            [11] = u13
            [12] = u152
            [13] = u10
        --]]
        while u143 == u92 or u52.Visible == false do
            for v153, v154 in u144 do
                local v155 = u142.Chances[v153]
                local v156 = v155[math.random(1, #v155)]
                if v156.Item.Type == "Pet" then
                    v154.Auto.Visible = u141.AutoDelete[v156.Item.Name] ~= nil
                else
                    v154.Auto.Visible = false
                end
                local v157 = u36:HasAny(u141, v156.Item.Name)
                local v158 = v157 and 0 or -10
                v154.Button.Icon.Size = UDim2.new(1, v158, 1, v158)
                v154.Button.Icon.Label.ImageColor3 = v157 and Color3.new(1, 1, 1) or Color3.new()
                v154.Button.Amount.Visible = false
                v154.Button.Label.Text = u11(u146[v153], true)
                if v153 == "Legendary" or v153 == "Secret" then
                    u14.Cycle(v154.Button.Label, "Rainbow", {
                        ["Speed"] = 0.4
                    })
                else
                    u14.None(v154.Button.Label)
                    v154.Button.Label.TextColor3 = u13.RarityColors[v153]
                end
                u152 = v156.Item
                u10:UpdateIcon(v154.Button.Icon, v156.Item)
            end
            task.wait(0.1)
        end
        table.clear(u144)
    end)
    for _, v159 in u141.MasteryUpgrades do
        if v159.Type == "StatEgg" then
            u52.Info.Visible = true
            break
        end
    end
    u84:Done()
    u60 = nil
    for v160, v161 in u48 do
        if v161.Order == u141.InfinityEggIndex then
            u52.World.Label.Text = v160
        end
    end
    local v162 = u28:GetMaxEggHatches(u141)
    u52.Keybinds["1"].Visible = true
    u52.Keybinds["2"].Visible = true
    u52.Keybinds["3"].Visible = v162 > 1
    u52.Keybinds["3"].Button.Label.Text = "Hatch"
    u52.World.Visible = true
    u52.Keybinds["1"].Button.Label.Text = v162 > 1 and "Multi" or "Hatch"
    u52.Keybinds.UIListLayout.HorizontalAlignment = v162 > 1 and Enum.HorizontalAlignment.Center or Enum.HorizontalAlignment.Left
    u52.Content.Items.UIGridLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Once(function() --[[Anonymous function at line 602]]
        --[[
        Upvalues:
            [1] = u91
            [2] = u145
        --]]
        task.defer(u91, u145)
    end)
    task.defer(u91, u145)
end
function u54.fromChest(p163) --[[Anonymous function at line 609]]
    --[[
    Upvalues:
        [1] = u15
        [2] = u92
        [3] = u58
        [4] = u52
        [5] = u23
        [6] = u43
        [7] = u26
        [8] = u54
        [9] = u12
        [10] = u28
        [11] = u10
    --]]
    local v164 = u15:Get()
    if v164 then
        u92 = u92 + 1
        u58 = nil
        u52.Info.Visible = false
        u52.Keybinds["1"].Visible = true
        u52.Keybinds["2"].Visible = false
        u52.Keybinds["3"].Visible = false
        u52.Keybinds["1"].Button.Label.Text = "Use"
        u52.World.Visible = false
        local v165 = u23[p163]
        local v166 = v165 ~= nil
        local v167 = ("%* does not have valid data"):format(p163)
        assert(v166, v167)
        if p163 == "Infinity Chest" then
            v165 = u43(v164)
        end
        local v168 = u26(v165.Pool)
        for _, v169 in v165.Reward do
            table.insert(v168, 1, {
                ["Item"] = v169,
                ["Chance"] = 100
            })
        end
        u54:Cost(nil)
        u54:Title(p163)
        u54:Pool(v168, 6, function(p170, p171) --[[Anonymous function at line 630]]
            --[[
            Upvalues:
                [1] = u12
                [2] = u15
                [3] = u28
                [4] = u10
            --]]
            local _ = p171.Amount or 1
            if p171.Type == "Pet" and u12[p171.Name].Rarity == "Secret" then
                p170.Button.Label.Text = "??"
            end
            local v172 = u15:Get()
            local v173
            if p171.Type == "Currency" and v172 then
                local v174 = u28:GetCurrencyMultiplier(v172, p171.Currency, true)
                v173 = {
                    ["Type"] = "Currency",
                    ["Currency"] = p171.Currency
                }
                local v175 = p171.Amount * v174
                v173.Amount = math.floor(v175)
            else
                v173 = p171
            end
            p170.Visible = true
            p170.Auto.Visible = false
            p170.Button.Icon.Label.ImageColor3 = Color3.new(1, 1, 1)
            u10:FormatAmount(p170.Button.Amount, v173)
        end)
        u52.Keybinds.UIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Left
    end
end
function u54.fromRiftChest(p176) --[[Anonymous function at line 662]]
    --[[
    Upvalues:
        [1] = u37
        [2] = u15
        [3] = u92
        [4] = u58
        [5] = u52
        [6] = u54
        [7] = u10
        [8] = u12
    --]]
    local u177 = u37[p176]
    if not u177 or u177.Type ~= "Chest" then
        return
    end
    local u178 = u15:Get()
    if not u178 then
        return
    end
    u92 = u92 + 1
    u58 = nil
    u52.Info.Visible = false
    u52.Keybinds["1"].Visible = true
    u52.Keybinds["2"].Visible = false
    u52.Keybinds["3"].Visible = false
    u52.Keybinds["1"].Button.Label.Text = "Use"
    u52.World.Visible = false
    u54:Title(u177.DisplayName)
    u54:Cost(u177.Cost, function(p179) --[[Anonymous function at line 676]]
        --[[
        Upvalues:
            [1] = u10
            [2] = u178
            [3] = u177
        --]]
        return ("%* / %*"):format(u10:GetOwnedAmount(u178, u177.Cost), p179)
    end)
    u54:Pool(u177.Pool, 6, function(p180, p181) --[[Anonymous function at line 679]]
        --[[
        Upvalues:
            [1] = u12
            [2] = u10
        --]]
        if p181.Type == "Pet" and u12[p181.Name].Rarity == "Secret" then
            p180.Button.Label.Text = "??"
        end
        p180.Auto.Visible = false
        u10:FormatAmount(p180.Button.Amount, p181)
        p180.Button.Icon.Label.ImageColor3 = Color3.new(1, 1, 1)
    end)
    local v182 = false
    for _, v183 in u178.MasteryUpgrades do
        if v183.Type == "MultiChest" then
            v182 = true
            break
        end
    end
    local v184 = false
    for _, v185 in u178.MasteryUpgrades do
        if v185.Type == "AutoClaimChest" then
            v184 = true
            break
        end
    end
    u52.Keybinds["1"].Visible = true
    u52.Keybinds["2"].Visible = v184
    u52.Keybinds["3"].Visible = v182
    u52.Keybinds["3"].Button.Label.Text = "Unlock"
    u52.Keybinds["1"].Button.Label.Text = v182 and "Multi" or "Unlock"
end
function u54.fromRiftGift(p186) --[[Anonymous function at line 716]]
    --[[
    Upvalues:
        [1] = u37
        [2] = u15
        [3] = u92
        [4] = u58
        [5] = u52
        [6] = u40
        [7] = u54
        [8] = u12
        [9] = u10
    --]]
    local v187 = u37[p186]
    if v187 and v187.Type == "Gift" then
        if u15:Get() then
            u92 = u92 + 1
            u58 = nil
            u52.Info.Visible = false
            u52.Keybinds["1"].Visible = true
            u52.Keybinds["2"].Visible = false
            u52.Keybinds["3"].Visible = false
            u52.Keybinds["1"].Button.Label.Text = "Use"
            u52.World.Visible = false
            local v188 = u40.new()
            for _, v189 in v187.Items do
                v188:Add(100, v189)
            end
            u54:Title(v187.DisplayName)
            u54:Cost(nil)
            u54:Pool(v188:Build(), 6, function(p190, p191) --[[Anonymous function at line 736]]
                --[[
                Upvalues:
                    [1] = u12
                    [2] = u10
                --]]
                local _ = p191.Amount or 1
                if p191.Type == "Pet" and u12[p191.Name].Rarity == "Secret" then
                    p190.Button.Label.Text = "??"
                end
                p190.Button.Label.Text = ""
                p190.Auto.Visible = false
                p190.Button.Icon.Label.ImageColor3 = Color3.new(1, 1, 1)
                u10:FormatAmount(p190.Button.Amount, p191)
            end)
            u52.Keybinds["1"].Visible = true
            u52.Keybinds["2"].Visible = false
            u52.Keybinds["3"].Visible = false
            u52.Keybinds["1"].Button.Label.Text = "Claim"
        end
    else
        return
    end
end
u15:ConnectDataChanged(v38:GetDataKeys(), function() --[[Function name: updateCost, line 228]] end)
u15:ConnectDataChanged({ "Discovered", "AutoDelete" }, function() --[[Anonymous function at line 764]]
    --[[
    Upvalues:
        [1] = u52
        [2] = u8
        [3] = u54
        [4] = u60
    --]]
    local v192 = u52.Label.Text
    if string.find(v192, "Egg") then
        local v193 = u8[v192]
        if v193 then
            v193 = v193.ProductId ~= nil
        end
        if v192 ~= "Infinity Egg" and not v193 then
            u54.fromEgg(v192, u60)
        end
    end
end)
local u194 = Enum.KeyCode.ButtonX
local u195 = Enum.KeyCode.ButtonR1
local u196 = Enum.KeyCode.ButtonL1
local u197 = u55
local u198 = u56
local u199 = u93
for _, u200 in u52.Keybinds:GetChildren() do
    if u200:IsA("Frame") then
        local v201 = u200.Name
        local u202 = tonumber(v201) or 0
        local u203 = u200.Button:FindFirstChild("Keybind")
        if u203 then
            local v204 = "Action"
            if u202 == 1 then
                u203.Label:GetPropertyChangedSignal("Text"):Connect(function() --[[Anonymous function at line 795]]
                    --[[
                    Upvalues:
                        [1] = u200
                        [2] = u203
                    --]]
                    u200.Button.Key.Text = u203.Label.Text
                end)
                u203.Parent = nil
            else
                v204 = u202 == 2 and "Auto Hatch" or v204
            end
            v22(u203, v204, function() --[[Anonymous function at line 803]]
                --[[
                Upvalues:
                    [1] = u200
                --]]
                u200.Button:SetAttribute("Pressed", true)
                task.defer(function() --[[Anonymous function at line 805]]
                    --[[
                    Upvalues:
                        [1] = u200
                    --]]
                    u200.Button:SetAttribute("Pressed", false)
                end)
            end)
        end
        u7(u200.Button, function() --[[Anonymous function at line 812]]
            --[[
            Upvalues:
                [1] = u54
                [2] = u18
                [3] = u202
            --]]
            if u54._root then
                if not u18:IsAnyOpen() then
                    u54.Activated:Fire(u202)
                end
            else
                return
            end
        end)
    end
end
local u205 = u52.Keybinds["1"]
local u206 = u52.Keybinds["2"]
local u207 = u52.Keybinds["3"]
local function v209() --[[Anonymous function at line 832]]
    --[[
    Upvalues:
        [1] = u44
        [2] = u205
        [3] = u206
        [4] = u207
        [5] = u5
        [6] = u194
        [7] = u195
        [8] = u196
    --]]
    local v208 = u44.Mode == "Keyboard"
    u205.Button.Key.Visible = v208
    u205.Button.InputIcon.Visible = not v208
    u206.Button.Icon.Visible = v208
    u206.Button.InputIcon.Visible = not v208
    u207.Button.Key.Visible = v208
    u207.Button.InputIcon.Visible = not v208
    if u44.Mode == "Touch" then
        u205.Button.InputIcon.Image = "rbxassetid://105161765844504"
        u206.Button.InputIcon.Image = "rbxassetid://105161765844504"
        u207.Button.InputIcon.Image = "rbxassetid://105161765844504"
    elseif u44.Mode == "Gamepad" then
        u205.Button.InputIcon.Image = u5:GetImageForKeyCode(u194)
        u206.Button.InputIcon.Image = u5:GetImageForKeyCode(u195)
        u207.Button.InputIcon.Image = u5:GetImageForKeyCode(u196)
    end
end
u44.Changed:Connect(v209)
v209()
u5.InputBegan:Connect(function(p210, p211) --[[Anonymous function at line 855]]
    --[[
    Upvalues:
        [1] = u54
        [2] = u194
        [3] = u195
        [4] = u196
    --]]
    if p211 or not u54._root then
        return
    elseif p210.KeyCode == u194 then
        u54.Activated:Fire(1)
        return
    elseif p210.KeyCode == u195 then
        u54.Activated:Fire(2)
    elseif p210.KeyCode == u196 then
        u54.Activated:Fire(3)
    end
end)
u20:OnEnter(u52.Info.Button, function() --[[Anonymous function at line 873]]
    --[[
    Upvalues:
        [1] = u15
        [2] = u52
        [3] = u28
        [4] = u13
        [5] = u29
        [6] = u50
        [7] = u8
        [8] = u10
        [9] = u21
        [10] = u32
        [11] = u27
        [12] = u33
        [13] = u17
    --]]
    local v212 = u15:Get()
    if v212 then
        local v213 = u52.Label.Text
        local v214 = u28:GetMaxEggHatches(v212)
        local v215 = u28:GetHatchDuration(v212, true)
        local v216 = u13.InfinityEgg
        local v217
        if v213 == "Infinity Egg" then
            local v218 = u29(u50)
            if not v218 then
                return
            end
            v217 = v218.Cost
        else
            local v219 = u8[v213]
            if not v219 then
                return
            end
            v216 = v219.Image
            v217 = v219.Cost
        end
        if v217 then
            local v220 = u10:GetAmount(v217)
            local v221 = u10:GetOwnedAmount(v212, v217) / (v220 * v214)
            local v222 = u21.new():Width(290):Title(v216, v213, (("%* Hatched"):format((u32(v212.EggsOpened[v213] or 0)))))
            local v223 = {
                ["Type"] = "Text"
            }
            local v224 = u27.autoColor
            local v225 = u33.formatRealTime
            local v226 = v221 * v215
            v223.Text = ("You can hatch this egg for %* with your current Currency and Boosts!"):format((v224(v225((math.floor(v226))), u17.Text.Cyan)))
            v223.Size = 28
            return v222:Add(v223):Build()
        end
    end
end)
v31.Event("InfinityEggChanged"):Connect(function() --[[Anonymous function at line 920]]
    --[[
    Upvalues:
        [1] = u52
        [2] = u54
    --]]
    if u52.Label.Text == "Infinity Egg" then
        u54.fromInfinityEgg()
    end
end)
u7(u52.World.Button, function() --[[Anonymous function at line 927]]
    --[[
    Upvalues:
        [1] = u19
    --]]
    u19:FireServer("UpdateInfinityEggIndex")
end)
v3.Heartbeat:Connect(u89)
v25(0.25, function() --[[Anonymous function at line 934]]
    --[[
    Upvalues:
        [1] = u197
        [2] = u199
        [3] = u198
        [4] = u102
    --]]
    if u197 > 1 and os.clock() - u199 > 4 then
        u198 = u198 + 1
        if u197 < u198 then
            u198 = 1
        end
        u102(true)
    end
end)
return u54