--devbgascension

-- Bytecode (Base64):
-- 

local v1 = game:GetService("Players")
local v2 = game:GetService("ReplicatedStorage")
local u3 = require(v2.Client.Framework.Services.LocalData)
require(v2.Shared.Types)
local u4 = require(v2.Shared.Constants)
local u5 = require(v2.Client.Gui.Utils.AutoButtonColor)
local u6 = require(v2.Shared.Palette)
local u7 = require(v2.Client.Gui.Utils.ClickableButton)
local v8 = require(v2.Client.Framework.Utilities.Gui.HookScrollingFrame)
local u9 = require(v2.Client.Gui.GuiFrame)
local u10 = require(v2.Shared.Data.Enchants)
local u11 = require(v2.Shared.Utils.EnchantUtil)
local u12 = require(v2.Shared.Framework.Utilities.String.FormatPercent)
require(v2.Shared.Framework.Utilities.String.FormatRomanNumeral)
local u13 = require(v2.Shared.Framework.Utilities.String.FormatSuffix)
local v14 = require(v2.Shared.Data.Flavors)
local u15 = require(v2.Shared.Data.Currency)
local u16 = require(v2.Shared.Utils.Stats.PetUtil)
local u17 = require(v2.Client.Gui.PetEntryAppearance)
local u18 = require(v2.Client.Gui.Frames.PetChoosePrompt)
local v19 = require(v2.Client.Gui.Utils.UpdateWhileGuiOpen)
local u20 = require(v2.Shared.Framework.Network.Remote)
local u21 = require(v2.Shared.Framework.Utilities.String.FormatCommas)
local u22 = require(v2.Shared.Data.Pets)
local u23 = require(v2.Client.Gui.Utils.Notification)
local u24 = require(v2.Shared.Utils.RichText)
local u25 = require(v2.Client.Gui.Utils.CheckInventorySpace)
local u26 = require(v2.Shared.Utils.Stats.ItemUtil)
local u27 = require(v2.Client.Gui.Prompt)
local u28 = require(v2.Shared.Data.Builders.PromptBuilder)
local u29 = require(v2.Client.Gui.Utils.PlayLocalSound)
local v30 = v1.LocalPlayer.PlayerGui.ScreenGui
local u31 = v30.UIScale
local u32 = v30.Enchants.Frame
local u33 = u32.Inner.Details
u33.Main.Stats.Bubbles.Icon.Image = v14["Bubble Gum"].Image
u33.Main.Stats.Bubbles.Amount.TextColor3 = v14["Bubble Gum"].Color
u33.Main.Stats.Gems.Icon.Image = u15.Gems.Image
u33.Main.Stats.Gems.Amount.TextColor3 = u15.Gems.Color
local function v40() --[[Anonymous function at line 51]]
    --[[
    Upvalues:
        [1] = u33
        [2] = u31
    --]]
    local v34 = u33.Main.Stats.Bubbles.Amount.TextBounds.X / u31.Scale
    local v35 = math.ceil(v34) + 1
    local v36 = u33.Main.Stats.Currency.Amount.TextBounds.X / u31.Scale
    local v37 = math.ceil(v36) + 1
    local v38 = u33.Main.Stats.Gems.Amount.TextBounds.X / u31.Scale
    local v39 = math.ceil(v38) + 1
    u33.Main.Stats.Bubbles.Amount.Size = UDim2.new(0, v35, 1, 0)
    u33.Main.Stats.Currency.Amount.Size = UDim2.new(0, v37, 1, 0)
    u33.Main.Stats.Gems.Amount.Size = UDim2.new(0, v39, 1, 0)
end
u33.Main.Stats.Bubbles.Amount:GetPropertyChangedSignal("TextBounds"):Connect(v40)
u33.Main.Stats.Currency.Amount:GetPropertyChangedSignal("TextBounds"):Connect(v40)
u33.Main.Stats.Gems.Amount:GetPropertyChangedSignal("TextBounds"):Connect(v40)
u31:GetPropertyChangedSignal("Scale"):Connect(v40)
v40()
local u41 = nil
local u42 = nil
local u43 = nil
local u44 = nil
local u45 = nil
local function u46() --[[Anonymous function at line 103]]
    --[[
    Upvalues:
        [1] = u44
        [2] = u45
        [3] = u42
        [4] = u43
    --]]
    if u44 ~= nil then
        u44 = nil
        if u45 and u45 ~= coroutine.running() then
            task.cancel(u45)
        end
        u45 = nil
        u42()
        u43()
    end
end
local v47 = 0
local u48 = u32.Inner.Main
local u49 = u48.ScrollingFrame
local v50 = u49.Template
v50.Parent = nil
u49.TemplateNotFound.Parent = nil
local u51 = v47
local u52 = u44
local u53 = u43
local u54 = u42
local u55 = u45
local u56 = {}
for u57, v58 in u10 do
    for u59 = 1, v58.Levels do
        local v60 = u11:GetIdentifier(u57, u59)
        local v61 = v50:Clone()
        v61.Name = v60
        u5(v61.Buttons.Reroll.Button, u6.Button.Purple)
        u7(v61.Buttons.Reroll.Button, function() --[[Anonymous function at line 149]]
            --[[
            Upvalues:
                [1] = u52
                [2] = u55
                [3] = u54
                [4] = u53
                [5] = u3
                [6] = u41
                [7] = u22
                [8] = u4
                [9] = u26
                [10] = u28
                [11] = u27
                [12] = u57
                [13] = u59
                [14] = u20
                [15] = u46
                [16] = u11
                [17] = u10
                [18] = u24
                [19] = u5
                [20] = u6
                [21] = u7
            --]]
            if u52 ~= nil then
                u52 = nil
                if u55 and u55 ~= coroutine.running() then
                    task.cancel(u55)
                end
                u55 = nil
                u54()
                u53()
            end
            local u62 = u3:Get()
            if not (u41 and u62) then
                return
            end
            local v63 = nil
            for _, v64 in u62.Pets do
                if v64.Id == u41 then
                    v63 = v64
                    break
                end
            end
            if v63 then
                local v65 = u22[v63.Name]
                local v66 = v65.Rarity
                local v67 = v66 == "Legendary" and (v65.Tier or 1) == 1 and "EasyLegendary" or v66
                local u68 = {
                    ["Type"] = "Currency",
                    ["Currency"] = "Gems",
                    ["Amount"] = u4.EnchantsRerollAllGemCosts[v67]
                }
                if not u26:CanAfford(u62, u68) then
                    return u27(u28.fromNotEnough(u62, u68, function(p69) --[[Anonymous function at line 182]]
                        return ("You need %* to reroll enchants!"):format(p69)
                    end):Build())
                end
                local function u76() --[[Anonymous function at line 188]]
                    --[[
                    Upvalues:
                        [1] = u52
                        [2] = u57
                        [3] = u59
                        [4] = u55
                        [5] = u41
                        [6] = u4
                        [7] = u20
                        [8] = u46
                        [9] = u3
                        [10] = u26
                        [11] = u68
                        [12] = u28
                        [13] = u62
                        [14] = u27
                        [15] = u53
                        [16] = u54
                    --]]
                    u52 = {
                        ["Type"] = "Specific",
                        ["Id"] = u57,
                        ["MinLevel"] = u59
                    }
                    u55 = task.spawn(function() --[[Anonymous function at line 194]]
                        --[[
                        Upvalues:
                            [1] = u41
                            [2] = u4
                            [3] = u20
                            [4] = u46
                            [5] = u57
                            [6] = u59
                            [7] = u3
                            [8] = u26
                            [9] = u68
                            [10] = u28
                            [11] = u62
                            [12] = u27
                        --]]
                        local v70 = u41
                        while true do
                            local v71 = os.clock() + u4.EnchantRerollCooldown
                            local v72
                            v70, v72 = u20:InvokeServer("RerollEnchants", v70)
                            if not (v70 and v72) then
                                break
                            end
                            for _, v73 in v72 do
                                if v73.Id == u57 and u59 <= v73.Level then
                                    return u46()
                                end
                            end
                            local v74 = os.clock()
                            if v74 < v71 then
                                task.wait(v71 - v74)
                            end
                            if not u26:CanAfford(u3:Get(), u68) then
                                u27(u28.fromNotEnough(u62, u68, function(p75) --[[Anonymous function at line 221]]
                                    return ("You need %* to reroll enchants!"):format(p75)
                                end):Build())
                                return u46()
                            end
                        end
                        return u46()
                    end)
                    u53()
                    u54()
                end
                local v77 = u11:GetFullTitle(u57, u59, true)
                local v78 = u10[u57]
                u27(u28.new("Are you sure?"):Text((("This will auto-reroll enchants until %* or higher!"):format((u24.autoColor(v77, v78.Color))))):Button(function(p79, u80) --[[Anonymous function at line 239]]
                    --[[
                    Upvalues:
                        [1] = u5
                        [2] = u6
                        [3] = u7
                        [4] = u76
                    --]]
                    p79.Label.Text = "Reroll"
                    u5(p79, u6.Button.Pink)
                    u7(p79, function() --[[Anonymous function at line 242]]
                        --[[
                        Upvalues:
                            [1] = u76
                            [2] = u80
                        --]]
                        u76()
                        u80()
                    end)
                end):Button(function(p81, p82) --[[Anonymous function at line 247]]
                    --[[
                    Upvalues:
                        [1] = u5
                        [2] = u6
                        [3] = u7
                    --]]
                    p81.Label.Text = "Close"
                    u5(p81, u6.Button.Red)
                    u7(p81, p82)
                end):Build())
            end
        end)
        v61.Parent = u49
        u56[v60] = v61
    end
end
v8(u49, u49.UIListLayout)
local u83 = {}
for v84, v85 in u10 do
    for v86 = 1, v85.Levels do
        table.insert(u83, {
            ["Id"] = v84,
            ["Level"] = v86
        })
    end
end
u20.Event("DiscoveredEnchants"):Connect(function(p87) --[[Anonymous function at line 279]]
    --[[
    Upvalues:
        [1] = u9
        [2] = u10
        [3] = u11
        [4] = u23
        [5] = u24
    --]]
    if u9:IsOpen("Enchants") then
        for _, v88 in p87 do
            local v89 = u10[v88.Id]
            local v90 = u11:GetFullTitle(v88.Id, v88.Level, true)
            u23((("%* enchant discovered!"):format((u24.autoColor(v90, v89.Color)))))
        end
    end
end)
u20.Event("RerollOrbSaved"):Connect(function() --[[Anonymous function at line 293]]
    --[[
    Upvalues:
        [1] = u23
        [2] = u24
        [3] = u6
    --]]
    u23((("Saved a %* using mastery!"):format((u24.autoColor("Reroll Orb", u6.Text.Yellow)))))
end)
u5(u33.Main.CancelAuto.Button, u6.Button.Red)
u7(u33.Main.CancelAuto.Button, function() --[[Anonymous function at line 303]]
    --[[
    Upvalues:
        [1] = u52
        [2] = u55
        [3] = u54
        [4] = u53
    --]]
    if u52 ~= nil then
        u52 = nil
        if u55 and u55 ~= coroutine.running() then
            task.cancel(u55)
        end
        u55 = nil
        u54()
        u53()
    end
end)
u5(u48.Auto.Cancel.Button, u6.Button.Red)
u7(u48.Auto.Cancel.Button, function() --[[Anonymous function at line 310]]
    --[[
    Upvalues:
        [1] = u52
        [2] = u55
        [3] = u54
        [4] = u53
    --]]
    if u52 ~= nil then
        u52 = nil
        if u55 and u55 ~= coroutine.running() then
            task.cancel(u55)
        end
        u55 = nil
        u54()
        u53()
    end
end)
u42 = function() --[[Function name: updateIndex, line 318]]
    --[[
    Upvalues:
        [1] = u3
        [2] = u41
        [3] = u49
        [4] = u48
        [5] = u52
        [6] = u11
        [7] = u10
        [8] = u24
        [9] = u83
        [10] = u56
        [11] = u21
        [12] = u12
    --]]
    local v91 = u3:Get()
    local v92 = not v91 and {} or v91.DiscoveredEnchants
    local v93 = nil
    if u41 and v91 then
        for _, v94 in v91.Pets do
            if v94.Id == u41 then
                v93 = v94
                break
            end
        end
    end
    if not (v93 and v91) then
        u49.Visible = false
        u48.Auto.Visible = false
        u48.Title.Visible = false
        u48.NoSelection.Visible = true
        return
    end
    if u52 ~= nil then
        u49.Visible = false
        u48.Title.Visible = false
        u48.NoSelection.Visible = false
        if u52.Type == "Max" then
            u48.Auto.AutoRoll.Visible = true
            u48.Auto.AutoEnchant.Visible = false
        else
            u48.Auto.AutoRoll.Visible = false
            u48.Auto.AutoEnchant.Visible = true
            local v95 = u11:GetFullTitle(u52.Id, u52.MinLevel, true)
            local v96 = u10[u52.Id]
            u48.Auto.AutoEnchant.Text = ("Rerolling until %* or higher!"):format((u24.autoColor(v95, v96.Color)))
        end
        u48.Auto.Visible = true
        return
    end
    u49.Visible = true
    u48.Auto.Visible = false
    u48.Title.Visible = true
    u48.NoSelection.Visible = false
    local v97 = u11:GetPossibleEnchants(v91, v93.Name)
    local v98 = 0
    for _, v99 in v97 do
        v98 = v98 + u10[v99].Levels
    end
    local v100 = 0
    for _, v101 in v97 do
        v100 = v100 + #(v92[v101] or {})
    end
    local v102 = math.min(v100, v98)
    u48.Title.Text = ("Discovered Enchants (%*/%*)"):format(v102, v98)
    local v103 = false
    for _, v104 in v91.MasteryUpgrades do
        if v104.Type == "AutoEnchant" then
            v103 = true
            break
        end
    end
    for v105, v106 in u83 do
        local v107 = v106.Id
        local v108 = v106.Level
        local v109 = u10[v107]
        local v110 = u56[u11:GetIdentifier(v107, v108)]
        local v111
        if v92[v107] == nil then
            v111 = false
        else
            v111 = table.find(v92[v107], v108) ~= nil
        end
        local v112 = table.find(v97, v107) ~= nil
        local v113 = u11:GetFullTitle(v107, v108)
        v110.Main.Title.TextColor3 = v111 and v109.Color or Color3.new(1, 1, 1)
        v110.Main.Title.Text = not v111 and "?????" or v113
        local v114
        if v111 then
            v114 = u11:GetDescription(v107, v108)
            if v107 == "high-roller" or v107 == "infinity" then
                v114 = string.gsub(v114, "DURATION", u21(v109.Metadata))
            end
        else
            v114 = "??????????"
        end
        v110.Main.Description.Text = v114
        local v115 = u11:GetChance(v91, v107, v108, v93.Name)
        v110.Main.Chance.Amount.Text = not v111 and "???" or u12(100 * v115)
        v110.BackgroundTransparency = v111 and 0.5 or 0.75
        v110.UIStroke.Transparency = v111 and 0 or 0.75
        v110.Main.Title.UIStroke.Transparency = v111 and 0 or 0.75
        v110.Main.Description.UIStroke.Transparency = v111 and 0 or 0.75
        v110.Main.Chance.Amount.UIStroke.Transparency = v111 and 0 or 0.75
        v110.Main.Chance.Label.UIStroke.Transparency = v111 and 0 or 0.75
        v110.Main.Title.TextTransparency = v111 and 0 or 0.25
        v110.Main.Description.TextTransparency = v111 and 0 or 0.25
        v110.Main.Chance.Amount.TextTransparency = v111 and 0 or 0.25
        v110.Main.Chance.Label.TextTransparency = v111 and 0 or 0.25
        local v116 = 0
        if v92[v107] then
            for _, v117 in v92[v107] do
                v116 = math.max(v116, v117)
            end
        end
        if v108 == v116 and v103 then
            v110.Buttons.Visible = true
            v110.Size = UDim2.new(1, 0, 0, 130)
        else
            v110.Buttons.Visible = false
            v110.Size = UDim2.new(1, 0, 0, 85)
        end
        v110.LayoutOrder = v105 + (v111 and 0 or 999)
        v110.Visible = v112
    end
end
u3:ConnectDataChanged("DiscoveredEnchants", u42)
u42()
local function v121() --[[Anonymous function at line 453]]
    --[[
    Upvalues:
        [1] = u3
        [2] = u32
        [3] = u13
    --]]
    local v118 = u3:Get()
    local v119 = not v118 and 0 or v118.Gems
    local v120 = v118 and v118.Powerups["Reroll Orb"] or 0
    u32.Tray.Gems.Amount.Label.Text = u13(v119, 10000)
    u32.Tray.Orbs.Amount.Label.Text = u13(v120, 10000)
    u32.Tray.Orbs.Visible = v120 > 0
end
local function v124() --[[Anonymous function at line 462]]
    --[[
    Upvalues:
        [1] = u32
        [2] = u31
    --]]
    local v122 = u32.Tray.Gems.Amount.Label.TextBounds.X / u31.Scale
    local v123 = math.ceil(v122) + 1
    u32.Tray.Gems.Amount.Label.Size = UDim2.new(0, v123, 1, 0)
    u32.Tray.Gems.Size = UDim2.new(0, v123 + 130, 1, 0)
end
u32.Tray.Gems.Amount.Label:GetPropertyChangedSignal("TextBounds"):Connect(v124)
u31:GetPropertyChangedSignal("Scale"):Connect(v124)
v124()
local function v127() --[[Anonymous function at line 472]]
    --[[
    Upvalues:
        [1] = u32
    --]]
    local v125 = u32.Tray.Orbs.Amount.Label.TextBounds.X
    local v126 = math.ceil(v125) + 1
    u32.Tray.Orbs.Amount.Label.Size = UDim2.new(0, v126, 1, 0)
    u32.Tray.Orbs.Size = UDim2.new(0, v126 + 130, 1, 0)
end
u32.Tray.Orbs.Amount.Label:GetPropertyChangedSignal("TextBounds"):Connect(v127)
u31:GetPropertyChangedSignal("Scale"):Connect(v127)
v127()
u3:ConnectDataChanged({ "Gems", "Powerups" }, v121)
v121()
local v128 = u33.Main.Enchants.Template
v128.Parent = nil
local v129 = u33.Main.Enchants.TemplateEmpty
v129.Parent = nil
local u130 = u42
local u131 = {}
local function u147(u132, p133) --[[Anonymous function at line 488]]
    --[[
    Upvalues:
        [1] = u3
        [2] = u41
        [3] = u10
        [4] = u11
        [5] = u28
        [6] = u24
        [7] = u5
        [8] = u6
        [9] = u7
        [10] = u27
    --]]
    local v134 = u3:Get()
    if not (v134 and u41) then
        return u132()
    end
    local v135 = nil
    for _, v136 in v134.Pets do
        if v136.Id == u41 then
            v135 = v136
            break
        end
    end
    if not (v135 and v135.Enchants) then
        return u132()
    end
    local v137 = nil
    local v138 = nil
    for v139, v140 in v135.Enchants do
        if (not p133 or v139 == p133) and (v140.Level == 5 or u10[v140.Id].Special == true) then
            v138 = v140.Level
            v137 = v140.Id
            break
        end
    end
    if not v137 then
        return u132()
    end
    local v141 = u10[v137]
    local v142 = u11:GetFullTitle(v137, v138, true)
    u27(u28.new("Reroll?"):Text((("Are you sure you want to reroll your %* Enchant?"):format((u24.autoColor(v142, v141.Color))))):Button(function(p143, u144) --[[Anonymous function at line 528]]
        --[[
        Upvalues:
            [1] = u5
            [2] = u6
            [3] = u7
            [4] = u132
        --]]
        p143.Label.Text = "Reroll"
        u5(p143, u6.Button.Pink)
        u7(p143, function() --[[Anonymous function at line 531]]
            --[[
            Upvalues:
                [1] = u132
                [2] = u144
            --]]
            u132()
            u144()
        end)
    end):Button(function(p145, p146) --[[Anonymous function at line 536]]
        --[[
        Upvalues:
            [1] = u5
            [2] = u6
            [3] = u7
        --]]
        p145.Label.Text = "Close"
        u5(p145, u6.Button.Red)
        u7(p145, p146)
    end):Build())
end
for v148 = 1, 2 do
    local v149 = v129:Clone()
    v149.Name = ("EmptySlot%*"):format(v148)
    v149.LayoutOrder = v148
    v149.Visible = false
    v149.Parent = u33.Main.Enchants
    u131[v148] = v149
end
local u150 = {}
for u151 = 1, 2 do
    local v152 = v128:Clone()
    v152.Name = ("Enchant%*"):format(u151)
    v152.LayoutOrder = u151
    u5(v152.Reroll.Button, u6.Button.Default)
    u7(v152.Reroll.Button, function() --[[Anonymous function at line 578]]
        --[[
        Upvalues:
            [1] = u51
            [2] = u4
            [3] = u3
            [4] = u41
            [5] = u26
            [6] = u28
            [7] = u27
            [8] = u25
            [9] = u147
            [10] = u29
            [11] = u20
            [12] = u151
        --]]
        if os.clock() - u51 < u4.EnchantRerollCooldown then
            return
        else
            local v153 = u3:Get()
            if v153 and u41 then
                local v154 = u4.EnchantsRerollOneCost
                if u26:CanAfford(v153, v154) then
                    if u25(v153) then
                        u147(function() --[[Anonymous function at line 600]]
                            --[[
                            Upvalues:
                                [1] = u29
                                [2] = u51
                                [3] = u20
                                [4] = u41
                                [5] = u151
                            --]]
                            task.spawn(function() --[[Anonymous function at line 68]]
                                --[[
                                Upvalues:
                                    [1] = u29
                                --]]
                                for _ = 1, 2 do
                                    u29("Upgrade")
                                    task.wait(0.15 + math.random() / 10)
                                end
                            end)
                            u29("EnchantDiscover")
                            u51 = os.clock()
                            u20:FireServer("RerollEnchant", u41, u151)
                        end, u151)
                    end
                else
                    return u27(u28.fromNotEnough(v153, v154, function(p155) --[[Anonymous function at line 590]]
                        return ("You need %* to reroll an individual enchant!"):format(p155)
                    end):Build())
                end
            else
                return
            end
        end
    end)
    v152.Parent = u33.Main.Enchants
    u150[u151] = v152
end
local u156 = u33.Main.Buttons.RerollAll.Button
u43 = function() --[[Function name: updateDetails, line 626]]
    --[[
    Upvalues:
        [1] = u3
        [2] = u41
        [3] = u33
        [4] = u17
        [5] = u16
        [6] = u15
        [7] = u13
        [8] = u150
        [9] = u10
        [10] = u11
        [11] = u21
        [12] = u26
        [13] = u4
        [14] = u52
        [15] = u131
        [16] = u156
        [17] = u22
    --]]
    local v157 = u3:Get()
    if not v157 then
        return
    end
    local v158 = nil
    for _, v159 in v157.Pets do
        if v159.Id == u41 then
            v158 = v159
            break
        end
    end
    if v158 then
        u33.NoSelection.Visible = false
        u33.Main.Visible = true
        u17.set(u33.Main.Icon, v158, false, false)
        u33.Main.PetName.Text = v158.Name
        local v160 = u16:GetStats(v158, v157)
        local v161 = v160.Bubbles or 0
        local v162 = v160.Gems or 0
        local v163 = "Coins"
        for v164 in u15 do
            if v160[v164] and (v164 ~= "Gems" and v164 ~= "Bubbles") then
                v163 = v164
                break
            end
        end
        local v165 = v160[v163] or 0
        u33.Main.Stats.Bubbles.Amount.Text = ("+%*"):format((u13(v161)))
        local v166 = u33.Main.Stats.Gems.Amount
        local v167 = "x%*"
        local v168
        if v162 >= 10 then
            v168 = u13(v162)
        else
            v168 = string.format("%0.1f", v162):gsub("0+$", ""):gsub("%.$", "")
        end
        v166.Text = v167:format(v168)
        local v169 = u33.Main.Stats.Currency.Amount
        local v170 = "x%*"
        local v171
        if v165 >= 10 then
            v171 = u13(v165)
        else
            v171 = string.format("%0.1f", v165):gsub("0+$", ""):gsub("%.$", "")
        end
        v169.Text = v170:format(v171)
        u33.Main.Stats.Currency.Icon.Image = u15[v163].Image
        u33.Main.Stats.Currency.Amount.TextColor3 = u15[v163].Color
        local v172 = v162 > 0 and 3 or 2
        local v173 = v158.Enchants and #v158.Enchants or 0
        UDim2.new(0, 0, 0, 0)
        local v174, v175
        if v172 == 2 or v173 == 0 then
            v174 = UDim2.new(1, 0, 0, 45)
            v175 = 35
        elseif v173 == 1 then
            v174 = UDim2.new(1, 0, 0, 42)
            v175 = 33
        else
            v174 = UDim2.new(1, 0, 0, 32)
            v175 = 32
        end
        u33.Main.Stats.Bubbles.Size = v174
        u33.Main.Stats.Bubbles.Amount.TextSize = v175
        u33.Main.Stats.Gems.Size = v174
        u33.Main.Stats.Gems.Amount.TextSize = v175
        u33.Main.Stats.Currency.Size = v174
        u33.Main.Stats.Currency.Amount.TextSize = v175
        u33.Main.Stats.Gems.Visible = v162 > 0
        local v176 = v158.Enchants or {}
        for v177 = 1, 2 do
            local v178 = u150[v177]
            local v179 = v176[v177]
            if v179 then
                local v180 = u10[v179.Id]
                local v181 = u11:GetFullTitle(v179.Id, v179.Level)
                v178.Title.TextColor3 = v180.Color or Color3.new(1, 1, 1)
                v178.Title.Text = v181
                local v182 = u11:GetDescription(v179.Id, v179.Level)
                if v179.Id == "high-roller" or v179.Id == "infinity" then
                    v182 = string.gsub(v182, "DURATION", u21(v180.Metadata))
                end
                v178.Description.Text = v182
                local v183 = v178.Reroll
                local v184 = u26:CanAfford(v157, u4.EnchantsRerollOneCost)
                if v184 then
                    local v185 = u52 ~= nil
                    v184 = not v185
                end
                v183.Visible = v184
                v178.Visible = true
            else
                v178.Visible = false
            end
        end
        for v186, v187 in u131 do
            local v188
            if v176[v186] == nil then
                v188 = v186 <= u11:GetMaxEnchantSlots(v158)
            else
                v188 = false
            end
            v187.Visible = v188
        end
        if #v176 == 0 then
            u156.Title.Text = "Roll Enchants"
        else
            u156.Title.Text = "Reroll All"
        end
    else
        u33.NoSelection.Visible = true
        u33.Main.Visible = false
    end
    if v158 then
        local v189 = u22[v158.Name]
        local v190 = v189.Rarity
        local v191 = v190 == "Legendary" and (v189.Tier or 1) == 1 and "EasyLegendary" or v190
        local v192 = u4.EnchantsRerollAllGemCosts[v191]
        u156.Cost.Label.Text = u21(v192)
    end
    local v193 = false
    for _, v194 in v157.MasteryUpgrades do
        if v194.Type == "AutoRoll" then
            v193 = true
            break
        end
    end
    u33.Main.CancelAuto.Visible = u52 ~= nil
    local v195 = u33.Main.Buttons.Auto
    if v193 then
        if v158 then
            local v196 = u52 ~= nil
            v158 = not v196
        end
    else
        v158 = v193
    end
    v195.Visible = v158
    u156.Visible = u52 == nil
end
u9:BindOnClosed("Enchants", function() --[[Anonymous function at line 780]]
    --[[
    Upvalues:
        [1] = u52
        [2] = u55
        [3] = u130
        [4] = u43
    --]]
    if u52 ~= nil then
        u52 = nil
        if u55 and u55 ~= coroutine.running() then
            task.cancel(u55)
        end
        u55 = nil
        u130()
        u43()
    end
end)
u5(u33.Main.Buttons.Auto.Button, u6.Button.Default)
u7(u33.Main.Buttons.Auto.Button, function() --[[Anonymous function at line 790]]
    --[[
    Upvalues:
        [1] = u52
        [2] = u55
        [3] = u130
        [4] = u43
        [5] = u3
        [6] = u41
        [7] = u22
        [8] = u4
        [9] = u26
        [10] = u28
        [11] = u27
        [12] = u20
        [13] = u46
        [14] = u10
        [15] = u5
        [16] = u6
        [17] = u7
    --]]
    if u52 ~= nil then
        u52 = nil
        if u55 and u55 ~= coroutine.running() then
            task.cancel(u55)
        end
        u55 = nil
        u130()
        u43()
    end
    local u197 = u3:Get()
    if not (u41 and u197) then
        return
    end
    local v198 = nil
    for _, v199 in u197.Pets do
        if v199.Id == u41 then
            v198 = v199
            break
        end
    end
    if v198 then
        local v200 = u22[v198.Name]
        local v201 = v200.Rarity
        local v202 = v201 == "Legendary" and (v200.Tier or 1) == 1 and "EasyLegendary" or v201
        local u203 = {
            ["Type"] = "Currency",
            ["Currency"] = "Gems",
            ["Amount"] = u4.EnchantsRerollAllGemCosts[v202]
        }
        if not u26:CanAfford(u197, u203) then
            return u27(u28.fromNotEnough(u197, u203, function(p204) --[[Anonymous function at line 822]]
                return ("You need %* to reroll enchants!"):format(p204)
            end):Build())
        end
        local function u211() --[[Anonymous function at line 828]]
            --[[
            Upvalues:
                [1] = u52
                [2] = u55
                [3] = u4
                [4] = u20
                [5] = u41
                [6] = u46
                [7] = u43
                [8] = u10
                [9] = u3
                [10] = u26
                [11] = u203
                [12] = u28
                [13] = u197
                [14] = u27
                [15] = u130
            --]]
            u52 = {
                ["Type"] = "Max"
            }
            u55 = task.spawn(function() --[[Anonymous function at line 832]]
                --[[
                Upvalues:
                    [1] = u4
                    [2] = u20
                    [3] = u41
                    [4] = u46
                    [5] = u43
                    [6] = u10
                    [7] = u3
                    [8] = u26
                    [9] = u203
                    [10] = u28
                    [11] = u197
                    [12] = u27
                --]]
                while true do
                    local v205 = os.clock() + u4.EnchantRerollCooldown
                    local v206, v207 = u20:InvokeServer("RerollEnchants", u41)
                    if not (v206 and v207) then
                        break
                    end
                    if v206 ~= u41 then
                        u41 = v206
                        u43()
                    end
                    for _, v208 in v207 do
                        if v208.Level == 5 or u10[v208.Id].Special == true then
                            return u46()
                        end
                    end
                    local v209 = os.clock()
                    if v209 < v205 then
                        task.wait(v205 - v209)
                    end
                    if not u26:CanAfford(u3:Get(), u203) then
                        u27(u28.fromNotEnough(u197, u203, function(p210) --[[Anonymous function at line 861]]
                            return ("You need %* to reroll enchants!"):format(p210)
                        end):Build())
                        return u46()
                    end
                end
                return u46()
            end)
            u43()
            u130()
        end
        u27(u28.new("Are you sure?"):Text("This will auto-reroll enchants until a <font color=\"rgb(255, 233, 66)\">Level 5</font> or <font color=\"rgb(192, 114, 255)\">Special</font> enchant!"):Button(function(p212, u213) --[[Anonymous function at line 878]]
            --[[
            Upvalues:
                [1] = u5
                [2] = u6
                [3] = u7
                [4] = u211
            --]]
            p212.Label.Text = "Reroll"
            u5(p212, u6.Button.Pink)
            u7(p212, function() --[[Anonymous function at line 881]]
                --[[
                Upvalues:
                    [1] = u211
                    [2] = u213
                --]]
                u211()
                u213()
            end)
        end):Button(function(p214, p215) --[[Anonymous function at line 886]]
            --[[
            Upvalues:
                [1] = u5
                [2] = u6
                [3] = u7
            --]]
            p214.Label.Text = "Close"
            u5(p214, u6.Button.Red)
            u7(p214, p215)
        end):Build())
    end
end)
u5(u156, u6.Button.Purple)
u7(u156, function() --[[Anonymous function at line 900]]
    --[[
    Upvalues:
        [1] = u51
        [2] = u4
        [3] = u3
        [4] = u41
        [5] = u22
        [6] = u26
        [7] = u28
        [8] = u27
        [9] = u25
        [10] = u29
        [11] = u147
        [12] = u20
        [13] = u43
    --]]
    if os.clock() - u51 < u4.EnchantRerollCooldown then
        return
    end
    local v216 = u3:Get()
    if not (v216 and u41) then
        return
    end
    local v217 = nil
    for _, v218 in v216.Pets do
        if v218.Id == u41 then
            v217 = v218
            break
        end
    end
    if v217 then
        local v219 = u22[v217.Name]
        local v220 = v219.Rarity
        local v221 = v220 == "Legendary" and (v219.Tier or 1) == 1 and "EasyLegendary" or v220
        local v222 = {
            ["Type"] = "Currency",
            ["Currency"] = "Gems",
            ["Amount"] = u4.EnchantsRerollAllGemCosts[v221]
        }
        if u26:CanAfford(v216, v222) then
            if u25(v216) then
                task.spawn(function() --[[Anonymous function at line 68]]
                    --[[
                    Upvalues:
                        [1] = u29
                    --]]
                    for _ = 1, 2 do
                        u29("Upgrade")
                        task.wait(0.15 + math.random() / 10)
                    end
                end)
                u29("EnchantDiscover")
                u147(function() --[[Anonymous function at line 945]]
                    --[[
                    Upvalues:
                        [1] = u51
                        [2] = u20
                        [3] = u41
                        [4] = u43
                    --]]
                    u51 = os.clock()
                    local v223 = u20:InvokeServer("RerollEnchants", u41)
                    if v223 then
                        u41 = v223
                        u43()
                    end
                end)
            end
        else
            return u27(u28.fromNotEnough(v216, v222, function(p224) --[[Anonymous function at line 933]]
                return ("You need %* to reroll enchants!"):format(p224)
            end):Build())
        end
    else
        return
    end
end)
local function v227() --[[Anonymous function at line 959]]
    --[[
    Upvalues:
        [1] = u156
        [2] = u31
    --]]
    local v225 = u156.Cost.Label.TextBounds.X / u31.Scale
    local v226 = math.ceil(v225) + 1
    u156.Cost.Label.Size = UDim2.new(0, v226, 1, 0)
end
u156.Cost.Label:GetPropertyChangedSignal("TextBounds"):Connect(v227)
u31:GetPropertyChangedSignal("Scale"):Connect(v227)
local v228 = u156.Cost.Label.TextBounds.X / u31.Scale
local v229 = math.ceil(v228) + 1
u156.Cost.Label.Size = UDim2.new(0, v229, 1, 0)
local function u233(p230) --[[Anonymous function at line 971]]
    --[[
    Upvalues:
        [1] = u52
        [2] = u55
        [3] = u130
        [4] = u43
        [5] = u18
        [6] = u11
        [7] = u41
    --]]
    if u52 ~= nil then
        u52 = nil
        if u55 and u55 ~= coroutine.running() then
            task.cancel(u55)
        end
        u55 = nil
        u130()
        u43()
    end
    u18:Open(function(p231) --[[Anonymous function at line 974]]
        --[[
        Upvalues:
            [1] = u11
        --]]
        return u11:IsEnchantable(p231)
    end, function(p232) --[[Anonymous function at line 976]]
        --[[
        Upvalues:
            [1] = u41
            [2] = u43
            [3] = u130
        --]]
        u41 = p232.Id
        u43()
        u130()
    end, "Enchants", nil, p230)
end
u5(u33.Main.Change.Button, u6.Button.Default)
u7(u33.Main.Change.Button, u233)
u5(u33.NoSelection.Choose.Button, u6.Button.Default)
u7(u33.NoSelection.Choose.Button, u233)
u5(u48.NoSelection.Choose.Button, u6.Button.Default)
u7(u48.NoSelection.Choose.Button, u233)
u43()
u130()
v19("Enchants", {
    "Pets",
    "Powerups",
    "DiscoveredEnchants",
    "MasteryLevels",
    "MasteryUpgrades"
}, function() --[[Anonymous function at line 997]]
    --[[
    Upvalues:
        [1] = u43
        [2] = u130
    --]]
    u43()
    u130()
end)
u5(u32.Top.Close.Button, u6.Button.Red)
u7(u32.Top.Close.Button, function() --[[Anonymous function at line 1006]]
    --[[
    Upvalues:
        [1] = u9
    --]]
    u9:Close()
end)
return {
    ["SetSelectedPetId"] = function(_, p234) --[[Function name: SetSelectedPetId, line 1013]]
        --[[
        Upvalues:
            [1] = u41
            [2] = u43
            [3] = u130
        --]]
        u41 = p234
        u43()
        u130()
    end,
    ["PromptSelectPet"] = function(_) --[[Function name: PromptSelectPet, line 1019]]
        --[[
        Upvalues:
            [1] = u233
        --]]
        u233(true)
    end
}