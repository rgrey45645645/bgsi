--devbgascension

-- Bytecode (Base64):
-- 

local u1 = game:GetService("ReplicatedStorage")
local u2 = game:GetService("HttpService")
local v3 = game:GetService("Players")
local u4 = game:GetService("RunService")
local u5 = game:GetService("TweenService")
local u6 = require(u1.Client.PetRender.VisualPet)
local u7 = require(u1.Shared.Framework.Utilities.Table.Array)
local u8 = require(u1.Client.PetRender)
local u9 = require(u1.Shared.Framework.Classes.Maid)
local u10 = require(u1.Shared.Utils.BoardUtil)
local u11 = require(u1.Client.Framework.Services.LocalData)
local u12 = require(u1.Shared.Framework.Network.Remote)
local u13 = require(u1.Client.Gui.Utils.PlayLocalSound)
local u14 = require(u1.Client.Gui.Utils.Notification)
local u15 = require(u1.Shared.Utils.RichText)
local u16 = require(u1.Shared.Utils.AnimateColor)
local v17 = require(u1.Shared.Framework.Classes.Pool)
local u18 = require(u1.Shared.Framework.Utilities.String.FormatPercent)
local u19 = require(u1.Client.Gui.Utils.ClickableButton)
local u20 = require(u1.Client.Framework.Utilities.Gui.Animations.SetFade)
local u21 = require(u1.Client.Activation)
local u22 = require(u1.Client.Gui.ProximityPrompt)
local u23 = require(u1.Shared.Utils.Stats.ItemUtil)
local u24 = require(u1.Shared.Palette)
local u25 = require(u1.Client.Gui.Utils.AutoButtonColor)
local u26 = require(u1.Shared.Framework.Utilities.String.FormatSuffix)
local u27 = require(u1.Client.PlayerRender)
require(u1.Shared.Types)
local u28 = require(u1.Client.Effects.Bubble)
local v29 = require(u1.Shared.Framework.Utilities.every)
local u30 = require(u1.Shared.Data.Builders.PromptBuilder)
local u31 = require(u1.Client.Gui.Prompt)
local u32 = require(u1.Client.Gui.Utils.GuiArrow)
local u33 = require(script.Dice)
local u34 = require(script.Number)
local u35 = require(script.Director)
local u36 = require(u1.Client.Gui.Frames.PetChoosePrompt)
local u37 = require(u1.Shared.Utils.WorldUtil)
local u38 = require(u1.Shared.Utils.GetPetModel)
local u39 = require(u1.Shared.Data.Pets)
require(u1.Shared.Framework.Utilities.SequenceUtil)
local u40 = require(u1.Client.Gui.HUD)
local u41 = require(u1.Client.Gui.Animations.Spinner)
local u42 = require(u1.Shared.Utils.Stats.StatsUtil)
local u43 = require(u1.Shared.Framework.Utilities.Math.GetRandomWeightedItem)
local u44 = require(u1.Client.Gui.Utils.ItemFrame)
local u45 = v3.LocalPlayer
local u46 = u45.PlayerGui.ScreenGui
local u47 = workspace.CurrentCamera
local u48 = u46.BoardHUD
local u49 = u48.Upcoming.Content.Template
u49.Parent = nil
local u50 = {
    ["Jump"] = TweenInfo.new(0.25, Enum.EasingStyle.Cubic),
    ["Fall"] = TweenInfo.new(0.25, Enum.EasingStyle.Cubic, Enum.EasingDirection.In)
}
local u51 = {
    ["Pieces"] = {}
}
local u52 = workspace.Worlds["Minigame Paradise"].TileSelection
u52.Parent = nil
local u53 = {
    ["Active"] = false,
    ["Dice"] = "Dice",
    ["NextNodes"] = {},
    ["Roll"] = nil
}
local u54 = v17.new(function() --[[Anonymous function at line 100]]
    --[[
    Upvalues:
        [1] = u49
    --]]
    return u49:Clone()
end)
local u55 = {}
local u56 = v17.new(function() --[[Anonymous function at line 106]]
    --[[
    Upvalues:
        [1] = u52
    --]]
    return u52:Clone()
end)
local function u71(p57) --[[Anonymous function at line 116]]
    local v58 = p57.Visual.Model:GetPivot()
    local v59 = p57.Node.Part.Position * Vector3.new(1, 0, 1)
    local v60 = p57.NextNode.Part.Position * Vector3.new(1, 0, 1)
    local v61 = v58.Position * Vector3.new(1, 0, 1)
    local v62 = (v60 - v59).Magnitude
    local v63 = (v61 - v59).Magnitude / v62
    local v64 = math.clamp(v63, 0, 1)
    local v65 = p57.Node.Part.CFrame:Lerp(p57.NextNode.Part.CFrame, v64) * CFrame.new(0, 15, -20)
    local v66 = CFrame.new
    local v67 = v65.Position
    local v68 = v58.X
    local v69 = p57.Node.Part.Position.Y
    local v70 = v58.Z
    return v66(v67, (Vector3.new(v68, v69, v70))) + Vector3.new(0, 3, 0)
end
local function u76(p72) --[[Anonymous function at line 137]]
    local v73 = Vector3.new(0, 0, 0)
    local v74 = Vector3.new(0, 0, 0)
    for _, v75 in p72 do
        v73 = v73 + (v75.Part.CFrame * CFrame.new(0, 50, -40)).Position
        v74 = v74 + v75.Part.Position
    end
    return CFrame.new(v73 / #p72, v74 / #p72)
end
local u77 = Instance.new("NumberValue")
u77.Value = 1
local u78 = nil
local function u82(p79, p80) --[[Anonymous function at line 162]]
    --[[
    Upvalues:
        [1] = u78
        [2] = u5
        [3] = u47
    --]]
    if u78 then
        u78:Cancel()
        u78 = nil
    end
    if p80 then
        local v81 = u5:Create(u47, p80, {
            ["CFrame"] = p79
        })
        v81:Play()
        u78 = v81
    else
        u47.CFrame = p79
    end
end
local function u84() --[[Anonymous function at line 175]]
    --[[
    Upvalues:
        [1] = u55
        [2] = u16
        [3] = u56
    --]]
    for _, v83 in u55 do
        v83.Parent = nil
        u16.None(v83.BillboardGui.Label)
    end
    table.clear(u55)
    u56:Done()
end
local function u103(p85) --[[Anonymous function at line 194]]
    --[[
    Upvalues:
        [1] = u51
        [2] = u45
        [3] = u53
        [4] = u10
        [5] = u84
        [6] = u56
        [7] = u54
        [8] = u18
        [9] = u16
        [10] = u55
        [11] = u48
        [12] = u20
    --]]
    local v86 = u51.Pieces[u45.Name]
    if v86 then
        if u53.Dice then
            local v87 = u10.Dice[u53.Dice]
            local v88 = u10:ResolveNodes(v86.Index, v87)
            local v89 = 0
            for _, v90 in v88 do
                v89 = v89 + v90.Weight
            end
            u84()
            for v91, v92 in v88 do
                local v93 = u53.Roll == nil and 0 or 0.75
                local v94 = nil
                if v91 == u53.Roll then
                    v93 = 0
                elseif u53.Roll == nil and not p85 then
                    v94 = u56:Get()
                end
                local v95 = u54:Get()
                local v96 = v92.Weight / v89 * 100
                v95.Inner.Chance.Text = u18(v96)
                v95.Inner.Roll.Label.Text = tostring(v91)
                v95.Inner.LayoutOrder = v91
                v95.Inner.BackgroundTransparency = v93
                v95.Inner.Checker.Visible = v93 == 0
                local v97 = u10:UpdateTileAppearance(v95.Inner.Icon, v92)
                if v97 == "Rainbow" then
                    v95.Inner.BackgroundColor3 = Color3.new(1, 1, 1)
                else
                    v95.Inner.BackgroundColor3 = v97
                end
                v95.Inner.UIGradient.Enabled = v97 ~= "Rainbow"
                v95.Inner.Rainbow.Enabled = v97 == "Rainbow"
                if v96 < 5 then
                    u16.Cycle(v95.Inner.Chance, "Rainbow", {
                        ["Speed"] = 0.4
                    })
                else
                    u16.None(v95.Inner.Chance)
                end
                if v94 then
                    if v96 < 5 then
                        u16.Cycle(v94.BillboardGui.Label, "Rainbow", {
                            ["Speed"] = 0.4
                        })
                    end
                    v94.BillboardGui.Distance.Text = ("%* Space%*"):format(v91, v91 == 1 and "" or "s")
                    v94.BillboardGui.Label.Text = v95.Inner.Chance.Text
                    v94.Parent = workspace.Rendered.Generic
                    v94:PivotTo(CFrame.new(v92.Part.Position) - Vector3.new(0, 0.5, 0))
                    local v98 = u55
                    table.insert(v98, v94)
                end
                v95.Parent = u48.Upcoming.Content
                u20(v95, v93, nil, { "Frame" })
            end
            u54:Done()
            u56:Done()
            local v99 = os.clock() * 3
            local v100 = math.sin(v99) / 2 + 7.5
            local v101 = Vector3.new(v100, 0.1, v100)
            for _, v102 in u55 do
                v102.Size = v101
            end
        end
    else
        return
    end
end
local function u109() --[[Anonymous function at line 264]]
    --[[
    Upvalues:
        [1] = u11
        [2] = u53
        [3] = u23
        [4] = u33
        [5] = u48
        [6] = u20
        [7] = u26
    --]]
    local v104 = u11:Get()
    local v105 = not (v104 and u53.Dice) and 0 or u23:GetOwnedAmount(v104, {
        ["Type"] = "Powerup",
        ["Name"] = u53.Dice
    })
    if v105 == 0 then
        u53.Dice = nil
        u33:SetVisible(false)
    end
    for _, v106 in u48.Dice.Inventory:GetChildren() do
        if v106:IsA("Frame") then
            local v107 = v106:GetAttribute("Order")
            if not v107 then
                v107 = v106.LayoutOrder
                v106:SetAttribute("Order", v107)
            end
            local v108 = v104 and (v104.Powerups[v106.Name] or 0) or 0
            v106.Button.Icon.ImageTransparency = v108 > 0 and 0 or 0.5
            v106.Button.Roll.Visible = v108 > 0
            v106.Button.Amount.Text = ("x%*"):format(v108)
            v106.LayoutOrder = v107 + (v108 > 0 and 0 or 20)
        end
    end
    u20(u48.Dice.Actions.Roll, v105 > 0 and 0 or 0.5)
    u20(u48.Dice.Actions.AutoRoll, v105 > 0 and 0 or 0.5)
    u48.Dice.Actions.Roll.Button.Amount.Text = ("x%*"):format((u26(v105, 1000)))
end
local u110 = 4
local function u114(p111) --[[Anonymous function at line 301]]
    --[[
    Upvalues:
        [1] = u51
        [2] = u45
        [3] = u10
        [4] = u110
        [5] = u53
        [6] = u33
        [7] = u103
        [8] = u109
    --]]
    local v112 = u51.Pieces[u45.Name]
    if v112 then
        local v113
        if p111 then
            v113 = u10.Dice[p111]
        else
            v113 = p111
        end
        if v113 then
            u110 = v113
        end
        u53.NextNodes = u10:ResolveNodes(v112.Index, v113 or u110)
        if p111 ~= u53.Dice then
            u53.Dice = p111
            if p111 then
                u33:SetVisual(u53.Dice)
            end
            u33:SetVisible(p111 ~= nil)
            u103()
            u109()
        end
    end
end
local u115 = false
local u116 = TweenInfo.new(0.5, Enum.EasingStyle.Back)
local u117 = 0
local function u129(p118) --[[Anonymous function at line 351]]
    --[[
    Upvalues:
        [1] = u117
        [2] = u48
        [3] = u115
        [4] = u114
        [5] = u5
        [6] = u77
        [7] = u116
        [8] = u7
        [9] = u103
    --]]
    local u119 = u117 + 1
    u117 = u119
    u48.Dice.Actions.Visible = p118 == "Actions"
    u48.Dice.Inventory.Visible = p118 == "Select"
    u48.Dice.Label.Visible = p118 == "Select"
    local v120 = u48.Dice.Stop
    local v121
    if p118 == "Rolling" then
        v121 = u115
    else
        v121 = false
    end
    v120.Visible = v121
    u48.Upcoming.Visible = p118 ~= "Select"
    u48.Dice.Exit.Visible = p118 == "Select"
    if p118 == "Select" then
        u114()
        u5:Create(u77, TweenInfo.new(0.3), {
            ["Value"] = 0
        }):Play()
        u48.Dice.Inventory.Position = UDim2.fromOffset(0, -30)
        u5:Create(u48.Dice.Inventory, u116, {
            ["Position"] = UDim2.new()
        }):Play()
    elseif p118 == "Actions" then
        u5:Create(u77, TweenInfo.new(0.5), {
            ["Value"] = 1
        }):Play()
        task.spawn(function() --[[Anonymous function at line 368]]
            --[[
            Upvalues:
                [1] = u7
                [2] = u48
                [3] = u119
                [4] = u117
                [5] = u5
                [6] = u116
            --]]
            local v126 = u7.from(u48.Dice.Actions:GetChildren()):filter(function(p122) --[[Anonymous function at line 370]]
                local v123 = p122:IsA("Frame")
                if v123 then
                    v123 = p122.Visible
                end
                return v123
            end):sort(function(p124, p125) --[[Anonymous function at line 373]]
                return p124.LayoutOrder > p125.LayoutOrder
            end):table()
            for _, v127 in v126 do
                v127.Button.Visible = false
            end
            for _, v128 in v126 do
                if u119 ~= u117 then
                    break
                end
                v128.Button.Visible = true
                v128.Button.Position = UDim2.new(0.5, 0, 0.5, 50)
                u5:Create(v128.Button, u116, {
                    ["Position"] = UDim2.fromScale(0.5, 0.5)
                }):Play()
                task.wait(0.075)
            end
        end)
    elseif p118 == "Rolling" then
        u5:Create(u77, TweenInfo.new(0.3), {
            ["Value"] = 0
        }):Play()
    end
    u103(p118 == "Rolling")
end
local u130 = u53.Active
local function u133() --[[Anonymous function at line 399]]
    --[[
    Upvalues:
        [1] = u53
        [2] = u130
        [3] = u48
        [4] = u5
        [5] = u33
        [6] = u47
        [7] = u21
        [8] = u22
        [9] = u45
        [10] = u129
        [11] = u46
        [12] = u8
        [13] = u27
        [14] = u28
        [15] = u84
        [16] = u51
        [17] = u103
        [18] = u109
        [19] = u82
        [20] = u71
    --]]
    if u53.Active ~= u130 then
        if u53.Active then
            u48.Upcoming.Position = UDim2.new(0.5, 0, 0, -100)
            u48.Dice.Position = UDim2.new(0.5, 0, 1, 145)
            u5:Create(u48.Upcoming, TweenInfo.new(0.5, Enum.EasingStyle.Back), {
                ["Position"] = UDim2.new(0.5, 0, 0, 100)
            }):Play()
            u5:Create(u48.Dice, TweenInfo.new(0.5, Enum.EasingStyle.Back), {
                ["Position"] = UDim2.new(0.5, 0, 1, -50)
            }):Play()
            u33:SetNumber()
            u33:SetVisual(u53.Dice)
            u47.CameraType = Enum.CameraType.Scriptable
            u21:Hide()
            u22:Disable()
        else
            local v131 = u45.Character
            if v131 then
                v131 = v131:FindFirstChild("Humanoid")
            end
            if v131 ~= nil then
                u47.CameraSubject = v131
                u47.CameraType = Enum.CameraType.Custom
            end
            u21:Show()
            u22:Enable()
            u129("Select")
        end
        u46.HUD.Visible = not u53.Active
        u48.Visible = u53.Active
        u33:SetVisible(u53.Active)
        u8:SetVisible(not u53.Active)
        u27:SetPlayersVisible(not u53.Active, true)
        u28:SetVisible(not u53.Active)
        u84()
        game.StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.PlayerList, not u53.Active)
        u130 = u53.Active
    end
    local v132 = u51.Pieces[u45.Name]
    if v132 then
        u103()
        u109()
        u82((u71(v132)))
    end
end
local function u157(p134) --[[Anonymous function at line 615]]
    --[[
    Upvalues:
        [1] = u46
        [2] = u10
        [3] = u13
        [4] = u16
        [5] = u14
        [6] = u15
    --]]
    local u135 = script.Chance:Clone()
    u135.Parent = u46
    local v136 = Random.new()
    local u137 = { p134 }
    while true do
        local v138 = u10.ChanceTiles[v136:NextInteger(1, #u10.ChanceTiles)].Item
        if table.find(u137, v138) == nil then
            table.insert(u137, v138)
        end
        if #u137 == 3 then
            v136:Shuffle(u137)
            local v139 = table.find(u137, p134) or 1
            local u140 = v136:NextInteger(1, 3)
            local function v144() --[[Anonymous function at line 633]]
                --[[
                Upvalues:
                    [1] = u140
                    [2] = u135
                    [3] = u10
                    [4] = u137
                    [5] = u13
                --]]
                for v141 = 1, 3 do
                    local v142 = u140 == v141
                    local v143 = u135.Frame.Slots:FindFirstChild("Slot" .. v141)
                    v143.BackgroundColor3 = v142 and Color3.fromRGB(255, 244, 183) or Color3.fromRGB(225, 243, 255)
                    v143.UIStroke.Color = v142 and Color3.fromRGB(241, 161, 0) or Color3.fromRGB(0, 41, 94)
                    v143.Label.Text = u10.ChanceTile[u137[v141]].DisplayName
                end
                u13("EasterEggReveal")
            end
            for v145 = 1, 3 do
                local v146 = u10.ChanceTile[u137[v145]]
                local v147 = u135.Frame.Slots:FindFirstChild("Slot" .. v145)
                v147.Label.Text = v146.DisplayName
                local v148 = 100
                for _, v149 in u10.ChanceTiles do
                    if v149.Item == u137[v145] then
                        v148 = v149.Chance
                        break
                    end
                end
                v147.Chance.Text = ("%*%%"):format(v148)
                local v150 = v146.Color
                if typeof(v150) == "string" then
                    u16.Cycle(v147.Label, "Rainbow", {
                        ["Speed"] = 0.4
                    })
                else
                    v147.Label.TextColor3 = v146.Color
                end
            end
            v144()
            local v151 = 0.05
            repeat
                task.wait(v151)
                v151 = v151 * 1.12
                u140 = u140 + 1
                u140 = u140 > 3 and 1 or u140
                v144()
            until v151 > 0.7
            for _ = 1, 3 do
                task.wait(v151)
                local v152 = u140 + 1
                u140 = v152 > 3 and 1 or v152
                u140 = u140
                v144()
                if u140 == v139 then
                    break
                end
            end
            local v153 = u10.ChanceTile[p134]
            local v154 = u10.ChanceTile[p134].Color
            if typeof(v154) == "string" then
                v154 = Color3.fromRGB(49, 255, 73)
            end
            u14(("%*!"):format((u15.autoColor(v153.DisplayName, v154))), {
                ["Sound"] = "NotificationHelp"
            })
            u13("GumBuy")
            task.wait(2)
            for v155 = 1, 3 do
                local v156 = u135.Frame.Slots:FindFirstChild("Slot" .. v155)
                u16.None(v156.Label)
            end
            u135:Destroy()
            return
        end
    end
end
local function u183() --[[Anonymous function at line 732]]
    --[[
    Upvalues:
        [1] = u51
        [2] = u45
        [3] = u53
        [4] = u84
        [5] = u12
        [6] = u129
        [7] = u5
        [8] = u50
        [9] = u33
        [10] = u34
        [11] = u133
        [12] = u10
        [13] = u157
        [14] = u40
        [15] = u41
        [16] = u11
        [17] = u43
        [18] = u42
        [19] = u44
        [20] = u13
        [21] = u23
        [22] = u115
        [23] = u30
        [24] = u1
        [25] = u15
        [26] = u24
        [27] = u25
        [28] = u19
        [29] = u31
        [30] = u114
    --]]
    local v158 = u51.Pieces[u45.Name]
    if v158 then
        if v158.IsMoving then
            return
        elseif u53.Dice then
            u84()
            local u159 = u12:InvokeServer("RollDice", u53.Dice)
            if u159 then
                u129("Rolling")
                task.wait(0.75)
                u5:Create(v158.Visual.Animator, u50.Jump, {
                    ["Value"] = CFrame.new(0, 5, 0) * CFrame.Angles(0, 0, 0.3490658503988659)
                }):Play()
                task.delay(u50.Jump.Time * 0.6, function() --[[Anonymous function at line 757]]
                    --[[
                    Upvalues:
                        [1] = u33
                        [2] = u159
                        [3] = u34
                    --]]
                    u33:Hit()
                    u33:SetNumber(u159.Roll)
                    task.wait(0.15)
                    u33:SetVisible(false)
                    u33:SetNumber()
                    u34:Set(u159.Roll)
                    u34:SetVisible(true)
                    u34:PivotTo(u33:GetPivot())
                    u34:Reveal()
                end)
                task.wait(u50.Jump.Time)
                u5:Create(v158.Visual.Animator, u50.Fall, {
                    ["Value"] = CFrame.new()
                }):Play()
                task.wait(u50.Fall.Time + 0.5)
                u53.Roll = u159.Roll
                u133()
                u84()
                v158.set(u159.Start)
                task.spawn(v158.move, u159.Tile.Index, function() --[[Anonymous function at line 781]]
                    --[[
                    Upvalues:
                        [1] = u159
                        [2] = u10
                        [3] = u157
                        [4] = u40
                        [5] = u41
                        [6] = u11
                        [7] = u43
                        [8] = u42
                        [9] = u44
                        [10] = u13
                        [11] = u12
                        [12] = u33
                        [13] = u34
                        [14] = u53
                        [15] = u23
                        [16] = u115
                        [17] = u129
                        [18] = u30
                        [19] = u1
                        [20] = u15
                        [21] = u24
                        [22] = u25
                        [23] = u19
                        [24] = u31
                        [25] = u133
                        [26] = u84
                        [27] = u114
                    --]]
                    if u159.Tile.Extra then
                        local u160 = nil
                        local u161 = nil
                        local v162 = u10.Nodes[u159.Tile.Index]
                        local v163 = u159.Tile.Extra
                        if typeof(v163) == "string" then
                            u157(u159.Tile.Extra)
                        elseif v162.Type == "dice" then
                            u160 = u10.DiceTile
                            u161 = u159.Tile.Extra
                        else
                            u40.displayItemsReceived({ u159.Tile.Extra })
                        end
                        if u160 and u161 then
                            local u172 = u41.new(function(p164, _, p165) --[[Anonymous function at line 799]]
                                --[[
                                Upvalues:
                                    [1] = u11
                                    [2] = u161
                                    [3] = u43
                                    [4] = u160
                                    [5] = u42
                                    [6] = u44
                                --]]
                                local v166 = u11:Get()
                                local v167 = p165 and u161 or u43(u160)
                                local v168
                                if v167.Type == "Currency" and v166 then
                                    v168 = table.clone(v167)
                                    local v169 = v168.Amount * u42:GetCurrencyMultiplier(v166, v167.Currency, true)
                                    v168.Amount = math.ceil(v169)
                                else
                                    v168 = v167
                                end
                                local u170, u171 = u44(v168)
                                u170.AnchorPoint = Vector2.one / 2
                                u170.Size = UDim2.fromOffset(130, 130)
                                u170.Position = UDim2.fromScale(0.5, 0.5)
                                u170.Parent = p164
                                return function() --[[Anonymous function at line 815]]
                                    --[[
                                    Upvalues:
                                        [1] = u171
                                        [2] = u170
                                    --]]
                                    u171()
                                    u170:Destroy()
                                end
                            end)
                            local u173 = false
                            u172.Finished:Once(function() --[[Anonymous function at line 823]]
                                --[[
                                Upvalues:
                                    [1] = u40
                                    [2] = u161
                                    [3] = u173
                                    [4] = u172
                                --]]
                                local v174 = { u161 }
                                u40.displayItemsReceived(v174)
                                task.wait(0.5)
                                u173 = true
                                u172:Destroy()
                            end)
                            repeat
                                task.wait(0.2)
                            until u173
                        end
                    end
                    local v175 = u10.Nodes[u159.Tile.Index]
                    if u159.Tile.Extra == "special-egg" or v175.Type == "special-egg" then
                        u13("ChestCollect")
                    end
                    local _ = v175.Part
                    u12:FireServer("ClaimTile")
                    u33:SetVisible(true)
                    u34:SetVisible(false)
                    local v176 = u11:Get()
                    local v177
                    if v176 and u53.Dice and u23:GetOwnedAmount(v176, {
                        ["Type"] = "Powerup",
                        ["Name"] = u53.Dice
                    }) ~= 0 then
                        v177 = "Actions"
                    else
                        v177 = "Select"
                        u115 = false
                    end
                    if not u115 then
                        u129(v177)
                    end
                    local v178 = u11:Get()
                    local v179
                    if v178 then
                        v179 = 0
                        for v180 in u10.Dice do
                            v179 = v179 + (v178.Powerups[v180] or 0)
                        end
                    else
                        v179 = 0
                    end
                    if v179 == 0 then
                        u31(u30.new("Uh Oh!"):Sound(u1.Assets.Sounds.UI.PopupFailure):Text((("You\'ve ran out of dice! Play %* or restock at the %*!"):format(u15.autoColor("Minigames", u24.Text.Yellow), (u15.autoColor("Dice Merchant", u24.Text.Cyan))))):Button(function(p181, p182) --[[Anonymous function at line 863]]
                            --[[
                            Upvalues:
                                [1] = u25
                                [2] = u24
                                [3] = u19
                            --]]
                            p181.Label.Text = "Close"
                            u25(p181, u24.Button.Red)
                            u19(p181, p182)
                        end):Build())
                        u53.Active = false
                        u133()
                        task.defer(u84)
                    end
                    u53.Roll = nil
                    u114(u53.Dice)
                    u133()
                end)
            end
        else
            return
        end
    else
        return
    end
end
local function u185() --[[Anonymous function at line 879]]
    --[[
    Upvalues:
        [1] = u115
        [2] = u129
        [3] = u11
        [4] = u53
        [5] = u23
        [6] = u183
    --]]
    if u115 then
        local v184 = u11:Get()
        if v184 then
            if (not u53.Dice and 0 or u23:GetOwnedAmount(v184, {
                ["Type"] = "Powerup",
                ["Name"] = u53.Dice
            })) > 0 then
                u183()
            else
                u115 = false
            end
        else
            return
        end
    else
        u129("Actions")
        return
    end
end
local u186 = u46.BoardHUD.Dice
local u187 = u115
local function v188() --[[Anonymous function at line 724]]
    --[[
    Upvalues:
        [1] = u53
        [2] = u133
        [3] = u84
    --]]
    u53.Active = false
    u133()
    task.defer(u84)
end
local function u224(u189, p190) --[[Anonymous function at line 452]]
    --[[
    Upvalues:
        [1] = u9
        [2] = u38
        [3] = u39
        [4] = u6
        [5] = u45
        [6] = u10
        [7] = u34
        [8] = u51
        [9] = u8
        [10] = u4
        [11] = u37
        [12] = u53
        [13] = u47
        [14] = u71
        [15] = u76
        [16] = u55
        [17] = u77
        [18] = u33
    --]]
    local u191 = {}
    local u192 = u9.new()
    local v193 = u38(p190):Clone()
    v193:ScaleTo(u39[p190.Name].Rarity == "Secret" and 2.25 or 2)
    local u194 = u6.fromModel(v193)
    u194.Animation = "Walk"
    u194.WalkSpeed = 20
    u191.Visual = u194
    local v195 = workspace.Worlds["Minigame Paradise"].Board.Display.BillboardGui:Clone()
    v195.Icon.Image = ("rbxthumb://type=AvatarHeadShot&id=%*&w=100&h=100"):format(u189.UserId)
    v195.Label.Text = u189.DisplayName
    v195.MaxDistance = 120
    v195.Enabled = u189 ~= u45
    v195.Parent = v193:FindFirstChild("Hitbox") or v193.PrimaryPart
    if u189 ~= u45 then
        for _, v196 in v193:GetDescendants() do
            if v196:IsA("BasePart") then
                v196.Transparency = v196.Transparency + 0.45
                v196.CastShadow = false
            elseif v196:IsA("Decal") then
                v196.Transparency = v196.Transparency + 0.45
            elseif v196:IsA("ParticleEmitter") or v196:IsA("Beam") then
                v196.Enabled = false
            elseif v196:IsA("Fire") then
                v196.Enabled = false
            end
        end
    end
    function u191.move(p197, p198) --[[Anonymous function at line 501]]
        --[[
        Upvalues:
            [1] = u191
            [2] = u10
            [3] = u194
            [4] = u189
            [5] = u45
            [6] = u34
        --]]
        local v199 = u191.Index
        local v200 = {}
        repeat
            local v201 = v199 + 1
            v199 = #u10.Nodes < v201 and 1 or v201
            local v202 = u10.Nodes[v199]
            table.insert(v200, v202)
        until v199 == p197
        u194.ActiveDampener = false
        u191.IsMoving = true
        for v203, v204 in v200 do
            u194.ActiveDampener = v203 == #v200
            u194:MoveTo(v204.Part.Position, true)
            while ((v204.Part.Position - u194.Position) * Vector3.new(1, 0, 1)).Magnitude > 0.01 do
                task.wait()
            end
            if u189 == u45 then
                u34:Decrease()
            end
            local v205 = v204.Part.Name
            local v206 = (tonumber(v205) or 1) + 1
            local v207 = #u10.Nodes < v206 and 1 or v206
            u191.Node = v204
            u191.NextNode = u10.Nodes[v207]
        end
        u10.Model.Display.BillboardGui.Enabled = false
        u191.Index = p197
        u191.IsMoving = false
        if p198 then
            p198()
        end
    end
    function u191.set(p208) --[[Anonymous function at line 540]]
        --[[
        Upvalues:
            [1] = u10
            [2] = u194
            [3] = u191
        --]]
        local v209 = u10.Nodes[p208]
        local v210 = v209.Part.Position
        u194.YDampener.Value = v210.Y + 0.25
        u194:SpawnAt(v210)
        u191.Index = p208
        local v211 = v209.Part.Name
        local v212 = (tonumber(v211) or 1) + 1
        local v213 = #u10.Nodes < v212 and 1 or v212
        u191.Node = v209
        u191.NextNode = u10.Nodes[v213]
    end
    function u191.remove() --[[Anonymous function at line 550]]
        --[[
        Upvalues:
            [1] = u192
            [2] = u191
            [3] = u51
            [4] = u189
        --]]
        u192:Cleanup()
        table.clear(u191)
        u51.Pieces[u189.Name] = nil
    end
    u191.set(1)
    u8:Add(u194)
    u192:Add(function() --[[Anonymous function at line 559]]
        --[[
        Upvalues:
            [1] = u194
        --]]
        u194:Destroy()
    end)
    u192:Add(function() --[[Anonymous function at line 563]]
        --[[
        Upvalues:
            [1] = u191
        --]]
        table.clear(u191)
    end)
    local v214 = Instance.new("Part")
    v214.Anchored = true
    v214.Size = Vector3.new(1, 1, 1)
    v214.Color = Color3.new(1, 0, 0)
    v214.CanCollide = false
    v214.Parent = workspace.Terrain
    local u215 = os.clock()
    u192:Add(u4.Heartbeat:Connect(function(p216) --[[Anonymous function at line 576]]
        --[[
        Upvalues:
            [1] = u37
            [2] = u45
            [3] = u189
            [4] = u53
            [5] = u194
            [6] = u215
            [7] = u47
            [8] = u191
            [9] = u71
            [10] = u76
            [11] = u55
            [12] = u77
            [13] = u33
            [14] = u34
        --]]
        if u37:GetPlayerWorld(u45) == "Minigame Paradise" then
            if u189 == u45 and u53.Active then
                local v217 = os.clock()
                if u194.IsMoving then
                    u215 = v217
                end
                if v217 - u215 > 0.15 then
                    u194:LookAt(u47.CFrame.Position)
                else
                    u194:LookAt(u191.Node.Part.Position:Lerp(u191.NextNode.Part.Position, 1.1))
                end
                local v218 = u71(u191)
                local v219 = u76(u53.NextNodes)
                if #u53.NextNodes == 0 then
                    v219 = v218
                end
                local v220 = os.clock() * 3
                local v221 = math.sin(v220) / 2 + 7.5
                local v222 = Vector3.new(v221, 0.1, v221)
                for _, v223 in u55 do
                    v223.Size = v222
                end
                u47.CFrame = v218:Lerp(v219, u77.Value)
                u33:PivotTo(u191.Node.Part.CFrame + Vector3.new(0, 10, 0))
                u34:PivotTo(CFrame.new(u194.Model:GetPivot().X, u33:GetPivot().Y, u194.Model:GetPivot().Z))
            end
            u194:Render(p216)
        end
    end))
    u51.Pieces[u189.Name] = u191
    return u191
end
local function v225() --[[Anonymous function at line 715]]
    --[[
    Upvalues:
        [1] = u53
        [2] = u46
        [3] = u114
        [4] = u133
    --]]
    u53.Dice = nil
    u53.Active = true
    u46.BoardButtons.Visible = false
    u114()
    u133()
end
for _, u226 in u186.Inventory:GetChildren() do
    if u226:IsA("Frame") then
        local u227 = u226.Name
        u19(u226.Button, function() --[[Anonymous function at line 909]]
            --[[
            Upvalues:
                [1] = u11
                [2] = u226
                [3] = u30
                [4] = u31
                [5] = u114
                [6] = u227
                [7] = u129
            --]]
            local v228 = u11:Get()
            if v228 then
                if u226.Button.Icon.ImageTransparency ~= 0 then
                    return u31(u30.fromNotEnough(v228, {
                        ["Type"] = "Powerup",
                        ["Name"] = u226.Name
                    }, function(p229) --[[Anonymous function at line 915]]
                        return ("You need %* to Roll!"):format(p229)
                    end):Build())
                end
                u114(u227)
                u129("Actions")
            end
        end)
    end
end
u25(u186.Actions.Roll.Button, u24.Button.Default)
u19(u186.Actions.Roll.Button, function() --[[Anonymous function at line 927]]
    --[[
    Upvalues:
        [1] = u187
        [2] = u183
    --]]
    u187 = false
    u183()
end)
u25(u186.Actions.AutoRoll.Button, u24.Button.Default)
u19(u186.Actions.AutoRoll.Button, function() --[[Anonymous function at line 933]]
    --[[
    Upvalues:
        [1] = u187
        [2] = u185
    --]]
    u187 = true
    u185()
end)
u25(u186.Actions.Inventory.Button, u24.Button.Default)
u19(u186.Actions.Inventory.Button, function() --[[Anonymous function at line 939]]
    --[[
    Upvalues:
        [1] = u129
    --]]
    u129("Select")
end)
u25(u186.Actions.Exit.Button, u24.Button.Default)
u19(u186.Actions.Exit.Button, v188)
u25(u186.Exit.Button, u24.Button.Default)
u19(u186.Exit.Button, v188)
u25(u186.Stop.Button, u24.Button.Red)
u19(u186.Stop.Button, function() --[[Anonymous function at line 950]]
    --[[
    Upvalues:
        [1] = u51
        [2] = u45
        [3] = u129
        [4] = u187
        [5] = u186
    --]]
    local v230 = u51.Pieces[u45.Name]
    if v230 and not v230.IsMoving then
        u129("Select")
    end
    u187 = false
    u186.Stop.Visible = false
end)
u21:Bind(workspace.Worlds["Minigame Paradise"].Activation, function() --[[Anonymous function at line 960]]
    --[[
    Upvalues:
        [1] = u11
        [2] = u35
        [3] = u15
        [4] = u24
        [5] = u36
        [6] = u12
        [7] = u10
        [8] = u46
        [9] = u7
        [10] = u5
        [11] = u116
    --]]
    local v231 = u11:Get()
    if v231 then
        if v231.Board.Piece then
            local v232 = u11:Get()
            local v233
            if v232 then
                v233 = 0
                for v234 in u10.Dice do
                    v233 = v233 + (v232.Powerups[v234] or 0)
                end
            else
                v233 = 0
            end
            if v233 == 0 then
                return u35:Dialog({ "Woah, you don\'t have any dice!", (("Go play some %* or restock on dice at the %*!"):format(u15.autoColor("Minigames", u24.Text.Yellow), (u15.autoColor("Dice Merchant", u24.Text.Cyan)))) })
            end
            u35:Dialog({ "Welcome back, USERNAME! Start where you left off?" }, function() --[[Anonymous function at line 985]]
                --[[
                Upvalues:
                    [1] = u46
                    [2] = u7
                    [3] = u5
                    [4] = u116
                --]]
                local v235 = u46.BoardButtons
                local v240 = u7.from(v235:GetChildren()):filter(function(p236) --[[Anonymous function at line 988]]
                    local v237 = p236:IsA("Frame")
                    if v237 then
                        v237 = p236.Visible
                    end
                    return v237
                end):sort(function(p238, p239) --[[Anonymous function at line 991]]
                    return p238.LayoutOrder > p239.LayoutOrder
                end):table()
                v235.Visible = true
                v235.BackgroundTransparency = 1
                u5:Create(v235, TweenInfo.new(0.5), {
                    ["BackgroundTransparency"] = 0.5
                }):Play()
                for _, v241 in v240 do
                    v241.Button.Visible = false
                end
                for _, v242 in v240 do
                    v242.Button.Visible = true
                    v242.Button.Position = UDim2.new(0.5, 0, 0.5, 50)
                    u5:Create(v242.Button, u116, {
                        ["Position"] = UDim2.fromScale(0.5, 0.5)
                    }):Play()
                    task.wait(0.075)
                end
            end)
        else
            u35:Dialog({ "Welcome, welcome! Step right up, USERNAME!", ("You want to participate in the most %* in all the land?"):format((u15.autoColor("exciting board game", u24.Text.Yellow))), "Well, you\'ve come to the right place! Just pick your pet and begin!" }, function() --[[Anonymous function at line 970]]
                --[[
                Upvalues:
                    [1] = u36
                    [2] = u12
                --]]
                u36:Open(function() --[[Anonymous function at line 971]]
                    return true
                end, function(p243) --[[Anonymous function at line 973]]
                    --[[
                    Upvalues:
                        [1] = u12
                    --]]
                    u12:FireServer("ChoosePiece", p243.Id)
                end)
            end)
        end
    else
        return
    end
end)
local v244 = workspace.Tile
v244.Parent = nil
for _, v245 in u10.Nodes do
    local v246 = v245.Part.CFrame
    local v247 = v245.Part.Size.Y / 2
    local v248 = v246 - Vector3.new(0, v247, 0)
    local v249 = v244:Clone()
    local v250 = v249.Display.SurfaceGui
    v250.Parent = u46
    v250.Adornee = v249.Display
    v249:PivotTo(v248 * CFrame.Angles(0, 1.5707963267948966, 0))
    v249.Parent = workspace.Rendered.Generic
    local v251 = u10:UpdateTileAppearance(v250, v245)
    if v251 == "Rainbow" then
        v249.Rainbow.Transparency = 0
        v249.Visual.Transparency = 1
    else
        v249.Visual.Color = v251
    end
end
u129("Select")
local function u256(p252) --[[Anonymous function at line 1040]]
    --[[
    Upvalues:
        [1] = u51
        [2] = u45
        [3] = u2
        [4] = u224
    --]]
    local v253 = u51.Pieces[(p252 or u45).Name]
    if v253 then
        v253.remove()
    end
    local v254 = p252:GetAttribute("BoardPet")
    if v254 and v254 ~= "none" then
        local v255 = u2:JSONDecode(v254)
        if v255 then
            u224(p252, v255).set(p252:GetAttribute("BoardIndex") or 1)
        end
    else
        return
    end
end
local function v260(u257) --[[Anonymous function at line 1057]]
    --[[
    Upvalues:
        [1] = u45
        [2] = u256
        [3] = u51
    --]]
    if u257 ~= u45 then
        u256(u257)
        u257:GetAttributeChangedSignal("BoardPet"):Connect(function() --[[Anonymous function at line 1062]]
            --[[
            Upvalues:
                [1] = u256
                [2] = u257
            --]]
            u256(u257)
        end)
        u257:GetAttributeChangedSignal("BoardIndex"):Connect(function() --[[Anonymous function at line 1065]]
            --[[
            Upvalues:
                [1] = u257
                [2] = u51
                [3] = u45
            --]]
            local v258 = u257
            local v259 = u51.Pieces[(v258 or u45).Name]
            print(v259)
            if v259 then
                print(u257:GetAttribute("BoardIndex") or 1)
                v259.move(u257:GetAttribute("BoardIndex") or 1)
            end
        end)
    end
end
for _, v261 in v3:GetPlayers() do
    v260(v261)
end
v3.PlayerAdded:Connect(v260)
v3.PlayerRemoving:Connect(function(p262) --[[Anonymous function at line 1078]]
    --[[
    Upvalues:
        [1] = u51
        [2] = u45
    --]]
    local v263 = u51.Pieces[(p262 or u45).Name]
    if v263 then
        v263.remove()
    end
end)
u25(u46.BoardButtons.Continue.Button, u24.Button.Green)
u19(u46.BoardButtons.Continue.Button, v225)
u25(u46.BoardButtons.Change.Button, u24.Button.Pink)
u19(u46.BoardButtons.Change.Button, function() --[[Anonymous function at line 1091]]
    --[[
    Upvalues:
        [1] = u46
        [2] = u36
        [3] = u12
    --]]
    u46.BoardButtons.Visible = false
    u36:Open(function() --[[Anonymous function at line 1093]]
        return true
    end, function(p264) --[[Anonymous function at line 1095]]
        --[[
        Upvalues:
            [1] = u12
        --]]
        u12:FireServer("ChoosePiece", p264.Id)
    end)
end)
u25(u46.BoardButtons.Close.Button, u24.Button.Red)
u19(u46.BoardButtons.Close.Button, function() --[[Anonymous function at line 1101]]
    --[[
    Upvalues:
        [1] = u46
    --]]
    u46.BoardButtons.Visible = false
end)
local u265 = nil
u11:ConnectDataChanged("Board", function(p266) --[[Anonymous function at line 1107]]
    --[[
    Upvalues:
        [1] = u2
        [2] = u265
        [3] = u51
        [4] = u45
        [5] = u224
        [6] = u53
        [7] = u46
        [8] = u114
        [9] = u133
        [10] = u32
        [11] = u48
    --]]
    local v267 = p266.Board.Piece
    local v268 = v267 and (u2:JSONEncode(v267) or "none") or "none"
    if u265 ~= v268 then
        local v269 = u51.Pieces[u45.Name]
        if v269 then
            v269.remove()
        end
        if v267 then
            local v270 = u224(u45, v267)
            v270.set(p266.Board.Tile)
            u51.Pieces[u45.Name] = v270
            if u265 ~= nil then
                u53.Dice = nil
                u53.Active = true
                u46.BoardButtons.Visible = false
                u114()
                u133()
            end
        end
        u265 = v268
    end
    u32:ClearAll("BoardGame")
    if p266.Board.TimesRolled == 0 then
        u32:Add(u48.Dice.Actions.Roll, -45, "BoardGame")
        u32:Add(u48.Dice.Inventory.Dice, -45, "BoardGame")
    end
end)
u11:ConnectDataChanged("MasteryUpgrades", function(p271) --[[Anonymous function at line 1134]]
    --[[
    Upvalues:
        [1] = u48
    --]]
    local v272 = false
    for _, v273 in p271.MasteryUpgrades do
        if v273.Type == "AutoDiceRoll" then
            v272 = true
            break
        end
    end
    u48.Dice.Actions.AutoRoll.Visible = v272
end)
v29(0.25, function() --[[Anonymous function at line 1146]]
    --[[
    Upvalues:
        [1] = u53
        [2] = u187
        [3] = u185
    --]]
    if u53.Active then
        if u53.Roll then
            return
        elseif u187 then
            u185()
        end
    else
        return
    end
end)
return u51