--devbgascension

-- Bytecode (Base64):
-- 

local v1 = game:GetService("Players")
local v2 = game:GetService("Workspace")
local u3 = game:GetService("RunService")
local u4 = game:GetService("UserInputService")
local v5 = game:GetService("ReplicatedStorage")
local v6 = require(v5.Client.Gui.Utils.AutoButtonColor)
local v7 = require(v5.Client.Gui.Utils.ClickableButton)
local u8 = require(v5.Client.Gui.GuiFrame)
local v9 = require(v5.Shared.Palette)
local u10 = require(v5.Shared.Utils.DoggyJumpUtil)
local u11 = require(v5.Client.Framework.Services.LocalData)
local u12 = require(v5.Shared.Constants)
local u13 = require(v5.Shared.Framework.Utilities.Math.Time)
require(v5.Client.Gui.Utils.ItemFrame)
local _ = require(v5.Shared.Utils.Stats.ItemUtil.PotionIcon)
require(v5.Shared.Types)
local _ = require(v5.Shared.Data.Currency)
local _ = require(v5.Shared.Data.Powerups)
local u14 = require(v5.Shared.Framework.Network.Remote)
local u15 = require(v5.Client.Gui.Utils.PlayLocalSound)
local u16 = require(v5.Client.Music)
local v17 = require(v5.Client.Activation)
local v18 = require(v5.Client.Framework.Services.InputMode)
local u19 = require(v5.Shared.Utils.Stats.ItemUtil)
local u20 = require(v5.Shared.Framework.Utilities.String.FormatCommas)
local u21 = require(v5.Client.Framework.Utilities.Gui.Animations.SetFade)
local u22 = require(v5.Shared.Utils.AnimateColor)
local u23 = require(v5.Shared.Utils.Stats.StatsUtil)
local v24 = require(v5.Shared.Utils.CurrencyUtil)
local u25 = {}
local u26 = v1.LocalPlayer
local u27 = u26.PlayerGui.ScreenGui
local u28 = u27.DoggyJump.Frame
local u29 = u27.DoggyJump.Frame.Inner.Main
local u30 = u29.Area
local u31 = u30.Layers
local u32 = u30.Objects
local v33 = u28.Inner.Prizes
local u34 = u32.Doggy
local v35 = workspace.Worlds["The Overworld"].Islands["Outer Space"].Island.DoggyJump.Activation
local u36 = u27.DoggyJump.Frame.UIScale
local u37 = v2.CurrentCamera
u37:GetPropertyChangedSignal("ViewportSize"):Connect(function() --[[Function name: update, line 60]]
    --[[
    Upvalues:
        [1] = u37
        [2] = u36
    --]]
    local v38 = u37.ViewportSize.x / 600 * 5
    local v39 = math.floor(v38) / 5
    u36.Scale = math.clamp(v39, 0.8, 2)
end)
local v40 = u37.ViewportSize.x / 600 * 5
local v41 = math.floor(v40) / 5
u36.Scale = math.clamp(v41, 0.8, 2)
u25.JUMP_SPEED = Vector2.new(0, 550)
u25.GRAVITY = Vector2.new(0, 1900)
u25.SPEED_MIN = 280
u25.SPEED_MAX = 820
u25.SPEED_INCREASE_RATE = 11
u25.OBJECTS_PER_SECOND_MIN = 0.9
u25.OBJECTS_PER_SECOND_MAX = 1.3
u25.OBJECTS_PER_SECOND_INCREASE_RATE = 0.01
u25.UNTIL_FIRST_OBJECT = 1
u25.POINTS_PER_SECOND = u10.PointsPerSecond
u25.layers = {
    ["Sky"] = {
        ["p"] = 0,
        ["v"] = 0
    },
    ["Clouds1"] = {
        ["p"] = 0,
        ["v"] = 0.18
    },
    ["Mountains"] = {
        ["p"] = 0,
        ["v"] = 0.2
    },
    ["Clouds2"] = {
        ["p"] = 0,
        ["v"] = 0.24
    },
    ["Ground"] = {
        ["p"] = 0,
        ["v"] = 1
    }
}
u25.objectTypes = {
    {
        ["i"] = "rbxassetid://133429322374627",
        ["w"] = 62,
        ["h"] = 36,
        ["y"] = -3,
        ["m"] = Vector2.new(7, 3)
    },
    {
        ["i"] = "rbxassetid://135190396224590",
        ["w"] = 55,
        ["h"] = 35,
        ["y"] = -3,
        ["m"] = Vector2.new(5, 4)
    }
}
local v42 = v33.Content
local v43 = v42.Template
v43.Parent = nil
local v44 = u29.Area.Overlay.Result.Prizes
local v45 = v44.Template
v45.Parent = nil
local u46 = {}
local u47 = {}
for v48 = 1, #u10.PrizeScores do
    local v49 = v43:Clone()
    v49.LayoutOrder = v48
    v49.Name = ("Prize%*"):format(v48)
    v49.Parent = v42
    u46[v48] = v49
    local u50 = v45:Clone()
    u50.LayoutOrder = v48
    u50.Name = ("Prize%*"):format(v48)
    u50.Parent = v44
    u47[v48] = u50
    u36:GetPropertyChangedSignal("Scale"):Connect(function() --[[Function name: updateScales, line 165]]
        --[[
        Upvalues:
            [1] = u36
            [2] = u50
        --]]
        local v51 = 1 / u36.Scale
        u50.UIScale.Scale = v51
    end)
    local v52 = 1 / u36.Scale
    u50.UIScale.Scale = v52
end
local function u62() --[[Anonymous function at line 202]]
    --[[
    Upvalues:
        [1] = u11
        [2] = u10
        [3] = u26
        [4] = u46
        [5] = u19
        [6] = u23
        [7] = u22
        [8] = u12
        [9] = u47
    --]]
    local v53 = u11:Get()
    if v53 then
        for v54, v55 in u10:GetPrizes(u26, v53) do
            local v56 = u46[v54]
            u19:UpdateIcon(v56.Inner.Icon, v55)
            v56.Inner.Title.Text = u19:GetName(v55)
            local v57
            if v55.Type == "Currency" then
                v57 = table.clone(v55)
                local v58 = u23:GetCurrencyMultiplier(v53, v55.Currency, true)
                local v59 = v57.Amount * v58
                v57.Amount = math.ceil(v59)
            else
                v57 = v55
            end
            u19:FormatAmount(v56.Inner.Icon.Amount, v57)
            local v60 = u19:GetRarity(v57)
            if v60 == "Legendary" then
                u22.Cycle(v56.Inner.Title, "Rainbow", {
                    ["Speed"] = 0.4
                })
            else
                u22.None(v56.Inner.Title)
                v56.Inner.Title.TextColor3 = u12.RarityColors[v60]
            end
            local v61 = u47[v54]
            u19:UpdateIcon(v61, v57)
            u19:FormatAmount(v61.Amount, v57)
        end
    end
end
u11:ConnectDataChanged(v24.CurrencyMultUpdateKeys, u62)
local function u69() --[[Anonymous function at line 240]]
    --[[
    Upvalues:
        [1] = u11
        [2] = u10
        [3] = u29
        [4] = u13
    --]]
    local v63 = u11:Get()
    if v63 then
        local v64 = #u10.PrizeScores
        local v65 = u10.RefreshPeriod
        if v63.DoggyJump.Claimed < v64 then
            u29.Parent.Parent.Label.Text = ("Win up to %* prizes every %* minutes!"):format(v64, v65 // 60)
        else
            local v66 = u13.now()
            local v67 = v63.DoggyJump.Began + v65 - v66
            local v68 = math.max(1, v67)
            u29.Parent.Parent.Label.Text = ("More prizes available in %*"):format((u13.formatRealTime(v68)))
        end
    else
        return
    end
end
task.spawn(function() --[[Anonymous function at line 261]]
    --[[
    Upvalues:
        [1] = u8
        [2] = u69
    --]]
    while true do
        if u8:IsOpen("DoggyJump") then
            u69()
        end
        task.wait(0.5)
    end
end)
u11:ConnectDataChanged("DoggyJump", function() --[[Anonymous function at line 272]]
    --[[
    Upvalues:
        [1] = u62
        [2] = u69
    --]]
    u62()
    u69()
end)
u25.running = false
u25.t = nil
u25.speed = nil
u25.score = nil
u25.lastObject = nil
u25.updateConnection = nil
u25.inputConnection = nil
u25.objects = {}
u25.doggy = {}
u25.doggy.w = 22
u25.doggy.h = 22
u25.lastSounds = {}
u25.lastSounds.Squeak = {
    ["t"] = 0,
    ["max"] = 0.25
}
u25.lastSounds.Spring = {
    ["t"] = 0,
    ["max"] = 0.25
}
function u25.playSound(_, p70, _) --[[Anonymous function at line 305]]
    --[[
    Upvalues:
        [1] = u25
        [2] = u15
    --]]
    local v71 = u25.lastSounds[p70]
    if v71 and tick() - v71.t >= v71.max then
        v71.t = tick()
        u15(p70)
    end
end
function u25.newObject(p72) --[[Anonymous function at line 316]]
    --[[
    Upvalues:
        [1] = u34
        [2] = u32
    --]]
    local v73 = p72.objectTypes[math.random(2)]
    local v74 = v73.w
    local v75 = v73.h
    local v76 = Instance.new("ImageLabel")
    v76.BackgroundTransparency = 1
    v76.BorderMode = Enum.BorderMode.Inset
    v76.Image = v73.i
    v76.AnchorPoint = Vector2.new(0.5, 1)
    v76.Size = UDim2.fromOffset(v74, v75)
    v76.Position = UDim2.new(100, 0, 0, 0)
    v76.ZIndex = u34.ZIndex - 1
    v76.Parent = u32
    local v77 = p72.objects
    local v78 = {
        ["f"] = v76,
        ["p"] = Vector2.new(300 + v74 + math.random(0, 85), v73.y),
        ["w"] = v74,
        ["h"] = v75,
        ["m"] = v73.m
    }
    table.insert(v77, v78)
end
local u79 = { "Frame", "ImageButton" }
local function u87() --[[Anonymous function at line 346]]
    --[[
    Upvalues:
        [1] = u11
        [2] = u10
        [3] = u25
        [4] = u46
        [5] = u21
        [6] = u79
        [7] = u20
    --]]
    local v80 = u11:Get()
    local v81 = not v80 and 0 or v80.DoggyJump.Claimed
    for v82, v83 in u10.PrizeScores do
        local v84 = v83 <= (u25.score or 0)
        local v85 = v82 <= v81
        local v86 = u46[v82]
        v86.Claimed.Visible = v85
        u21(v86.Inner, v85 and 0.5 or 0, nil, u79)
        v86.Inner.Score.Text = ("%*%* Score"):format(v84 and "\226\156\133 " or "", (u20(u10.PrizeScores[v82])))
    end
end
u11:ConnectDataChanged("DoggyJump", u87)
function u25.stepGame(p88, p89) --[[Anonymous function at line 370]]
    --[[
    Upvalues:
        [1] = u30
        [2] = u87
        [3] = u31
        [4] = u34
    --]]
    local v90 = p88.t + p89
    p88.t = v90
    local v91 = p88.SPEED_MIN + v90 * p88.SPEED_INCREASE_RATE
    local v92 = p88.SPEED_MIN
    local v93 = p88.SPEED_MAX
    local v94 = math.clamp(v91, v92, v93)
    p88.speed = v94
    local v95 = p88.POINTS_PER_SECOND * v90
    local v96 = math.floor(v95)
    p88.score = v96
    u30.Score.Text = ("Score: %i"):format(v96)
    u87()
    local v97 = p88.OBJECTS_PER_SECOND_MIN + p88.OBJECTS_PER_SECOND_INCREASE_RATE * v90
    local v98 = p88.OBJECTS_PER_SECOND_MAX
    local v99 = 1 / math.min(v97, v98)
    local v100 = p88.lastObject
    if v99 < v90 - p88.lastObject then
        p88:newObject()
        p88.lastObject = v100 + v99
    end
    local v101 = p88.layers
    for v102, v103 in pairs(v101) do
        local v104 = u31:FindFirstChild(v102)
        local v105 = v104.Frame1
        local v106 = v104.Frame2
        local v107 = v103.p + p89 * v103.v * -v94
        local v108 = v107 % 300
        local v109 = v108 - 300
        v103.p = v107
        v105.Position = UDim2.new(0, v108, 0, 0)
        v106.Position = UDim2.new(0, v109, 0, 0)
    end
    local v110 = p88.doggy
    local _ = v110.v
    local v111 = v110.p
    if v110.j then
        local v112 = v110.v - p88.GRAVITY * p89
        v111 = v110.p + v112 * p89
        if v111.y <= 4 then
            v111 = Vector2.new(v111.x, 0)
            v112 = Vector2.new()
            v110.j = false
        end
        v110.p = v111
        v110.v = v112
    end
    if v111.y == 0 then
        local v113 = u34
        local v114 = UDim2.new
        local v115 = v111.x
        local v116 = v90 * 9
        local v117 = math.sin(v116)
        v113.Position = v114(0, v115, 1, math.abs(v117) * -4.2)
        local v118 = (v90 - p89) * 9
        local v119 = math.sin(v118) * 3
        local v120 = v90 * 9
        local v121 = math.sin(v120) * 3
        u34.Rotation = v121
        local _ = math.sign(v119) == math.sign(v121)
    else
        u34.Position = UDim2.new(0, v111.x, 1, -v111.y)
        local v122 = u34.Rotation + p89 * 760
        u34.Rotation = math.min(360, v122)
    end
    local v123 = p88.objects
    for v124 = #v123, 1, -1 do
        local v125 = v123[v124]
        local v126 = v125.f
        local v127 = v125.p + Vector2.new(p89 * -v94, 0)
        if v127.x <= -10 then
            v126:Destroy()
            table.remove(v123, v124)
        else
            v125.p = v127
            v126.Position = UDim2.new(0, v127.x, 1, -v127.y)
        end
    end
    local v128 = v110.p + Vector2.new(0, 16)
    local v129 = Vector2.new(v110.w, v110.h) * 0.5
    for _, v130 in ipairs(v123) do
        local v131 = v130.p + Vector2.new(0, v130.h * 0.5)
        local v132 = Vector2.new(v130.w, v130.h) * 0.5 - v130.m
        local v133 = v131 - v128
        local v134 = v129 + v132
        local v135 = v133.x
        if math.abs(v135) < v134.x then
            local v136 = v133.y
            if math.abs(v136) < v134.y then
                return true
            end
        end
    end
    return false
end
function u25.stopGame(p137, p138) --[[Anonymous function at line 498]]
    --[[
    Upvalues:
        [1] = u30
        [2] = u11
        [3] = u28
        [4] = u10
        [5] = u14
        [6] = u47
    --]]
    if p137.updateConnection then
        p137.updateConnection:Disconnect()
        p137.updateConnection = nil
    end
    if p137.inputConnection then
        p137.inputConnection:Disconnect()
        p137.inputConnection = nil
    end
    local u139 = u30.Overlay
    local v140 = u139.Result
    local v141 = u11:Get()
    local v142 = not v141 and 0 or v141.DoggyJump.Claimed
    u28.Input.Visible = false
    u139.Play.Visible = false
    delay(0.5, function() --[[Anonymous function at line 522]]
        --[[
        Upvalues:
            [1] = u139
        --]]
        u139.Play.Visible = true
    end)
    if p138 then
        local v143 = 0
        for v144, v145 in u10.PrizeScores do
            if v145 <= p138 and v142 < v144 then
                v143 = v144
            end
        end
        local v146 = #u10.PrizeScores <= v142
        local v147 = v143 > 0
        if v147 then
            u14:FireServer("DoggyJumpWin", v143)
        end
        if v146 then
            v140.Extra.Visible = true
            v140.Extra.Text = "More prizes available later!"
            v140.Prizes.Visible = false
        elseif p138 < u10.PrizeScores[1] then
            v140.Extra.Visible = true
            v140.Extra.Text = "Get a higher score to win prizes!"
            v140.Prizes.Visible = false
        elseif v147 then
            v140.Extra.Visible = false
            v140.Prizes.Visible = true
            for v148, v149 in u10.PrizeScores do
                local v150 = u47[v148]
                local v151
                if v149 <= p138 then
                    v151 = v142 < v148
                else
                    v151 = false
                end
                v150.Visible = v151
            end
        else
            v140.Extra.Visible = true
            v140.Extra.Text = "Get a higher score to win more prizes!"
            v140.Prizes.Visible = false
        end
        v140.Subtitle.Visible = v140.Prizes.Visible
        v140.Visible = true
    else
        v140.Visible = false
    end
    u139.Visible = true
    p137.running = false
end
function u25.resetGame(p152) --[[Anonymous function at line 582]]
    --[[
    Upvalues:
        [1] = u30
        [2] = u87
        [3] = u31
        [4] = u34
    --]]
    p152.t = 0
    p152.speed = p152.SPEED_MIN
    p152.score = 0
    p152.lastObject = p152.UNTIL_FIRST_OBJECT - p152.OBJECTS_PER_SECOND_MIN
    p152.running = false
    u30.Score.Text = ("Score: %i"):format(0)
    u87()
    local v153 = p152.objects
    for v154 in ipairs(v153) do
        v153[v154].f:Destroy()
        v153[v154] = nil
    end
    local v155 = p152.layers
    for v156, v157 in pairs(v155) do
        v157.p = 0
        local v158 = u31:FindFirstChild(v156)
        v158.Frame1.Position = UDim2.fromScale(0, 0)
        v158.Frame2.Position = UDim2.fromScale(1, 0)
    end
    local v159 = p152.doggy
    v159.p = Vector2.new(40, 0)
    v159.v = Vector2.new(0, 0)
    v159.j = false
    u34.Position = UDim2.new(0, v159.p.x, 1, 0)
    u34.Rotation = 0
end
function u25.startGame(u160, _) --[[Anonymous function at line 617]]
    --[[
    Upvalues:
        [1] = u16
        [2] = u3
        [3] = u4
        [4] = u28
        [5] = u30
    --]]
    u160:resetGame()
    spawn(function() --[[Anonymous function at line 620]]
        --[[
        Upvalues:
            [1] = u16
        --]]
        u16:SetTrack("rbxassetid://4853930727")
    end)
    local u161 = 0
    u160.updateConnection = u3.Heartbeat:Connect(function(p162) --[[Anonymous function at line 625]]
        --[[
        Upvalues:
            [1] = u161
            [2] = u160
        --]]
        u161 = u161 + p162
        while u161 >= 0.016666666666666666 do
            if u160:stepGame(0.016666666666666666) then
                u160:stopGame(u160.score)
            end
            u161 = u161 - 0.016666666666666666
        end
    end)
    local u163 = u160.doggy
    u160.inputConnection = u4.InputBegan:Connect(function(p164) --[[Anonymous function at line 639]]
        --[[
        Upvalues:
            [1] = u163
            [2] = u160
        --]]
        local v165 = p164.UserInputType
        if (v165 == Enum.UserInputType.MouseButton1 or (v165 == Enum.UserInputType.Touch or p164.KeyCode == Enum.KeyCode.ButtonY)) and not u163.j then
            u163.j = true
            u163.v = u160.JUMP_SPEED
            u160:playSound("Spring", 0.8)
        end
    end)
    u28.Input.Visible = true
    u30.Overlay.Visible = false
    u160.running = true
end
u8:BindOnOpened("DoggyJump", function() --[[Anonymous function at line 662]]
    --[[
    Upvalues:
        [1] = u27
    --]]
    u27.HUD.Visible = false
end)
u8:BindOnClosed("DoggyJump", function() --[[Anonymous function at line 669]]
    --[[
    Upvalues:
        [1] = u25
        [2] = u27
    --]]
    u25:stopGame(nil)
    u27.HUD.Visible = true
end)
v6(u29.Parent.Parent.Top.Close.Button, v9.Button.Red)
v7(u29.Parent.Parent.Top.Close.Button, function() --[[Anonymous function at line 680]]
    --[[
    Upvalues:
        [1] = u8
    --]]
    u8:Close()
end)
v6(u29.Area.Overlay.Play.Button, v9.Button.Purple)
v7(u29.Area.Overlay.Play.Button, function() --[[Anonymous function at line 688]]
    --[[
    Upvalues:
        [1] = u25
    --]]
    if not u25.running then
        u25:startGame()
    end
end)
u4.InputBegan:Connect(function(p166, p167) --[[Anonymous function at line 695]]
    --[[
    Upvalues:
        [1] = u8
        [2] = u25
        [3] = u29
    --]]
    if not p167 and (u8:IsOpen("DoggyJump") and not u25.running) then
        if p166.KeyCode == Enum.KeyCode.ButtonY and u29.Area.Overlay.Play.Visible then
            u25:startGame()
        end
    end
end)
u28.Input.Gamepad.Icon.Image = u4:GetImageForKeyCode(Enum.KeyCode.ButtonY)
u29.Area.Overlay.Play.Button.GamepadIcon.Image = u4:GetImageForKeyCode(Enum.KeyCode.ButtonY)
v18.Changed:Connect(function(p168) --[[Function name: onInputChanged, line 709]]
    --[[
    Upvalues:
        [1] = u28
        [2] = u29
    --]]
    u28.Input.Main.Visible = p168 == "Keyboard" and true or p168 == "Touch"
    u28.Input.Gamepad.Visible = p168 == "Gamepad"
    u29.Area.Overlay.Play.Button.GamepadIcon.Visible = p168 == "Gamepad"
    if p168 == "Keyboard" then
        u28.Input.Main.Text = "Click to jump!"
    elseif p168 == "Touch" then
        u28.Input.Main.Text = "Tap to jump!"
    end
end)
local v169 = v18.Mode
u28.Input.Main.Visible = v169 == "Keyboard" and true or v169 == "Touch"
u28.Input.Gamepad.Visible = v169 == "Gamepad"
u29.Area.Overlay.Play.Button.GamepadIcon.Visible = v169 == "Gamepad"
if v169 == "Keyboard" then
    u28.Input.Main.Text = "Click to jump!"
elseif v169 == "Touch" then
    u28.Input.Main.Text = "Tap to jump!"
end
function u25.Stop(_) --[[Anonymous function at line 726]]
    --[[
    Upvalues:
        [1] = u25
    --]]
    u25:stopGame(nil)
    u25:resetGame()
end
function u25.IsPlaying(_) --[[Anonymous function at line 731]]
    --[[
    Upvalues:
        [1] = u25
    --]]
    return u25.running == true
end
u25:Stop()
v17:Bind(v35, function() --[[Anonymous function at line 738]]
    --[[
    Upvalues:
        [1] = u8
    --]]
    u8:Open("DoggyJump")
end)
return u25