--devbgascension

-- Bytecode (Base64):
-- 

local v1 = game:GetService("ReplicatedStorage")
local v2 = game:GetService("Players")
local u3 = game:GetService("MarketplaceService")
game:GetService("RunService")
require(v1.Shared.Types)
local u4 = require(v1.Client.Framework.Services.LocalData)
local u5 = require(v1.Client.Gui.Utils.AutoButtonColor)
local v6 = require(v1.Client.Gui.Utils.ClickableButton)
local u7 = require(v1.Client.Gui.GuiFrame)
local u8 = require(v1.Shared.Palette)
local u9 = require(v1.Shared.Framework.Utilities.Math.Time)
local u10 = require(v1.Shared.Data.StarsShop)
local u11 = require(v1.Shared.Framework.Network.Remote)
local u12 = require(v1.Shared.Framework.Utilities.String.FormatCommas)
local u13 = require(v1.Shared.Constants)
local v14 = require(v1.Client.Gui.Utils.ItemFrame)
local v15 = require(v1.Shared.Framework.Utilities.String.FormatSuffix)
local u16 = require(v1.Shared.Utils.Stats.ItemUtil)
local u17 = require(v1.Shared.Data.Builders.PromptBuilder)
local u18 = require(v1.Client.Gui.Prompt)
local v19 = require(v1.Client.Framework.Utilities.Gui.HookScrollingFrame)
local v20 = require(v1.Shared.Data.DailyRewards)
local v21 = require(v1.Client.Gui.Tooltip)
local u22 = require(v1.Shared.Data.Builders.TooltipBuilder)
local u23 = require(v1.Shared.Utils.AnimateColor)
local u24 = require(v1.Client.Gui.Animations.ProcessingPurchase)
require(v1.Client.Tutorial)
local u25 = require(v1.Shared.Framework.Utilities.ProductInfo)
local u26 = require(v1.Client.Gui.Utils.CheckInventorySpace)
if require(v1.Shared.Utils.IsTradingPlaza)() then
    return {}
end
local u27 = v2.LocalPlayer
local v28 = u27.PlayerGui.ScreenGui
local u29 = v28.UIScale
local u30 = v28.DailyRewards
task.spawn(function() --[[Anonymous function at line 55]]
    --[[
    Upvalues:
        [1] = u7
        [2] = u9
        [3] = u30
    --]]
    while true do
        if u7:IsOpen("DailyRewards") then
            local v31 = u9.untilMidnight()
            u30.Shop.Top.Countdown.Text = string.format("%02i:%02i:%02i", v31 // 3600, v31 // 60 % 60, v31 % 60)
        end
        task.wait(0.25)
    end
end)
local v32 = u30.Login.Frame.Content
local v33 = v32.Template
v33.Parent = nil
local u34 = {}
for v35 = 1, 7 do
    local u36 = v20[v35]
    local v37 = ("Day%*"):format(v35)
    local u38
    if v35 == 7 then
        u38 = u30.Login.Frame.Bundle
    else
        u38 = false
    end
    if not u38 then
        u38 = v33:Clone()
        u38.Name = v37
        u38.LayoutOrder = v35
    end
    local function v41() --[[Anonymous function at line 85]]
        --[[
        Upvalues:
            [1] = u38
            [2] = u29
        --]]
        local v39 = u38.Amount.Label.TextBounds.X / u29.Scale
        local v40 = math.ceil(v39) + 1
        u38.Amount.Label.Size = UDim2.fromOffset(v40, 30)
    end
    local v42 = u38:FindFirstChild("Items")
    if v42 then
        for _, v43 in v42:GetChildren() do
            if v43:IsA("Frame") then
                local u44 = u36[v43.LayoutOrder]
                if u44 then
                    u16:FormatAmount(v43.Amount, u44)
                    u16:UpdateIcon(v43, u44)
                    v21:OnEnter(v43.Hover, function() --[[Anonymous function at line 100]]
                        --[[
                        Upvalues:
                            [1] = u22
                            [2] = u44
                        --]]
                        return u22.fromItem(u44)
                    end)
                end
                v43.Visible = u44 ~= nil
            end
        end
    else
        u16:FormatAmount(u38.Icon.Amount, u36[1])
        u16:UpdateIcon(u38.Icon, u36[1])
        u38.Parent = v32
        v21:OnEnter(u38.Hover, function() --[[Anonymous function at line 110]]
            --[[
            Upvalues:
                [1] = u22
                [2] = u36
            --]]
            return u22.fromItem(u36[1])
        end)
    end
    u29:GetPropertyChangedSignal("Scale"):Connect(v41)
    u38.Amount.Label:GetPropertyChangedSignal("TextBounds"):Connect(v41)
    local v45 = u38.Amount.Label.TextBounds.X / u29.Scale
    local v46 = math.ceil(v45) + 1
    u38.Amount.Label.Size = UDim2.fromOffset(v46, 30)
    u34[v35] = u38
end
local v47 = u30.Shop.Content.ScrollingFrame
local v48 = v47.Template
v48.Parent = nil
v19(v47, v47.UIGridLayout)
local u49 = {}
for u50, u51 in u10 do
    local v52 = v48:Clone()
    local v53, _ = v14(u51.Item, true, true)
    v53.Size = UDim2.fromScale(1, 1)
    v53.Parent = v52.Frame
    local u54 = v52.Buy.Button.Frame.Label
    u54.Text = v15(u51.Cost, 5000)
    local function v57() --[[Anonymous function at line 150]]
        --[[
        Upvalues:
            [1] = u54
            [2] = u29
        --]]
        local v55 = u54.TextBounds.X / u29.Scale
        local v56 = math.ceil(v55) + 1
        u54.Size = UDim2.new(0, v56, 1, 0)
    end
    u29:GetPropertyChangedSignal("Scale"):Connect(v57)
    u54:GetPropertyChangedSignal("TextBounds"):Connect(v57)
    local v58 = u54.TextBounds.X / u29.Scale
    local v59 = math.ceil(v58) + 1
    u54.Size = UDim2.new(0, v59, 1, 0)
    v6(v52.Buy.Button, function() --[[Anonymous function at line 161]]
        --[[
        Upvalues:
            [1] = u4
            [2] = u51
            [3] = u16
            [4] = u17
            [5] = u18
            [6] = u26
            [7] = u11
            [8] = u50
        --]]
        local v60 = u4:Get()
        if v60 then
            local v61 = {
                ["Type"] = "Currency",
                ["Currency"] = "Stars",
                ["Amount"] = u51.Cost
            }
            if u16:GetOwnedAmount(v60, v61) < u16:GetAmount(v61) then
                return u18(u17.fromNotEnough(v60, v61, function(p62) --[[Anonymous function at line 174]]
                    return ("You need %* to buy this!"):format(p62)
                end):Build())
            elseif u51.Item.Type ~= "Pet" or u26(v60) then
                u11:FireServer("DailyRewardsBuyItem", u50)
            end
        else
            return
        end
    end)
    v52.Parent = v47
    u49[u50] = v52
end
local u63 = nil
local function v83() --[[Anonymous function at line 196]]
    --[[
    Upvalues:
        [1] = u4
        [2] = u9
        [3] = u30
        [4] = u12
        [5] = u13
        [6] = u25
        [7] = u63
        [8] = u49
        [9] = u10
        [10] = u16
        [11] = u5
        [12] = u8
        [13] = u34
        [14] = u23
    --]]
    local v64 = u4:Get()
    if not v64 then
        return
    end
    local v65 = v64.DailyRewards
    local v66 = u9.getAbsoluteDay() > v65.LastDay
    local v67 = u30.Login
    local v68 = not v66
    if v68 then
        v68 = not v65.Claimed
    end
    v67.Visible = v68
    u30.Shop.Visible = not u30.Login.Visible
    u30.Shop.Streak.Label.Text = ("\240\159\148\165 %* Day%*"):format(v65.LastStreak, v65.LastStreak == 1 and "" or "s")
    u30.Shop.Content.Cover.Label.Text = ("You lost your %*-day streak!"):format(v65.LastStreak)
    u30.Shop.Content.Cover.Visible = v66
    u30.Shop.Top.Amount.Label.Text = u12(v65.Stars)
    if v66 then
        local v69 = u13.DailyRewardsProducts
        for v70 = #v69, 1, -1 do
            local v71 = v69[v70]
            if v65.LastStreak >= v71.Days then
                u30.Shop.Content.Cover.Buttons.Buy.Button.Visible = false
                u25.fromProduct(v71.ProductId, function(p72) --[[Anonymous function at line 221]]
                    --[[
                    Upvalues:
                        [1] = u30
                        [2] = u13
                    --]]
                    u30.Shop.Content.Cover.Buttons.Buy.Button.Visible = true
                    u30.Shop.Content.Cover.Buttons.Buy.Button.Label.Text = ("%*%*"):format(u13.RobuxUnicode, p72 and p72.PriceInRobux or "__")
                end)
                u63 = v71.ProductId
                break
            end
        end
    else
        u63 = nil
    end
    local v73 = u9.untilMidnight()
    u30.Shop.Top.Countdown.Text = string.format("%02i:%02i:%02i", v73 // 3600, v73 // 60 % 60, v73 % 60)
    for v74, v75 in u49 do
        if u16:CanAfford(v64, {
            ["Type"] = "Currency",
            ["Currency"] = "Stars",
            ["Amount"] = u10[v74].Cost
        }) then
            u5(v75.Buy.Button, u8.Button.Purple)
            v75.LayoutOrder = v74
        else
            u5(v75.Buy.Button, u8.Button.Red)
            v75.LayoutOrder = v74 + 999
        end
    end
    local v76 = (v65.LastStreak - 1) % 7 + 1
    for v77, v78 in u34 do
        local v79 = v77 == v76
        local v80 = (v65.LastStreak - v76 + v77) * u13.DailyRewardsStarsPerDay
        local v81 = u13.DailyRewardsStarCap
        local v82 = math.clamp(v80, 0, v81)
        if v79 then
            u23.None(v78.Label)
            v78.Label.TextColor3 = Color3.fromRGB(255, 94, 247)
            v78.UIStroke.Color = Color3.fromRGB(255, 94, 247)
            v78.BackgroundColor3 = Color3.fromRGB(255, 212, 251)
            v78.UIStroke.Thickness = 5
            v78.Label.Text = "Today"
        else
            if v77 == 7 then
                u23.Shift(v78.Label, "Rainbow", {
                    ["Speed"] = 0.4
                })
            else
                v78.Label.TextColor3 = Color3.new(1, 1, 1)
            end
            if v77 - 1 == v76 then
                v78.Label.Text = "Tomorrow"
                u23.Cycle(v78.Label, "Shiny", {
                    ["Speed"] = 1
                })
            else
                u23.None(v78.Label)
                v78.Label.Text = ("Day %*"):format(v77)
            end
            v78.UIStroke.Thickness = 3
            v78.UIStroke.Color = Color3.fromRGB(0, 41, 94)
            v78.BackgroundColor3 = Color3.fromRGB(225, 243, 255)
        end
        v78.Amount.Label.Text = ("+%*"):format((u12(v82)))
    end
end
u5(u30.Shop.Content.Cover.Buttons.Buy.Button, u8.Button.Green)
v6(u30.Shop.Content.Cover.Buttons.Buy.Button, function() --[[Anonymous function at line 292]]
    --[[
    Upvalues:
        [1] = u63
        [2] = u24
        [3] = u3
        [4] = u27
    --]]
    if u63 then
        u24:Show()
        u3:PromptProductPurchase(u27, u63)
    end
end)
u5(u30.Shop.Content.Cover.Buttons.Forfeit.Button, u8.Button.Red)
v6(u30.Shop.Content.Cover.Buttons.Forfeit.Button, function() --[[Anonymous function at line 301]]
    --[[
    Upvalues:
        [1] = u11
    --]]
    u11:FireServer("DailyRewardsForfeitStreak")
end)
u5(u30.Login.Frame.Claim.Button, u8.Button.Purple)
v6(u30.Login.Frame.Claim.Button, function() --[[Anonymous function at line 309]]
    --[[
    Upvalues:
        [1] = u11
    --]]
    u11:FireServer("DailyRewardClaimStars")
end)
u4:ConnectDataChanged({ "DailyRewards", "Stars" }, v83)
u7:BindOnOpened("DailyRewards", v83)
u5(u30.Shop.Top.Close.Button, u8.Button.Red)
v6(u30.Shop.Top.Close.Button, function() --[[Anonymous function at line 321]]
    --[[
    Upvalues:
        [1] = u7
    --]]
    u7:Close()
end)
return {}