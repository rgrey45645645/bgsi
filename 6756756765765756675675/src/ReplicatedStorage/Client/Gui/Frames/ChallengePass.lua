--devbgascension

-- Bytecode (Base64):
-- 

local v1 = game:GetService("Players")
local v2 = game:GetService("ReplicatedStorage")
local v3 = game:GetService("RunService")
local u4 = game:GetService("TextService")
local u5 = game:GetService("HttpService")
local u6 = game:GetService("TweenService")
local u7 = game:GetService("MarketplaceService")
local u8 = game:GetService("Workspace")
local u9 = game:GetService("SocialService")
local u10 = require(v2.Client.Framework.Services.LocalData)
require(v2.Client.Gui.Utils.UpdateWhileGuiOpen)
local u11 = require(v2.Shared.Data.ChallengePass)
local u12 = require(v2.Client.Gui.Utils.AutoButtonColor)
local u13 = require(v2.Shared.Palette)
local u14 = require(v2.Client.Gui.Utils.ClickableButton)
local u15 = require(v2.Client.Gui.Utils.CheckInventorySpace)
local u16 = require(v2.Shared.Framework.Network.Remote)
local v17 = require(v2.Shared.Framework.Classes.Pool)
local u18 = require(v2.Shared.Utils.Stats.QuestUtil)
local u19 = require(v2.Shared.Framework.Utilities.String.FormatSuffix)
local u20 = require(v2.Shared.Utils.Stats.ItemUtil)
local u21 = require(v2.Client.Framework.Utilities.Gui.Animations.SetFade)
local v22 = require(v2.Client.Gui.Tooltip)
local u23 = require(v2.Shared.Data.Builders.TooltipBuilder)
local u24 = require(v2.Shared.Framework.Utilities.String.FormatCommas)
local u25 = require(v2.Client.Gui.Animations.ProcessingPurchase)
local u26 = require(v2.Client.Gui.GuiFrame)
local u27 = require(v2.Shared.Data.Builders.PromptBuilder)
local u28 = require(v2.Client.Gui.Prompt)
local u29 = require(v2.Shared.Framework.Utilities.Math.Time)
local v30 = require(v2.Shared.Framework.Utilities.ProductInfo)
local u31 = require(v2.Shared.Constants)
local u32 = require(v2.Client.Gui.Utils.SetCoreGuiEnabled)
local u33 = require(v2.Client.Gui.Utils.PlayLocalSound)
require(v2.Shared.Utils.Stats.StatsUtil)
local u34 = require(v2.Client.Gui.Utils.Notification)
local u35 = require(v2.Shared.Utils.RichText)
local u36 = require(v2.Client.Gui.Utils.Shiny)
local v37 = require(v2.Shared.Utils.IsTradingPlaza)
local u38 = v1.LocalPlayer
local u39 = u38.PlayerGui.ScreenGui
local u40 = u39.UIScale
local u41 = u39.ChallengePass.Frame
local u42 = u41.ScrollingFrame
local u43 = u42.Doggy
local u44 = u41.Challenges.List.Template
u44.Parent = nil
local u45 = v17.new(function() --[[Anonymous function at line 59]]
    --[[
    Upvalues:
        [1] = u44
    --]]
    return u44:Clone()
end)
local u46 = Instance.new("NumberValue")
local u47 = u11:GetPointsForTier(u11.FinalTier)
local u48 = 0
local function u67(p49, p50) --[[Anonymous function at line 72]]
    --[[
    Upvalues:
        [1] = u41
        [2] = u48
        [3] = u46
        [4] = u47
        [5] = u11
        [6] = u42
        [7] = u40
        [8] = u43
        [9] = u24
    --]]
    if u41.Parent.Visible then
        u48 = u48 + (p49 or 0)
        local v51 = u46.Value
        local v52 = u47
        local v53 = math.min(v51, v52)
        local v54 = u11:GetTier(v53)
        local v55 = v54 < 1 and 1 or v54
        local v56 = v55 + 1
        local v57 = u11:GetPointsForTier(v55)
        local v58 = u11:GetPointsForTier(v56)
        local v59 = (v55 + (v53 - v57) / (v58 - v57)) * -300 - 50
        local v60 = u48 * 3
        local v61 = v59 + math.sin(v60) * 10
        local v62 = math.min(-25, v61)
        if p50 then
            local v63 = u42.AbsoluteWindowSize.Y
            local v64 = u42.AbsoluteCanvasSize.Y + v59 * u40.Scale - v63 / 2
            u42.CanvasPosition = Vector2.new(0, v64)
        end
        local v65 = u46.Value / u47
        local v66 = 0.75 + v65
        u43.Bubble.Label.Text = u24((math.ceil(v53)))
        u43.Bubble.Size = UDim2.fromScale(v66, v66)
        u43.Bubble.Label.TextSize = 45 + 30 * v65
        u43.Position = UDim2.new(0, 20, 1, v62)
    end
end
u40:GetPropertyChangedSignal("Scale"):Connect(function() --[[Anonymous function at line 111]]
    --[[
    Upvalues:
        [1] = u67
    --]]
    u67(0, false)
end)
u46:GetPropertyChangedSignal("Value"):Connect(function() --[[Anonymous function at line 115]]
    --[[
    Upvalues:
        [1] = u67
    --]]
    u67(0, true)
end)
v3.Heartbeat:Connect(function(p68) --[[Anonymous function at line 119]]
    --[[
    Upvalues:
        [1] = u67
    --]]
    u67(p68, false)
end)
u26:BindOnOpened("ChallengePass", function() --[[Anonymous function at line 123]]
    --[[
    Upvalues:
        [1] = u67
    --]]
    u67(0, true)
end)
local u69 = nil
u10:ConnectDataChanged("ChallengePass", function(p70) --[[Anonymous function at line 131]]
    --[[
    Upvalues:
        [1] = u11
        [2] = u69
        [3] = u67
    --]]
    local v71 = 0
    for v72 = 1, u11:GetTier(p70.ChallengePass.Points) do
        if not table.find(p70.ChallengePass.Claimed, v72) then
            v71 = v72
            break
        end
    end
    if v71 ~= u69 then
        u69 = v71
        u67(0, true)
    end
end)
u26:BindOnOpened("ChallengePass", function() --[[Anonymous function at line 146]]
    --[[
    Upvalues:
        [1] = u39
        [2] = u32
    --]]
    u39.HUD.Visible = false
    u39.Notifications.Visible = false
    u32(false)
end)
u26:BindOnClosed("ChallengePass", function() --[[Anonymous function at line 153]]
    --[[
    Upvalues:
        [1] = u39
        [2] = u32
    --]]
    u39.HUD.Visible = true
    u39.Notifications.Visible = true
    u32(true)
end)
u12(u41.Parent.Close, u13.Button.Red)
u14(u41.Parent.Close, function() --[[Anonymous function at line 164]]
    --[[
    Upvalues:
        [1] = u26
    --]]
    u26:Close()
end)
local v73 = u41.ScrollingFrame.Clouds
local v74 = v73.Template
v74.Parent = nil
local u75 = {}
for u76 = 1, u11.FinalTier do
    local u77 = v74:Clone()
    u77.Name = ("Tier%*"):format(u76)
    u77.LayoutOrder = u11.FinalTier - u76
    local v78 = u77.Cloud
    local v79 = UDim2.new
    local v80 = u76 * 2
    v78.Position = v79(1, math.sin(v80) * 15 - 15, 0.5, 0)
    local v81 = u11:GetPointsForTier(u76)
    u77.Cloud.Label.Text = u24(v81)
    v22:OnEnter(u77.Cloud.Item.Hover, function() --[[Anonymous function at line 187]]
        --[[
        Upvalues:
            [1] = u77
            [2] = u5
            [3] = u23
        --]]
        local v82 = u77:GetAttribute("Item")
        if v82 then
            local v83 = u5:JSONDecode(v82)
            if v83 then
                return u23.fromItem(v83)
            end
        end
    end)
    u12(u77.Cloud.Claim.Button, u13.Button.Green)
    u14(u77.Cloud.Claim.Button, function() --[[Anonymous function at line 200]]
        --[[
        Upvalues:
            [1] = u10
            [2] = u76
            [3] = u15
            [4] = u16
        --]]
        local v84 = u10:Get()
        if v84 then
            if v84.ChallengePass.Rewards[u76].Type ~= "Pet" or u15(v84) then
                u16:FireServer("ChallengePassClaimReward")
            end
        else
            return
        end
    end)
    u12(u77.Cloud.FreeSkip.Button, u13.Button.Purple)
    u14(u77.Cloud.FreeSkip.Button, function() --[[Anonymous function at line 216]]
        --[[
        Upvalues:
            [1] = u16
        --]]
        u16:FireServer("ChallengePassFreeSkip")
    end)
    u77.Parent = v73
    u75[u76] = u77
end
local u85 = u41.Buttons.UnlockAll
u12(u85.Button, u13.Button.Orange)
u14(u85.Button, function() --[[Anonymous function at line 232]]
    --[[
    Upvalues:
        [1] = u25
        [2] = u7
        [3] = u38
        [4] = u11
    --]]
    u25:Show()
    u7:PromptProductPurchase(u38, u11.UnlockAllProductId)
end)
v30:ConnectProductChanged(u11.UnlockAllProductId, function(p86) --[[Anonymous function at line 237]]
    --[[
    Upvalues:
        [1] = u24
        [2] = u85
        [3] = u31
    --]]
    local v87 = not (p86 and p86.PriceInRobux) and "__" or u24(p86.PriceInRobux)
    u85.Button.Label.Text = ("%*%*"):format(u31.RobuxUnicode, v87)
end)
local u88 = u41.Buttons.ResetRobux
u12(u88.Button, u13.Button.Orange)
u14(u88.Button, function() --[[Anonymous function at line 249]]
    --[[
    Upvalues:
        [1] = u25
        [2] = u7
        [3] = u38
        [4] = u11
    --]]
    u25:Show()
    u7:PromptProductPurchase(u38, u11.ResetProductId)
end)
v30:ConnectProductChanged(u11.ResetProductId, function(p89) --[[Anonymous function at line 254]]
    --[[
    Upvalues:
        [1] = u24
        [2] = u88
        [3] = u31
    --]]
    local v90 = not (p89 and p89.PriceInRobux) and "__" or u24(p89.PriceInRobux)
    u88.Button.Label.Text = ("%*%*"):format(u31.RobuxUnicode, v90)
end)
local u91 = u41.Buttons.ResetGems
u12(u91.Button, u13.Button.Purple)
u14(u91.Button, function() --[[Anonymous function at line 266]]
    --[[
    Upvalues:
        [1] = u10
        [2] = u11
        [3] = u20
        [4] = u27
        [5] = u28
        [6] = u16
    --]]
    local v92 = u10:Get()
    if v92 then
        local v93 = u11:GetResetCost(v92.ChallengePass.GemResets)
        if not u20:CanAfford(v92, v93) then
            return u28(u27.fromNotEnough(v92, v93, function(p94) --[[Anonymous function at line 274]]
                return ("You need %* to reset the pass!"):format(p94)
            end):Build())
        end
        u16:FireServer("ChallengePassReset")
    end
end)
local function v98() --[[Anonymous function at line 284]]
    --[[
    Upvalues:
        [1] = u91
        [2] = u40
    --]]
    local v95 = u91.Button.Cost.Label
    local v96 = v95.TextBounds.X / u40.Scale
    local v97 = math.ceil(v96) + 1
    v95.Size = UDim2.new(0, v97, 1, 0)
end
u91.Button.Cost.Label:GetPropertyChangedSignal("TextBounds"):Connect(v98)
u40:GetPropertyChangedSignal("Scale"):Connect(v98)
local v99 = u91.Button.Cost.Label
local v100 = v99.TextBounds.X / u40.Scale
local v101 = math.ceil(v100) + 1
v99.Size = UDim2.new(0, v101, 1, 0)
local u102 = u41.Challenges.Skip
u12(u102.Button, u13.Button.Green)
u14(u102.Button, function() --[[Anonymous function at line 300]]
    --[[
    Upvalues:
        [1] = u25
        [2] = u7
        [3] = u38
        [4] = u11
    --]]
    u25:Show()
    u7:PromptProductPurchase(u38, u11.SkipChallengesProductId)
end)
v30:ConnectProductChanged(u11.SkipChallengesProductId, function(p103) --[[Anonymous function at line 306]]
    --[[
    Upvalues:
        [1] = u24
        [2] = u102
        [3] = u31
    --]]
    local v104 = not (p103 and p103.PriceInRobux) and "__" or u24(p103.PriceInRobux)
    u102.Button.Label.Text = ("%*%*"):format(u31.RobuxUnicode, v104)
end)
local u105 = u41.Buttons.ClaimAll
u12(u105.Button, u13.Button.Green)
u14(u105.Button, function() --[[Anonymous function at line 316]]
    --[[
    Upvalues:
        [1] = u10
        [2] = u11
        [3] = u15
        [4] = u16
    --]]
    local v106 = u10:Get()
    if not v106 then
        return
    end
    local v107 = v106.ChallengePass
    local v108 = {}
    for v109 = 1, u11:GetTier(v107.Points) do
        if not table.find(v107.Claimed, v109) then
            table.insert(v108, v109)
        end
    end
    if #v108 == 0 then
        return
    end
    local v110 = false
    for _, v111 in v108 do
        if v107.Rewards[v111].Type == "Pet" then
            v110 = true
            break
        end
    end
    if not v110 or u15(v106) then
        u16:FireServer("ChallengePassClaimAll")
    end
end)
local u112 = u39.HUD.Left.Currency.Coins.Bundles.ChallengePass
if v37() then
    u112.Visible = false
    return {}
end
u14(u112.Button, function() --[[Anonymous function at line 365]]
    --[[
    Upvalues:
        [1] = u26
    --]]
    u26:Open("ChallengePass")
end)
task.spawn(function() --[[Anonymous function at line 369]]
    --[[
    Upvalues:
        [1] = u11
        [2] = u10
        [3] = u112
        [4] = u26
        [5] = u8
        [6] = u29
    --]]
    while true do
        local v113 = u11:IsActive()
        local v114 = u10:Get()
        if v114 and not v114.AreasUnlocked.Zen then
            v113 = false
        end
        u112.Visible = v113
        if u26:IsOpen("ChallengePass") and not v113 then
            u26:Close()
        end
        local v115 = u11.FinishTime.UnixTimestamp - u8:GetServerTimeNow()
        local v116 = math.max(0, v115)
        u112.Button.Label.Text = u29.formatRealTime(v116)
        task.wait(1)
    end
end)
local u117 = u41.FreeSkips
local u118 = u117.Invite.Button
local function u124() --[[Anonymous function at line 397]]
    --[[
    Upvalues:
        [1] = u10
        [2] = u117
        [3] = u8
        [4] = u11
        [5] = u118
        [6] = u29
    --]]
    local v119 = u10:Get()
    if v119 then
        local v120 = v119.ChallengePass.FreeSkips
        u117.Amount.Text = ("%* Skip%*"):format(v120, v120 == 1 and "" or "s")
        local v121 = u8:GetServerTimeNow()
        local v122 = (v119.ChallengePass.LastInviteBonus or 0) + u11.InviteBonusPeriod - v121
        local v123 = v122 > 0
        u118.BackgroundTransparency = v123 and 0.5 or 0
        u118.UIStroke.Transparency = v123 and 0.75 or 0
        u118.Label.TextTransparency = v123 and 0.25 or 0
        u118.Label.UIStroke.Transparency = v123 and 0.75 or 0
        u118.Active = not v123
        u118.Selectable = not v123
        if v122 > 0 then
            u118.Label.Text = ("\226\143\179 %*"):format((u29.formatTime(v122)))
        else
            u118.Label.Text = "Invite"
        end
    else
        return
    end
end
task.spawn(function() --[[Anonymous function at line 427]]
    --[[
    Upvalues:
        [1] = u26
        [2] = u124
    --]]
    while true do
        if u26:IsOpen("ChallengePass") then
            u124()
        end
        task.wait(0.5)
    end
end)
u12(u118, u13.Button.Purple)
u14(u118, function() --[[Anonymous function at line 440]]
    --[[
    Upvalues:
        [1] = u9
        [2] = u38
    --]]
    Instance.new("ExperienceInviteOptions").PromptMessage = "Earn a free skip when a friend joins from your invite!"
    u9:PromptGameInvite(u38)
end)
local function u136() --[[Anonymous function at line 452]]
    --[[
    Upvalues:
        [1] = u10
        [2] = u18
        [3] = u45
        [4] = u19
        [5] = u20
        [6] = u4
        [7] = u41
    --]]
    local v125 = u10:Get()
    if v125 then
        for v126 = 1, 3 do
            local v127 = ("bubble-challenge-%*"):format(v126)
            local v128 = u18:FindById(v125, v127)
            if v128 then
                local v129 = v128.Tasks[1]
                local v130 = v128.Rewards[1]
                local v131 = v128.Progress[1] / u18:GetRequirement(v129)
                local v132 = u45:Get()
                v132.Name = v127
                v132.LayoutOrder = v126
                v132.Completed.Visible = v128.Claimed or false
                v132.Content.Bar.Fill.Size = UDim2.new(v131, 0, 1, 6)
                local v133 = v132.Content.Bar.Label
                local v134 = v131 * 100
                v133.Text = ("%*%%"):format((math.ceil(v134)))
                v132.Content.Label.Text = u18:FormatTask(v129)
                u18:UpdateIcon(v132.Icon, v128)
                local v135 = v132.Content.Reward.Amount
                v135.Text = u19(u20:GetAmount(v130))
                v135.Size = UDim2.fromOffset(u4:GetTextSize(v135.Text, v135.TextSize, v135.Font, Vector2.new((1 / 0))).X, 30)
                v132.Parent = u41.Challenges.List
            end
        end
        u45:Done()
    end
end
local u137 = nil
local u138 = nil
local u139 = u39.HUD.Left.Currency.Coins.Bundles.ChallengePass.Button.Notification
local function v165() --[[Anonymous function at line 491]]
    --[[
    Upvalues:
        [1] = u10
        [2] = u43
        [3] = u19
        [4] = u11
        [5] = u85
        [6] = u88
        [7] = u91
        [8] = u137
        [9] = u6
        [10] = u46
        [11] = u75
        [12] = u20
        [13] = u5
        [14] = u21
        [15] = u138
        [16] = u34
        [17] = u35
        [18] = u13
        [19] = u12
        [20] = u14
        [21] = u26
        [22] = u139
        [23] = u105
        [24] = u124
        [25] = u136
    --]]
    local v140 = u10:Get()
    if not v140 then
        return
    end
    local v141 = v140.ChallengePass
    u43.Bubble.Label.Text = u19(v141.Points, 10000)
    local v142 = u11:GetTier(v141.Points)
    local v143 = 0
    for v144 = 1, v142 do
        if not table.find(v141.Claimed, v144) then
            v143 = v144
            break
        end
    end
    u85.Visible = v142 < u11.FinalTier
    local v145
    if u11.FinalTier <= v142 then
        v145 = #v141.Claimed == u11.FinalTier
    else
        v145 = false
    end
    u88.Visible = v145
    u91.Visible = v145
    local v146 = u11:GetResetCost(v141.GemResets)
    u91.Button.Cost.Label.Text = u19(v146.Amount, 10000)
    local v147 = v141.Points
    if v143 ~= 0 then
        local v148 = u11
        v147 = math.min(v147, v148:GetPointsForTier(v143))
    end
    if v147 ~= u137 then
        u6:Create(u46, TweenInfo.new(0.75, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {
            ["Value"] = v147
        }):Play()
    end
    u137 = v147
    local _ = v143 == 0
    local v149 = u11:GetTier(v141.Points)
    local v150 = u11:GetTier(v147)
    for v151, v152 in u75 do
        local v153 = table.find(v141.Claimed, v151) ~= nil
        local v154 = v151 <= v149
        v152.Cloud.Claim.Visible = v154
        v152.Cloud.Claim.Claimed.Visible = v153
        local v155 = v150 < v151
        local v156 = v152.Cloud.Claim.Button
        v156.Visible = not v153
        v156.BackgroundTransparency = v155 and 0.5 or 0
        v156.UIStroke.Transparency = v155 and 0.75 or 0
        v156.Label.TextTransparency = v155 and 0.25 or 0
        v156.Label.UIStroke.Transparency = v155 and 0.75 or 0
        v156.Active = not v155
        v156.Selectable = not v155
        local v157 = v151 == v149 + 1
        if v157 then
            v157 = v141.FreeSkips > 0
        end
        v152.Cloud.FreeSkip.Visible = v157
        local v158 = v152.Cloud.Label
        local v159 = not v154
        if v159 then
            v159 = not v157
        end
        v158.Visible = v159
        local v160 = v141.Rewards[v151]
        u20:UpdateIcon(v152.Cloud.Item, v160)
        u20:FormatAmount(v152.Cloud.Item.Amount, v160)
        v152:SetAttribute("Item", u5:JSONEncode(v160))
        u21(v152.Cloud.Item, v153 and 0.35 or 0, nil, { "ImageButton", "Frame" })
    end
    local v161 = 0
    for v162 = 1, v149 do
        if not table.find(v141.Claimed, v162) then
            v161 = v161 + 1
        end
    end
    if v161 ~= u138 then
        if u138 and u138 < v161 then
            local v164 = {
                ["Sound"] = "NotificationSeason",
                ["Button"] = function(p163) --[[Function name: Button, line 579]]
                    --[[
                    Upvalues:
                        [1] = u12
                        [2] = u13
                        [3] = u14
                        [4] = u26
                    --]]
                    p163.Label.Text = "Open"
                    u12(p163, u13.Button.Orange)
                    u14(p163, function() --[[Anonymous function at line 582]]
                        --[[
                        Upvalues:
                            [1] = u26
                        --]]
                        u26:Open("ChallengePass")
                    end)
                end
            }
            u34(("You have %* to claim!"):format((u35.autoColor("Challenge Rewards", u13.Text.Yellow))), v164)
        end
        u138 = v161
    end
    u139.Visible = v161 > 0
    u139.Label.Text = v161 > 9 and "!" or tostring(v161)
    u105.Visible = v161 > 1
    u124()
    u136()
end
u26:BindOnOpened("ChallengePass", function() --[[Anonymous function at line 602]]
    --[[
    Upvalues:
        [1] = u36
        [2] = u41
    --]]
    u36:Add(u41.Buttons.UnlockAll.Effect)
end)
u26:BindOnClosed("ChallengePass", function() --[[Anonymous function at line 605]]
    --[[
    Upvalues:
        [1] = u36
        [2] = u41
    --]]
    u36:Remove(u41.Buttons.UnlockAll.Effect)
end)
u16.Event("ChallengePassReset"):Connect(function() --[[Anonymous function at line 610]]
    --[[
    Upvalues:
        [1] = u43
        [2] = u33
        [3] = u6
    --]]
    local v166 = u43.Bubble
    local u167 = v166.Pop:Clone()
    u167.Visible = true
    u167.ImageTransparency = 1
    u167.Size = UDim2.fromOffset(50, 50)
    u167.Parent = v166
    local u168 = TweenInfo.new(0.5, Enum.EasingStyle.Sine)
    u33("Pop")
    u6:Create(u43.Label, u168, {
        ["Rotation"] = 180
    }):Play()
    u6:Create(u167, TweenInfo.new(0.5, Enum.EasingStyle.Back), {
        ["Size"] = UDim2.fromOffset(200, 200),
        ["ImageTransparency"] = 0.5
    }):Play()
    v166.ImageTransparency = 1
    v166.Label.Visible = false
    task.delay(0.5, function() --[[Anonymous function at line 631]]
        --[[
        Upvalues:
            [1] = u6
            [2] = u167
            [3] = u168
        --]]
        u6:Create(u167, u168, {
            ["ImageTransparency"] = 1
        }):Play()
        task.wait(u168.Time)
        u167:Destroy()
    end)
    task.wait(1)
    v166.Label.Visible = true
    u6:Create(u43.Label, u168, {
        ["Rotation"] = 0
    }):Play()
    u6:Create(v166, u168, {
        ["ImageTransparency"] = 0
    }):Play()
end)
u10:ConnectDataChanged({ "ChallengePass", "Quests", "QuestsCompleted" }, v165)
return {}