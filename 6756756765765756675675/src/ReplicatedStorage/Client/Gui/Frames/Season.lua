--devbgascension

-- Bytecode (Base64):
-- 

local u1 = game:GetService("Players")
local u2 = game:GetService("ReplicatedStorage")
local u3 = game:GetService("TweenService")
local v4 = game:GetService("RunService")
local u5 = game:GetService("TextService")
local u6 = game:GetService("MarketplaceService")
local u7 = game:GetService("TextChatService")
local u8 = require(u2.Shared.Utils.Stats.SeasonUtil)
local v9 = require(u2.Shared.Framework.Classes.Maid)
local u10 = require(u2.Client.Gui.Utils.ItemFrame)
local u11 = require(u2.Shared.Utils.AnimateColor)
local v12 = require(u2.Client.Gui.Utils.Shiny)
local v13 = require(u2.Shared.Framework.Utilities.every)
local u14 = require(u2.Shared.Framework.Utilities.Math.Time)
local u15 = require(u2.Client.Framework.Services.LocalData)
local u16 = require(u2.Shared.Framework.Utilities.String.FormatSuffix)
local u17 = require(u2.Client.Gui.Utils.AutoButtonColor)
local u18 = require(u2.Shared.Palette)
local u19 = require(u2.Shared.Constants)
local u20 = require(u2.Client.Gui.Utils.ClickableButton)
local u21 = require(u2.Shared.Framework.Network.Remote)
local u22 = require(u2.Client.Framework.Utilities.Gui.Confetti)
local u23 = require(u2.Client.Gui.GuiFrame)
local v24 = require(u2.Client.Gui.Utils.SequentialSound)
local u25 = require(u2.Client.Gui.Utils.PlayLocalSound)
local v26 = require(u2.Shared.Framework.Classes.Emitter)
local u27 = require(u2.Client.Effects.OutlinePulse)
local u28 = require(u2.Client.Gui.Tooltip)
require(u2.Shared.Types)
local u29 = require(u2.Shared.Utils.Stats.ItemUtil)
local u30 = require(u2.Shared.Data.Builders.TooltipBuilder)
local u31 = require(u2.Client.Framework.Utilities.Gui.Animations.SetFade)
local v32 = require(u2.Shared.Framework.Classes.Pool)
local u33 = require(u2.Shared.Utils.Stats.QuestUtil)
local v34 = require(u2.Client.Framework.Utilities.Gui.HookScrollingFrame)
require(u2.Client.Gui.Utils.UpdateWhileGuiOpen)
require(u2.Shared.Data.Seasons)
local u35 = require(u2.Client.Gui.Animations.ItemFall)
local u36 = require(u2.Client.Gui.Animations.ProcessingPurchase)
local v37 = require(u2.Shared.Framework.Utilities.ProductInfo)
local u38 = require(u2.Client.Gui.Utils.Notification)
local u39 = require(u2.Shared.Utils.RichText)
local u40 = require(u2.Client.Effects.HatchEgg)
require(u2.Shared.Utils.Stats.StatsUtil)
local u41 = require(u2.Client.Gui.Utils.CheckInventorySpace)
local u42 = require(u2.Shared.Data.Builders.PromptBuilder)
local u43 = require(u2.Client.Gui.Prompt)
local u44 = u1.LocalPlayer
local u45 = workspace.CurrentCamera
local u46 = u44.PlayerGui.ScreenGui
local u47 = u46.Season.Frame
local u48 = u47.Content.Rewards.Track.Template
u48.Parent = nil
u48.Free.Inner:Destroy()
u48.Premium.Inner:Destroy()
local u49 = u46.UIScale
local u50 = u47.Content.Rewards
local u51 = u46.Season.Effect
local u52 = u47.Content.Challenges
local u53 = u47.Content.Premium
local u54 = u47.Top.Items.Frame.Template
u54.Parent = nil
local u55 = u52.Hourly.List.Template
u55.Parent = nil
local u56 = "Rewards"
local u57 = { u46.HUD.Right.Season.Button.Notification, u47.Top.Buttons.Rewards.Button.Notification }
local u58 = {
    ["Maid"] = v9.new(),
    ["Elements"] = {}
}
local u59 = {}
local u60 = {}
local u61 = {}
local u62 = v32.new(function() --[[Anonymous function at line 112]]
    --[[
    Upvalues:
        [1] = u55
    --]]
    return u55:Clone()
end)
local u63 = {}
local u64 = v26.fromEmitter(u2.Assets.Particles.Stars)
u64.Parent = u51.Beam.Emitter
u64.Rate = 0
local u65 = TweenInfo.new(0.25, Enum.EasingStyle.Quart)
local u66 = TweenInfo.new(0.35, Enum.EasingStyle.Quint)
local u67 = TweenInfo.new(0.125, Enum.EasingStyle.Sine, Enum.EasingDirection.In)
local u68 = TweenInfo.new(u67.Time, u67.EasingStyle)
local u69 = TweenInfo.new(1.25, Enum.EasingStyle.Quint)
local u70 = TweenInfo.new(0.25, Enum.EasingStyle.Quint)
local u71 = nil
local u72 = 0
local u73 = 0
local u74 = nil
local u75 = v24(u2.Assets.Sounds.UI.Prize, {
    ["Ramping"] = 20,
    ["Pitch"] = NumberRange.new(1, 3),
    ["Buffer"] = 3
})
local u76 = 0
local function u78() --[[Anonymous function at line 145]]
    --[[
    Upvalues:
        [1] = u76
        [2] = u3
        [3] = u45
        [4] = u68
        [5] = u67
    --]]
    local v77 = u76 + 1
    u76 = v77
    u3:Create(u45, u68, {
        ["FieldOfView"] = 75
    }):Play()
    task.wait(u68.Time)
    if v77 == u76 then
        u3:Create(u45, u67, {
            ["FieldOfView"] = 70
        }):Play()
    end
end
local function u80() --[[Anonymous function at line 157]]
    --[[
    Upvalues:
        [1] = u51
        [2] = u3
        [3] = u69
    --]]
    local u79 = u51.Shockwave:Clone()
    u79.Parent = u51
    u3:Create(u79, u69, {
        ["Size"] = UDim2.fromOffset(3000, 3000),
        ["ImageTransparency"] = 1
    }):Play()
    task.delay(u69.Time, function() --[[Anonymous function at line 164]]
        --[[
        Upvalues:
            [1] = u79
        --]]
        u79:Destroy()
    end)
end
local function u83() --[[Anonymous function at line 169]]
    --[[
    Upvalues:
        [1] = u51
        [2] = u3
        [3] = u65
        [4] = u27
        [5] = u47
        [6] = u66
    --]]
    local u81 = u51.Fade:Clone()
    u81.Visible = true
    u81.Parent = u51
    u3:Create(u81, u65, {
        ["Size"] = UDim2.fromScale(1.3, 1.3)
    }):Play()
    u27(function(p82) --[[Anonymous function at line 175]]
        --[[
        Upvalues:
            [1] = u47
        --]]
        p82.UIStroke.Thickness = u47.UIStroke.Thickness
        p82.UICorner.CornerRadius = u47.UICorner.CornerRadius
    end).Parent = u47
    task.delay(u65.Time, function() --[[Anonymous function at line 180]]
        --[[
        Upvalues:
            [1] = u3
            [2] = u81
            [3] = u66
        --]]
        u3:Create(u81, u66, {
            ["ImageTransparency"] = 1
        }):Play()
        task.wait(u66.Time)
        u81:Destroy()
    end)
end
local _ = 0
local function v85() --[[Anonymous function at line 198]]
    --[[
    Upvalues:
        [1] = u47
        [2] = u23
        [3] = u46
    --]]
    local v84 = u47.Close.Visible
    if u23:IsOpen("Season") then
        if u47.Cover.Visible then
            v84 = false
        end
    else
        v84 = true
    end
    u46.Tooltip.Visible = v84
end
local u86 = 0
local u87 = TweenInfo.new(0.35, Enum.EasingStyle.Linear)
local function u96(p88) --[[Anonymous function at line 210]]
    --[[
    Upvalues:
        [1] = u74
        [2] = u47
        [3] = u3
        [4] = u87
        [5] = u29
        [6] = u11
        [7] = u73
        [8] = u54
        [9] = u28
        [10] = u30
        [11] = u86
        [12] = u72
    --]]
    if not u74 then
        return
    end
    if p88 then
        local u89 = u47.Top.Items.Frame:Clone()
        u47.Top.Items.Frame.Position = UDim2.fromScale(1.5, 1)
        u89.Parent = u47.Top.Items
        u3:Create(u47.Top.Items.Frame, u87, {
            ["Position"] = UDim2.fromScale(0.5, 1)
        }):Play()
        u3:Create(u89, u87, {
            ["Position"] = UDim2.fromScale(-1.5, 1)
        }):Play()
        task.delay(u87.Time, function() --[[Anonymous function at line 220]]
            --[[
            Upvalues:
                [1] = u89
                [2] = u29
            --]]
            for _, v90 in u89:GetChildren() do
                if v90:IsA("Frame") then
                    u29:UpdateIcon(v90)
                end
            end
            u89:Destroy()
        end)
    end
    for _, v91 in u47.Top.Items.Frame:GetChildren() do
        if v91:IsA("Frame") then
            u29:UpdateIcon(v91)
            u11.None(v91.Unknown)
            v91:Destroy()
        end
    end
    for v92 = (u73 - 1) * 5 + 1, u73 * 5 do
        local u93 = u74[v92]
        if not u93 then
            break
        end
        local u94 = u29:GetRarity(u93.Item) == "Secret"
        local v95 = u54:Clone()
        v95.LayoutOrder = v92
        v95.Unknown.Visible = u94
        v95.Label.ImageColor3 = u94 and Color3.new() or Color3.new(1, 1, 1)
        if u94 then
            u11.Cycle(v95.Unknown, "Rainbow", {
                ["Speed"] = 0.4
            })
        end
        v95.Parent = u47.Top.Items.Frame
        u29:UpdateIcon(v95, u93.Item)
        u28:OnEnter(v95.Button, function() --[[Anonymous function at line 256]]
            --[[
            Upvalues:
                [1] = u94
                [2] = u30
                [3] = u93
            --]]
            if not u94 then
                return u30.fromItem(u93.Item)
            end
        end)
    end
    u86 = os.clock()
    u47.Top.Items.Page.Text = ("%* / %*"):format(u73, u72)
    u47.Top.Items.Page.Visible = u72 > 1
end
local u97 = 0
local u98 = 0
local function u100() --[[Anonymous function at line 271]]
    --[[
    Upvalues:
        [1] = u98
        [2] = u97
        [3] = u25
        [4] = u22
        [5] = u75
        [6] = u78
        [7] = u83
    --]]
    local v99 = os.clock()
    if v99 - u98 > 20 then
        u97 = 0
    end
    u98 = v99
    u97 = u97 + 1
    if u97 % 5 == 0 then
        u25("Fireworks")
    end
    u22:Emit(u22.Bottom, 15)
    u75()
    task.defer(u78)
    task.defer(u83)
end
local u101 = u47.Cover
local function u103() --[[Anonymous function at line 346]]
    --[[
    Upvalues:
        [1] = u71
        [2] = u50
        [3] = u46
    --]]
    if u71 == "Standard" then
        local v102 = u50.UIPadding.PaddingLeft.Offset + u50.UIPadding.PaddingRight.Offset
        u50.CanvasSize = UDim2.new(0, u50.Track.UIListLayout.AbsoluteContentSize.X / u46.UIScale.Scale + v102, 0, 0)
    else
        u50.CanvasSize = UDim2.new()
    end
end
local function v109() --[[Anonymous function at line 356]]
    --[[
    Upvalues:
        [1] = u15
        [2] = u71
        [3] = u47
        [4] = u11
        [5] = u18
        [6] = u46
        [7] = u50
        [8] = u103
    --]]
    local v104 = u15:Get()
    if v104 then
        local v105 = v104.Season.IsInfinite and "Infinite" or "Standard"
        if u71 ~= v105 then
            local v106 = v105 == "Infinite"
            local u107 = u47.Top.Buttons.Rewards.Button
            if v106 then
                u47.Top.Points.Bar.BackgroundColor3 = Color3.new()
                u47.UIGradient.Color = ColorSequence.new(Color3.fromHex("#0f101d"), Color3.fromHex("#28383f"))
                u47.Streak.UIStroke.Color = Color3.new()
                u47.Background.ImageTransparency = 0.9
                u11.Shift(u107.Effect, "RainbowSideways", {
                    ["Speed"] = 0.5
                })
            else
                u47.Top.Points.Bar.BackgroundColor3 = u18.Color.Default
                u47.UIGradient.Color = ColorSequence.new(Color3.fromHex("#217ad9"), Color3.fromHex("#1badec"))
                u47.Streak.UIStroke.Color = Color3.fromHex("#00295e")
                u47.Background.ImageTransparency = 0.5
                u11.None(u107.Effect)
            end
            u47.Streak.Background.ImageTransparency = u47.Background.ImageTransparency
            u47.Streak.UIGradient.Color = u47.UIGradient.Color
            u107.Effect.Visible = v106
            u107.Container.Label.Text = v106 and "Infinite" or "Rewards"
            u107.Container.Icon.Image = v106 and "rbxassetid://138348432102058" or "rbxassetid://73818475082467"
            task.defer(function() --[[Anonymous function at line 387]]
                --[[
                Upvalues:
                    [1] = u107
                    [2] = u46
                --]]
                u107.Container.Label.Size = UDim2.new(0, u107.Container.Label.TextBounds.X / u46.UIScale.Scale, 1, 0)
            end)
            for _, v108 in u46.Season.Accent:GetChildren() do
                if v108:IsA("ImageLabel") then
                    v108.Image = v106 and "rbxassetid://103497721003396" or "rbxassetid://105783201761273"
                end
            end
            u47.UIStroke.Rainbow.Enabled = v106
            u47.UIStroke.Color = v106 and Color3.new(1, 1, 1) or u18.Color.Default
            u47.Top.Points.Icon.Image = v106 and "rbxassetid://129235881917550" or "rbxassetid://85704526714022"
            u47.Top.Items.Visible = v106
            u50.Track.Visible = not v106
            u50.Infinite.Visible = v106
            u71 = v105
            u103()
        end
    else
        return
    end
end
local u110 = u86
local u111 = u76
local u112 = u74
local u113 = u73
local u114 = u72
local u115 = u71
local function u121() --[[Anonymous function at line 291]]
    --[[
    Upvalues:
        [1] = u8
        [2] = u23
        [3] = u101
        [4] = u15
        [5] = u47
        [6] = u46
        [7] = u3
        [8] = u31
        [9] = u65
        [10] = u11
        [11] = u25
    --]]
    local v116 = u8:GetCurrentSeason()
    if v116 then
        if u23:IsOpen("Season") then
            if u101.Visible then
                return
            else
                local v117 = u15:Get()
                if v117 then
                    if not v117.Season.IsInfinite and v117.Season.Level >= #v116.Track then
                        u101.BackgroundTransparency = 1
                        u101.Icon.Visible = false
                        u101.Info["1"].Visible = false
                        u101.Info["2"].Visible = false
                        u101.Action.Visible = false
                        u101.Icon.UIScale.Scale = 1.25
                        u101.Visible = true
                        local v118 = u47.Close.Visible
                        if u23:IsOpen("Season") then
                            if u47.Cover.Visible then
                                v118 = false
                            end
                        else
                            v118 = true
                        end
                        u46.Tooltip.Visible = v118
                        u3:Create(u101, TweenInfo.new(0.5), {
                            ["BackgroundTransparency"] = 0.25
                        }):Play()
                        task.wait(0.5)
                        u101.Icon.Visible = true
                        u31(u101.Icon, 0, u65)
                        u3:Create(u101.Icon.UIScale, u65, {
                            ["Scale"] = 1
                        }):Play()
                        u11.Shift(u101.Icon.Inner, "RainbowSideways", {
                            ["Speed"] = 0.5
                        })
                        u11.Cycle(u101.Icon.Track.Highlight, "Rainbow", {
                            ["Speed"] = 0.5
                        })
                        u11.Cycle(u101.Icon.Infinite.Highlight, "Rainbow", {
                            ["Speed"] = 0.5
                        })
                        task.wait(0.75)
                        for v119 = 1, 2 do
                            local v120 = u101.Info[tostring(v119)]
                            v120.Visible = true
                            v120.Label.Position = UDim2.fromOffset(0, -10)
                            u31(v120, 0, u65)
                            u25("PetMove")
                            u3:Create(v120.Label, TweenInfo.new(0.5), {
                                ["Position"] = UDim2.new()
                            }):Play()
                            task.wait(0.65)
                        end
                        task.wait(0.5)
                        u101.Action.Visible = true
                    end
                else
                    return
                end
            end
        else
            return
        end
    else
        return
    end
end
for _, v122 in u47.Top.Buttons:GetChildren() do
    if v122:IsA("Frame") then
        local u123 = v122.Button:FindFirstChild("Label", true)
        local function v126() --[[Anonymous function at line 416]]
            --[[
            Upvalues:
                [1] = u123
                [2] = u49
            --]]
            local v124 = u123.TextBounds.X / u49.Scale
            local v125 = math.ceil(v124) + 1
            u123.Size = UDim2.new(0, v125, 1, 0)
        end
        u123:GetPropertyChangedSignal("TextBounds"):Connect(v126)
        u49:GetPropertyChangedSignal("Scale"):Connect(v126)
        local v127 = u123.TextBounds.X / u49.Scale
        local v128 = math.ceil(v127) + 1
        u123.Size = UDim2.new(0, v128, 1, 0)
    end
end
local function u151(p129) --[[Anonymous function at line 427]]
    --[[
    Upvalues:
        [1] = u8
        [2] = u15
        [3] = u61
        [4] = u29
        [5] = u19
        [6] = u10
        [7] = u53
        [8] = u46
        [9] = u47
        [10] = u18
        [11] = u17
        [12] = u56
    --]]
    local v130 = u8:GetCurrentSeason()
    if v130 then
        local v131 = u15:Get()
        if v131 then
            for _, v132 in u61 do
                v132.Cleanup()
                v132.Element:Destroy()
            end
            table.clear(u61)
            if v131.Season.Premium or p129 ~= "Premium" then
                u53.Content.Size = UDim2.new(1, -350, 1, -100)
            else
                local v133 = {}
                for v134 = 1, v131.Season.IsInfinite and #v130.Track or v131.Season.Level do
                    local v135 = v130.Track[v134].Premium
                    table.insert(v133, v135)
                end
                local v136 = u29:Combine(v133)
                table.sort(v136, function(p137, p138) --[[Anonymous function at line 451]]
                    --[[
                    Upvalues:
                        [1] = u29
                        [2] = u19
                    --]]
                    local v139 = u29:GetRarity(p137)
                    local v140 = u29:GetRarity(p138)
                    if v139 == v140 then
                        return u29:GetAmount(p137) < u29:GetAmount(p138)
                    else
                        return u19.RarityOrder[v139] < u19.RarityOrder[v140]
                    end
                end)
                for v141, v142 in v136 do
                    local v143, v144 = u10(v142, true)
                    v143.Size = UDim2.fromOffset(100, 100)
                    v143.Button.Inner.Label.Visible = v142.Type ~= "Pet"
                    v143.Button.Inner.Label.TextSize = 18
                    v143.LayoutOrder = #v136 - v141
                    v143.Parent = u53.Content.Missed.Items
                    local v145 = u61
                    table.insert(v145, {
                        ["Element"] = v143,
                        ["Cleanup"] = v144
                    })
                end
                task.defer(function() --[[Anonymous function at line 473]]
                    --[[
                    Upvalues:
                        [1] = u53
                        [2] = u46
                        [3] = u61
                    --]]
                    local v146 = (u53.Content.Missed.Items.UIListLayout.AbsoluteContentSize / u46.UIScale.Scale).Y + 50
                    local v147 = math.min(255, v146)
                    u53.Content.Size = UDim2.new(1, -350, 1, v147 == 255 and 0 or -100)
                    u53.Content.Missed.Size = UDim2.new(1, 0, 0, v147)
                    u53.Content.Missed.Visible = #u61 > 0
                end)
            end
            for _, v148 in u47.Top.Buttons:GetChildren() do
                if v148:IsA("Frame") then
                    local v149 = u18.Button.Inactive
                    if v148.Name == p129 then
                        v149 = p129 == "Premium" and u18.Button.Orange or u18.Button.Default
                    end
                    u17(v148.Button, v149)
                end
            end
            for _, v150 in u47.Content:GetChildren() do
                v150.Visible = p129 == v150.Name
            end
            u47.Top.UnlockAll.Button.Visible = p129 == "Rewards"
            u56 = p129
        end
    else
        return
    end
end
local function u167(p152, p153) --[[Anonymous function at line 504]]
    --[[
    Upvalues:
        [1] = u115
        [2] = u52
        [3] = u33
        [4] = u62
        [5] = u16
        [6] = u29
        [7] = u5
        [8] = u18
    --]]
    local v154 = u115 == "Infinite"
    local v155 = p153 == "Hourly" and u52.Hourly.List or u52.Daily.List
    for v156 = 1, 3 do
        local v157 = ("%*-challenge-%*"):format(string.lower(p153), v156)
        local v158 = u33:FindById(p152, v157)
        if v158 then
            local v159 = v158.Tasks[1]
            local v160 = v158.Rewards[1]
            local v161 = v158.Progress[1] / u33:GetRequirement(v159)
            local v162 = u62:Get()
            v162.Name = v157
            v162.LayoutOrder = v156
            v162.Completed.Visible = v158.Claimed or false
            v162.Content.Bar.Fill.Size = UDim2.new(v161, 0, 1, 6)
            local v163 = v162.Content.Bar.Label
            local v164 = v161 * 100
            v163.Text = ("%*%%"):format((math.ceil(v164)))
            v162.Content.Label.Text = u33:FormatTask(v159)
            u33:UpdateIcon(v162.Icon, v158)
            local v165 = v162.Content.Reward.Label
            v165.Text = u16(u29:GetAmount(v160))
            v165.Size = UDim2.fromOffset(u5:GetTextSize(v165.Text, v165.TextSize, v165.Font, Vector2.new((1 / 0))).X, 30)
            local v166 = v154 and Color3.new() or u18.Color.Default
            v162.BackgroundColor3 = v154 and Color3.fromRGB(43, 61, 79) or Color3.fromRGB(156, 224, 243)
            v162.Completed.BackgroundColor3 = v162.BackgroundColor3
            v162.Content.Bar.BackgroundColor3 = v166
            v162.UIStroke.Color = v166
            v162.Content.Bar.UIStroke.Color = v166
            v162.Content.Bar.Label.UIStroke.Color = v166
            v162.Content.Bar.Fill.UIStroke.Color = v166
            v162.Content.Label.UIStroke.Color = v166
            v162.Parent = v155
        end
    end
end
local u168 = nil
local u169 = nil
local u170 = false
local function u247() --[[Anonymous function at line 548]]
    --[[
    Upvalues:
        [1] = u8
        [2] = u15
        [3] = u58
        [4] = u60
        [5] = u19
        [6] = u17
        [7] = u18
        [8] = u59
        [9] = u3
        [10] = u70
        [11] = u48
        [12] = u16
        [13] = u50
        [14] = u10
        [15] = u29
        [16] = u11
        [17] = u20
        [18] = u170
        [19] = u28
        [20] = u6
        [21] = u44
        [22] = u41
        [23] = u35
        [24] = u21
        [25] = u100
        [26] = u46
        [27] = u53
        [28] = u169
        [29] = u23
        [30] = u56
        [31] = u38
        [32] = u39
        [33] = u151
        [34] = u57
        [35] = u168
        [36] = u25
        [37] = u80
        [38] = u83
        [39] = u22
        [40] = u78
        [41] = u167
        [42] = u62
        [43] = u47
    --]]
    local v171 = u8:GetCurrentSeason()
    if not v171 then
        return
    end
    local v172 = u15:Get()
    if not v172 then
        return
    end
    local v173 = v172.Season.Level
    local v174 = v172.Season.Points
    local v175 = 0
    local v176 = false
    for v177, v178 in u58.Elements do
        local v179 = u8:GetRequirement(v171, v177)
        local v180 = u8:GetRequirement(v171, v177 + 1)
        local v181 = (v174 - v179) / (v180 - v179)
        local v182 = math.clamp(v181, 0, 1)
        local v183 = 0
        local v184
        if v182 > 0.5 then
            v183 = (v182 - 0.5) * 2
            v184 = 1
        else
            v184 = v182 * 2
        end
        local v185 = u58.Elements[v177 + 1]
        if v185 then
            v185.BarLeft.Fill.Size = UDim2.new(v183, 0, 1, -6)
        end
        local v186 = v178.Action.Button
        local v187 = v177 <= v173
        local v188
        if v174 < v179 then
            v188 = not v187
            if v188 then
                v188 = not v176
            end
        else
            v188 = false
        end
        if v188 and v173 + 1 < v177 then
            v188 = false
        end
        local v189 = false
        if v188 then
            local v190 = u8:GetSkipProduct(v172)
            if v190 then
                v190 = u60[tostring(v190)]
            end
            v186.Label.Text = ("%*%*"):format(u19.RobuxUnicode, v190 or "__")
            u17(v186, u18.Button.Pink)
            v189 = true
            v176 = true
        elseif v177 <= v173 + 1 then
            v186.Label.Text = "Claim"
            u17(v186, u18.Button.Green)
            v189 = true
        else
            v186.Label.Text = ("TIER %*"):format(v177)
            u17(v186, u18.Button.Inactive)
        end
        if v189 then
            v186.Label.TextSize = 36
            v178.Action.Size = UDim2.fromOffset(175, 55)
            v178.Action.Position = UDim2.new(0.5, 0, 0, -10)
        else
            v186.Label.TextSize = 30
            v178.Action.Size = UDim2.fromOffset(155, 45)
            v178.Action.Position = UDim2.fromScale(0.5, 0)
        end
        if not v172.Season.IsInfinite and (v179 < v174 and not v187) then
            v175 = v175 + 1
        end
        v186.Title.Visible = v188
        v178.Luck.Visible = false
        v178.Action.Claimed.Visible = v187
        v178.Action.Button.Visible = not v187
        v178.Amount.Image = v179 <= v174 and "rbxassetid://85704526714022" or "rbxassetid://104878601436372"
        v178.BarRight.Fill.Size = UDim2.new(v184, 0, 1, -6)
    end
    if v172.Season.IsInfinite then
        local v191 = -1
        for u192 = #u59, 1, -1 do
            local u193 = u59[u192]
            local v194 = (u193.Index - v173) * 230
            if u193.Element.Position.X.Offset ~= v194 then
                u3:Create(u193.Element, u70, {
                    ["Position"] = UDim2.fromOffset(v194, 0)
                }):Play()
                if v194 < 0 then
                    u193.Element:SetAttribute("IgnoreBar", true)
                    u193.Element.BarLeft.Fill.Size = UDim2.new(1, 0, 1, -6)
                    u193.Element.BarRight.Fill.Size = UDim2.new(1, 0, 1, -6)
                    task.delay(u70.Time, function() --[[Anonymous function at line 646]]
                        --[[
                        Upvalues:
                            [1] = u193
                            [2] = u59
                            [3] = u192
                        --]]
                        u193.Cleanup()
                        table.remove(u59, u192)
                        task.defer(function() --[[Anonymous function at line 649]]
                            --[[
                            Upvalues:
                                [1] = u193
                            --]]
                            u193.Element:Destroy()
                        end)
                    end)
                end
            end
            local v195 = u193.Index
            v191 = math.max(v191, v195)
        end
        if v191 == -1 then
            v191 = v173 - 1
        end
        local v196 = #u59
        while v196 <= 5 do
            v191 = v191 + 1
            local v197 = v191 - v173
            local v198 = u8:GetInfiniteSegment(v172, v171, v191, true)
            local u199 = u8:GetInfinityRewards(v172, v191)
            local u200 = u48:Clone()
            u200.Name = "Infinite" .. v191
            u200.Position = UDim2.fromOffset(v197 * 230, 0)
            u200.BarLeft.BackgroundColor3 = Color3.new()
            u200.BarRight.BackgroundColor3 = Color3.new()
            u200.Amount.Label.Text = v198.Requirement == 0 and "FREE" or u16(v198.Requirement)
            u200.Parent = u50.Infinite
            local v201, u202 = u10(u199.Free, true)
            local v203, u204 = u10(u199.Premium, true)
            if u29:GetRarity(u199.Premium) ~= "Legendary" and u29:GetRarity(u199.Premium) ~= "Secret" then
                u11.Shift(v203.Button, "Gold", {
                    ["Speed"] = 0.5
                })
            end
            u11.Shift(v203.Button.Inner, "Gold", {
                ["Speed"] = 0.25
            })
            v201.Size = UDim2.fromScale(1, 1)
            v201.Parent = u200.Free
            v203.Size = UDim2.fromScale(1, 1)
            v203.Button.Inner.BackgroundColor3 = Color3.fromRGB(255, 179, 169)
            v203.Parent = u200.Premium
            u20(u200.Action.Button, function() --[[Anonymous function at line 690]]
                --[[
                Upvalues:
                    [1] = u170
                    [2] = u70
                    [3] = u200
                    [4] = u15
                    [5] = u8
                    [6] = u28
                    [7] = u6
                    [8] = u44
                    [9] = u199
                    [10] = u41
                    [11] = u35
                    [12] = u21
                    [13] = u100
                --]]
                if not u170 then
                    u170 = true
                    task.delay(u70.Time + 0.25, function() --[[Anonymous function at line 695]]
                        --[[
                        Upvalues:
                            [1] = u170
                        --]]
                        u170 = false
                    end)
                    if u200.Action.Button.Title.Visible then
                        local v205 = u15:Get()
                        if not v205 then
                            return
                        end
                        local v206 = u8:GetSkipProduct(v205)
                        if v206 then
                            u28:Hide()
                            u6:PromptProductPurchase(u44, v206)
                            return
                        end
                    elseif u200.Action.Button:GetAttribute("CanClaim") then
                        local v207 = u15:Get()
                        if not v207 then
                            return
                        end
                        local v208 = { u199.Free }
                        if v207.Season.Premium then
                            local v209 = u199.Premium
                            table.insert(v208, v209)
                        end
                        for _, v210 in v208 do
                            if v210.Type == "Pet" and not u41(v207) then
                                return
                            end
                        end
                        for _, v211 in v208 do
                            u35(v211)
                        end
                        if v207.Season.Premium then
                            u35(u199.Premium)
                        end
                        u35(u199.Free)
                        u21:FireServer("ClaimSeason")
                        u100()
                    end
                end
            end)
            local v212 = u59
            table.insert(v212, {
                ["Index"] = v191,
                ["Element"] = u200,
                ["Segment"] = v198,
                ["Cleanup"] = function() --[[Function name: Cleanup, line 745]]
                    --[[
                    Upvalues:
                        [1] = u204
                        [2] = u202
                    --]]
                    u204()
                    u202()
                end
            })
            v196 = v196 + 1
        end
        local v213 = true
        local v214 = false
        for _, u215 in u59 do
            local v216 = u215.Element.Action
            local v217 = u215.Index == v173
            local v218 = u215.Segment.LastTrueCost
            local v219 = nil
            for _, v220 in u59 do
                if v220.Index == u215.Index + 1 then
                    v219 = v220
                    break
                end
            end
            if v219 and not v219.Element:GetAttribute("IgnoreBar") then
                local v221 = v219.Segment.LastTrueCost
                local v222 = (v174 - v218) / (v221 - v218)
                local v223 = math.clamp(v222, 0, 1)
                local v224 = 0
                local v225
                if v223 > 0.5 then
                    v224 = (v223 - 0.5) * 2
                    v225 = 1
                else
                    v225 = v223 * 2
                end
                if u215.Segment.Requirement == 0 and (v213 and v219.Segment.Requirement == 0) then
                    v225 = 1
                    v224 = 1
                end
                v219.Element.BarLeft.Fill.Size = UDim2.new(v224, 0, 1, -6)
                if v217 then
                    if u215.Segment.Requirement > 0 then
                        local v226 = u215.Element.BarLeft.Fill
                        local v227 = UDim2.new
                        local v228 = v174 / u215.Segment.Requirement
                        v226.Size = v227(math.clamp(v228, 0, 1), 0, 1, -6)
                    elseif v213 then
                        u215.Element.BarLeft.Fill.Size = UDim2.new(1, 0, 1, -6)
                        u215.Element.BarRight.Fill.Size = UDim2.new(1, 0, 1, -6)
                    end
                end
                u215.Element.BarRight.Fill.Size = UDim2.new(v225, 0, 1, -6)
            end
            if v174 < u215.Segment.Requirement then
                v213 = false
            end
            if v217 then
                v216.Button.Label.TextSize = 36
                v216.Size = UDim2.fromOffset(175, 55)
                v216.Position = UDim2.new(0.5, 0, 0, -10)
            else
                v216.Button.Label.TextSize = 30
                v216.Size = UDim2.fromOffset(155, 45)
                v216.Position = UDim2.fromScale(0.5, 0)
            end
            if v213 or v214 then
                if v217 or v213 then
                    v216.Button.Title.Visible = false
                    v216.Button.Label.Text = "Claim"
                    v216.Button:SetAttribute("CanClaim", true)
                    u17(v216.Button, u18.Button.Green)
                else
                    v216.Button.Title.Visible = false
                    v216.Button.Label.Text = u215.Segment.Requirement == 0 and "FREE" or "Locked"
                    u17(v216.Button, u18.Button.Inactive)
                end
            else
                local v229 = u8:GetSkipProduct(v172)
                if v229 then
                    v229 = u60[tostring(v229)]
                end
                v216.Button.Label.Text = ("%*%*"):format(u19.RobuxUnicode, v229 or "__")
                v216.Button.Title.Visible = true
                u17(v216.Button, u18.Button.Pink)
                v214 = true
            end
            if not (v217 or v216.Button.Title.Visible) then
                v216.Button:SetAttribute("CanClaim", false)
                u17(v216.Button, u18.Button.Inactive)
            end
            local v230 = u215.Element.Luck
            local v231 = v172.Season.IsInfinite
            if v231 then
                v231 = u8:GetLuckMultiplier(u215.Index) < u8.MaxLuck
            end
            v230.Visible = v231
            local v232 = u215.Element.Luck.Label
            local v233 = u8.LuckScale * 100
            v232.Text = ("+%*%%"):format((math.ceil(v233)))
            u215.Element.Amount.Image = v213 and "rbxassetid://85704526714022" or "rbxassetid://104878601436372"
            task.defer(function() --[[Anonymous function at line 841]]
                --[[
                Upvalues:
                    [1] = u215
                    [2] = u46
                --]]
                u215.Element.Luck.Label.Size = UDim2.new(0, u215.Element.Luck.Label.TextBounds.X / u46.UIScale.Scale, 1, 0)
            end)
        end
    end
    local v234 = v172.Season.Premium
    if v234 then
        u11.Cycle(u53.Content.Owned, "Shiny", {
            ["Speed"] = 0.5
        })
    else
        u11.None(u53.Content.Owned)
    end
    u53.Content.Missed.Visible = not v234
    u53.Content.Owned.Visible = v234
    u53.Content.Buttons.Purchase.Visible = not v234
    if v175 ~= u169 then
        if u169 and (u169 < v175 and (not u23:IsOpen("Season") or u56 ~= "Rewards")) and u46.HUD.Right.Season.Visible then
            local v238 = {
                ["Sound"] = "NotificationSeason",
                ["Button"] = function(p235) --[[Function name: Button, line 866]]
                    --[[
                    Upvalues:
                        [1] = u17
                        [2] = u18
                        [3] = u20
                        [4] = u15
                        [5] = u151
                        [6] = u23
                        [7] = u3
                        [8] = u50
                        [9] = u70
                        [10] = u46
                    --]]
                    p235.Label.Text = "Open"
                    u17(p235, u18.Button.Orange)
                    u20(p235, function() --[[Anonymous function at line 869]]
                        --[[
                        Upvalues:
                            [1] = u15
                            [2] = u151
                            [3] = u23
                            [4] = u3
                            [5] = u50
                            [6] = u70
                            [7] = u46
                        --]]
                        local v236 = u15:Get()
                        local v237 = v236 and v236.Season.Level or 0
                        u151("Rewards")
                        u23:Open("Season")
                        u3:Create(u50, u70, {
                            ["CanvasPosition"] = Vector2.new(230 * v237 * u46.UIScale.Scale, 0)
                        }):Play()
                    end)
                end
            }
            u38(("You have %* to claim!"):format((u39.autoColor("Season Rewards", u18.Text.Yellow))), v238)
        end
        u169 = v175
    end
    for _, v239 in u57 do
        v239.Visible = v175 > 0
        v239.Label.Text = v175 > 9 and "!" or tostring(v175)
    end
    u46.HUD.Right.Season.Button.New.Visible = v175 == 0
    if u168 == nil then
        u168 = v234
    elseif v234 ~= u168 then
        task.spawn(function() --[[Anonymous function at line 893]]
            --[[
            Upvalues:
                [1] = u25
                [2] = u80
                [3] = u83
            --]]
            u25("Fireworks")
            u25("SparkleExplode")
            for v240 = 1, 8 do
                if v240 % 2 == 0 then
                    u80()
                end
                task.defer(u83)
                task.wait(0.2)
            end
        end)
        u22:Emit(u22.Bottom, 15)
        task.defer(u78)
        u168 = v234
    end
    u167(v172, "Hourly")
    u167(v172, "Daily")
    u62:Done()
    u47.Top.Points.Bar.Label.Text = u16(v174)
    local u241 = u47.Streak.Luck.Label
    local v242 = u8:GetLuckMultiplier(v173)
    local v243 = (v242 - 1) * 100
    u241.Text = ("%*%%"):format((math.floor(v243)))
    u47.Streak.Max.Visible = v242 == u8.MaxLuck
    u47.Streak.Visible = v172.Season.IsInfinite
    task.defer(function() --[[Anonymous function at line 924]]
        --[[
        Upvalues:
            [1] = u241
            [2] = u46
        --]]
        u241.Size = UDim2.new(0, u241.TextBounds.X / u46.UIScale.Scale, 1, 0)
    end)
    local v244 = u8:GetRequirement(v171, #v171.Track)
    local v245 = u47.Top.UnlockAll
    local v246 = v172.Season.Level ~= #v171.Track and not v172.Season.IsInfinite
    if v246 then
        v246 = v172.Season.Points < v244
    end
    v245.Visible = v246
end
local u248 = u168
for _, u249 in u47.Top.Buttons:GetChildren() do
    if u249:IsA("Frame") then
        u20(u249.Button, function() --[[Anonymous function at line 938]]
            --[[
            Upvalues:
                [1] = u151
                [2] = u249
            --]]
            u151(u249.Name)
        end)
    end
end
u151(u56)
u17(u47.Top.Buttons.Rewards.Button, u18.Button.Blue)
u17(u47.Top.Buttons.Challenges.Button, u18.Button.Blue)
u17(u47.Top.Buttons.Premium.Button, u18.Button.Orange)
v34(u53.Content.Missed.Items, u53.Content.Missed.Items.UIListLayout)
local u250 = false
local function v279(u251) --[[Anonymous function at line 954]]
    --[[
    Upvalues:
        [1] = u47
        [2] = u58
        [3] = u63
        [4] = u29
        [5] = u114
        [6] = u113
        [7] = u112
        [8] = u248
        [9] = u48
        [10] = u16
        [11] = u8
        [12] = u50
        [13] = u20
        [14] = u250
        [15] = u15
        [16] = u121
        [17] = u41
        [18] = u35
        [19] = u3
        [20] = u70
        [21] = u46
        [22] = u21
        [23] = u100
        [24] = u28
        [25] = u6
        [26] = u44
        [27] = u10
        [28] = u11
        [29] = u247
        [30] = u96
        [31] = u103
    --]]
    local v252 = u251 ~= nil
    u47.Top.Visible = v252
    u47.Content.Visible = v252
    u47.NoSeason.Visible = not v252
    if not v252 then
        u47.Streak.Visible = false
    end
    if v252 then
        u47.Size = UDim2.fromOffset(850, 700)
    else
        u47.Size = UDim2.fromOffset(500, 400)
    end
    if u251 then
        for _, v253 in u58.Elements do
            v253:Destroy()
        end
        u58.Maid:Cleanup()
        table.clear(u63)
        local v254 = table.clone(u251.Pool)
        local v255 = {}
        for v256 = #v254, 1, -1 do
            local v257 = u29:GetName(v254[v256].Item)
            if v255[v257] or v254[v256].Item.Type == "Currency" then
                table.remove(v254, v256)
            else
                v255[v257] = true
            end
        end
        table.sort(v254, function(p258, p259) --[[Anonymous function at line 990]]
            return p258.Chance < p259.Chance
        end)
        local v260 = #v254 / 5
        u114 = math.ceil(v260)
        u113 = 1
        u112 = v254
        u248 = nil
        for u261, u262 in u251.Track do
            local v263 = u48:Clone()
            v263.Name = ("Tier %*"):format(u261)
            v263.BarLeft.Visible = u261 ~= 1
            v263.BarRight.Visible = u261 ~= #u251.Track
            v263.Amount.Label.Text = u16(u8:GetRequirement(u251, u261))
            v263.LayoutOrder = u261
            v263.Parent = u50.Track
            local u264 = v263.Action.Button
            u20(u264, function() --[[Anonymous function at line 1009]]
                --[[
                Upvalues:
                    [1] = u250
                    [2] = u264
                    [3] = u261
                    [4] = u251
                    [5] = u15
                    [6] = u262
                    [7] = u121
                    [8] = u41
                    [9] = u35
                    [10] = u3
                    [11] = u50
                    [12] = u70
                    [13] = u46
                    [14] = u21
                    [15] = u100
                    [16] = u8
                    [17] = u28
                    [18] = u6
                    [19] = u44
                --]]
                if u250 then
                    return
                else
                    u250 = true
                    task.delay(0.25, function() --[[Anonymous function at line 1014]]
                        --[[
                        Upvalues:
                            [1] = u250
                        --]]
                        u250 = false
                    end)
                    if u264.Label.Text == "Claim" then
                        if u261 == #u251.Track then
                            local v265 = u15:Get()
                            local v266 = u262.Free.Type ~= "Pet" and (v265 and v265.Season.Premium)
                            if v266 then
                                v266 = u262.Premium.Type == "Pet"
                            end
                            if not v266 then
                                task.defer(u121)
                            end
                        end
                        local v267 = u15:Get()
                        if v267 then
                            local v268 = { u251.Track[u261].Free }
                            if v267.Season.Premium then
                                local v269 = u251.Track[u261].Premium
                                table.insert(v268, v269)
                            end
                            for _, v270 in v268 do
                                if v270.Type == "Pet" and not u41(v267) then
                                    return
                                end
                            end
                            for _, v271 in v268 do
                                u35(v271)
                            end
                            u3:Create(u50, u70, {
                                ["CanvasPosition"] = Vector2.new(230 * u261 * u46.UIScale.Scale, 0)
                            }):Play()
                            u21:FireServer("ClaimSeason")
                            task.spawn(u100)
                        end
                    else
                        if u264.Title.Visible then
                            local v272 = u15:Get()
                            if not v272 then
                                return
                            end
                            local v273 = u8:GetSkipProduct(v272)
                            if v273 then
                                u28:Hide()
                                u6:PromptProductPurchase(u44, v273)
                            end
                        end
                        return
                    end
                end
            end, function() --[[Anonymous function at line 1069]]
                --[[
                Upvalues:
                    [1] = u264
                --]]
                local v274 = u264.Label.Text
                return string.sub(v274, 1, 4) ~= "TIER"
            end)
            local v275, v276 = u10(u262.Free, true)
            local v277, v278 = u10(u262.Premium, true)
            if u29:GetRarity(u262.Premium) ~= "Legendary" and u29:GetRarity(u262.Premium) ~= "Secret" then
                u11.Shift(v277.Button, "Gold", {
                    ["Speed"] = 0.5
                })
            end
            u11.Shift(v277.Button.Inner, "Gold", {
                ["Speed"] = 0.25
            })
            u58.Maid:Add(v278)
            u58.Maid:Add(v276)
            v275.Size = UDim2.fromScale(1, 1)
            v275.Parent = v263.Free
            v277.Size = UDim2.fromScale(1, 1)
            v277.Button.Inner.BackgroundColor3 = Color3.fromRGB(255, 179, 169)
            v277.Parent = v263.Premium
            u58.Elements[u261] = v263
        end
        u247()
        u96()
        task.defer(u103)
    end
end
v279(u8:GetCurrentSeason())
u8.Changed:Connect(v279)
for _, u280 in u8.Skips do
    v37:ConnectProductChanged(u280, function(p281) --[[Anonymous function at line 1102]]
        --[[
        Upvalues:
            [1] = u60
            [2] = u280
            [3] = u247
        --]]
        if p281 and p281.PriceInRobux then
            local v282 = u280
            u60[tostring(v282)] = p281.PriceInRobux
        end
        u247()
    end)
end
u21.Event("SeasonItemsClaimed"):Connect(function() --[[Anonymous function at line 1111]]
    --[[
    Upvalues:
        [1] = u8
        [2] = u15
        [3] = u35
        [4] = u3
        [5] = u50
        [6] = u70
        [7] = u46
        [8] = u100
        [9] = u40
        [10] = u23
    --]]
    local v283 = u8:GetCurrentSeason()
    if v283 then
        local v284 = u15:Get()
        if v284 then
            local v285 = v284.Season.Level
            if not v284.Season.IsInfinite then
                if v284.Season.Premium then
                    u35(v283.Track[v285].Premium)
                end
                u35(v283.Track[v285].Free)
                u3:Create(u50, u70, {
                    ["CanvasPosition"] = Vector2.new(230 * v285 * u46.UIScale.Scale, 0)
                }):Play()
                task.spawn(u100)
                task.wait(0.5)
                repeat
                    task.wait(0.1)
                until not u40:IsHatching()
                u23:Open("Season")
            end
        end
    else
        return
    end
end)
u21.Event("SeasonUnlockAll"):Connect(function() --[[Anonymous function at line 1139]]
    --[[
    Upvalues:
        [1] = u78
        [2] = u80
        [3] = u83
        [4] = u22
        [5] = u25
        [6] = u247
    --]]
    task.spawn(u78)
    task.spawn(function() --[[Anonymous function at line 1141]]
        --[[
        Upvalues:
            [1] = u80
        --]]
        u80()
        task.wait(0.3)
        u80()
        task.wait(0.3)
        u80()
        task.wait(0.3)
    end)
    task.spawn(function() --[[Anonymous function at line 1147]]
        --[[
        Upvalues:
            [1] = u83
        --]]
        for _ = 1, 4 do
            u83()
            task.wait(0.2)
        end
    end)
    u22:Emit(u22.Bottom, 20)
    u25("UnlockAll")
    u247()
end)
v13(0.5, function() --[[Anonymous function at line 1158]]
    --[[
    Upvalues:
        [1] = u8
        [2] = u47
        [3] = u14
    --]]
    local v286 = u8:GetCurrentSeason()
    if v286 then
        local v287 = u8:GetTimeLeft(v286)
        u47.Top.Timer.Label.Text = u14.formatTime(v287, true)
    end
end)
u17(u101.Action.Button, u18.Button.Green)
u20(u101.Action.Button, function() --[[Anonymous function at line 1169]]
    --[[
    Upvalues:
        [1] = u101
        [2] = u64
        [3] = u46
        [4] = u47
        [5] = u25
        [6] = u2
        [7] = u3
        [8] = u51
        [9] = u45
        [10] = u27
        [11] = u21
        [12] = u65
        [13] = u80
        [14] = u28
    --]]
    if u101.White.BackgroundTransparency >= 1 then
        local u288 = true
        u64.Enabled = true
        u64.Rate = 20
        u46.HUD.Visible = false
        u101.White.Visible = true
        u47.Close.Visible = false
        u46.Season.Accent.Visible = false
        u25(u2.Assets.Sounds.Season.InfiniteStart)
        u3:Create(u101.White, TweenInfo.new(1), {
            ["BackgroundTransparency"] = 0
        }):Play()
        u3:Create(u51.Beam, TweenInfo.new(0.35), {
            ["BackgroundTransparency"] = 0.65
        }):Play()
        u3:Create(u101.White.UIStroke, TweenInfo.new(1), {
            ["Transparency"] = 0
        }):Play()
        u3:Create(u45, TweenInfo.new(3, Enum.EasingStyle.Sine), {
            ["FieldOfView"] = 85
        }):Play()
        u3:Create(u47, TweenInfo.new(3, Enum.EasingStyle.Sine), {
            ["Position"] = UDim2.new(0.5, 0, 0.5, -100)
        }):Play()
        u3:Create(u47, TweenInfo.new(3, Enum.EasingStyle.Sine), {
            ["Position"] = UDim2.new(0.5, 0, 0.5, -100)
        }):Play()
        task.spawn(function() --[[Anonymous function at line 1188]]
            --[[
            Upvalues:
                [1] = u288
                [2] = u27
                [3] = u47
            --]]
            while u288 do
                u27(function(p289) --[[Anonymous function at line 1190]]
                    --[[
                    Upvalues:
                        [1] = u47
                    --]]
                    p289.UIStroke.Thickness = u47.UIStroke.Thickness
                    p289.UICorner.CornerRadius = u47.UICorner.CornerRadius
                end).Parent = u47
                task.wait(0.25)
            end
        end)
        task.wait(1)
        u101.BackgroundTransparency = 1
        u101.Action.Visible = false
        u101.Icon.Visible = false
        u101.Info.Visible = false
        u21:FireServer("BeginSeasonInfinite")
        task.wait(1.75)
        u288 = false
        u25("ChestWhoosh")
        u3:Create(u47, TweenInfo.new(0.5, Enum.EasingStyle.Back, Enum.EasingDirection.In), {
            ["Position"] = UDim2.fromScale(0.5, 0.5)
        }):Play()
        u3:Create(u45, TweenInfo.new(0.5, Enum.EasingStyle.Back, Enum.EasingDirection.In), {
            ["FieldOfView"] = 70
        }):Play()
        task.delay(0.25, function() --[[Anonymous function at line 1210]]
            --[[
            Upvalues:
                [1] = u64
                [2] = u3
                [3] = u101
                [4] = u65
                [5] = u51
            --]]
            u64.Rate = 0
            u3:Create(u101.White, u65, {
                ["BackgroundTransparency"] = 1
            }):Play()
            u3:Create(u51.Beam, u65, {
                ["BackgroundTransparency"] = 1
            }):Play()
            u3:Create(u101.White.UIStroke, u65, {
                ["Transparency"] = 1
            }):Play()
            task.wait(u65.Time)
            u101.Action.Visible = true
            u101.Icon.Visible = true
            u101.Info.Visible = true
            u101.Visible = false
        end)
        task.wait(0.5)
        u46.HUD.Visible = true
        u47.Close.Visible = true
        u80()
        u25("SparkleExplode")
        u46.Tooltip.Frame.Visible = false
        u46.Tooltip.Visible = true
        u46.Season.Accent.Visible = true
        u28:Hide()
    end
end)
u17(u47.Close.Button, u18.Button.Red)
u20(u47.Close.Button, function() --[[Anonymous function at line 1233]]
    --[[
    Upvalues:
        [1] = u23
    --]]
    u23:Close()
end)
local v290 = u46.SeasonGiftingPrompt
local u291 = v290.Frame.Inner.Frame
local u292 = u291.List
local u293 = u292.Template
u293.Parent = nil
local u294 = {}
local u295 = nil
local u296 = nil
v37.fromProduct(u8.GiftPremiumId, function(p297) --[[Anonymous function at line 1254]]
    --[[
    Upvalues:
        [1] = u296
    --]]
    u296 = p297
end)
local function u306() --[[Anonymous function at line 1258]]
    --[[
    Upvalues:
        [1] = u1
        [2] = u295
        [3] = u291
        [4] = u296
        [5] = u19
        [6] = u294
        [7] = u44
        [8] = u293
        [9] = u20
        [10] = u306
        [11] = u292
    --]]
    local v298 = u1:GetPlayers()
    if u295 and not table.find(v298, u295) then
        u295 = nil
    end
    if u295 then
        u291.Description.Text = ("Selected <font color=\"rgb(27,173,236)\">%*</font> to gift <font color=\"rgb(251,121,255)\">Season Premium</font>!"):format(u295.Name)
    else
        u291.Description.Text = "Choose a player to gift <font color=\"rgb(251,121,255)\">Season Premium</font> to!"
    end
    u291.Buttons.Buy.Visible = u295 ~= nil
    u291.Buttons.SelectPlayer.Visible = u295 == nil
    local v299 = u296
    u291.Buttons.Buy.Button.Label.Text = ("%*%*"):format(u19.RobuxUnicode, v299 and v299.PriceInRobux or "__")
    for v300, v301 in u294 do
        if not table.find(v298, v300) then
            v301:Destroy()
            u294[v300] = nil
        end
    end
    for v302, u303 in v298 do
        if u303 ~= u44 then
            local v304 = u294[u303]
            if not v304 then
                v304 = u293:Clone()
                v304.Name = ("%*/%*"):format(u303.UserId, u303.Name)
                v304.Button.Icon.Image = ("rbxthumb://type=AvatarHeadShot&id=%*&w=100&h=100"):format(u303.UserId)
                v304.Button.DisplayName.Text = u303.DisplayName
                v304.Button.Username.Text = ("@%*"):format(u303.Name)
                u20(v304.Button, function() --[[Anonymous function at line 1300]]
                    --[[
                    Upvalues:
                        [1] = u295
                        [2] = u303
                        [3] = u306
                    --]]
                    u295 = u303
                    u306()
                end)
                v304.Parent = u292
                u294[u303] = v304
            end
            local v305 = u303 == u295
            v304.Button.UIStroke.Transparency = v305 and 0 or 0.4
            v304.Button.UIStroke.Thickness = v305 and 2.5 or 2
            v304.Button.BackgroundTransparency = v305 and 0 or 0.3
            v304.Button.DisplayName.TextTransparency = v305 and 0 or 0.1
            v304.Button.DisplayName.UIStroke.Transparency = v305 and 0 or 0.2
            v304.Button.Username.TextTransparency = v305 and 0 or 0.1
            v304.Button.Username.UIStroke.Transparency = v305 and 0 or 0.2
            v304.Button.Icon.ImageTransparency = v305 and 0 or 0.1
            v304.Button.Icon.UIStroke.Transparency = v305 and 0 or 0.2
            v304.LayoutOrder = v302
        end
    end
end
u1.PlayerAdded:Connect(u306)
u1.PlayerRemoving:Connect(u306)
u306()
v34(u292, u292.UIGridLayout)
u17(v290.Frame.Top.Close.Button, u18.Button.Red)
u20(v290.Frame.Top.Close.Button, function() --[[Anonymous function at line 1333]]
    --[[
    Upvalues:
        [1] = u23
    --]]
    u23:Open("Season")
end)
u17(u291.Buttons.Cancel.Button, u18.Button.Red)
u20(u291.Buttons.Cancel.Button, function() --[[Anonymous function at line 1338]]
    --[[
    Upvalues:
        [1] = u23
    --]]
    u23:Open("Season")
end)
local u307 = false
u17(u291.Buttons.Buy.Button, u18.Button.Green)
u20(u291.Buttons.Buy.Button, function() --[[Anonymous function at line 1345]]
    --[[
    Upvalues:
        [1] = u307
        [2] = u295
        [3] = u36
        [4] = u21
        [5] = u42
        [6] = u43
        [7] = u6
        [8] = u44
        [9] = u8
        [10] = u23
    --]]
    if not u307 and u295 then
        u307 = true
        u36:Show()
        local v308, v309 = u21:InvokeServer("TrySeasonGiftPlayer", u295)
        if v308 then
            u6:PromptProductPurchase(u44, u8.GiftPremiumId)
        else
            u36:Hide()
            local v310 = u42.new("Uh Oh!")
            v310:Text(v309 or "An error occurred, please try again later!")
            u43(v310:Build())
        end
        task.delay(1, function() --[[Anonymous function at line 1366]]
            --[[
            Upvalues:
                [1] = u23
                [2] = u307
            --]]
            u23:Open("Competitive")
            u307 = false
        end)
    end
end)
u23:BindOnClosed("SeasonGiftingPrompt", function() --[[Anonymous function at line 1372]]
    --[[
    Upvalues:
        [1] = u295
        [2] = u306
    --]]
    u295 = nil
    u306()
end)
u23:BindOnOpened("SeasonGiftingPrompt", u306)
u21.Event("SeasonGiftSuccess"):Connect(function(p311, p312) --[[Anonymous function at line 1388]]
    --[[
    Upvalues:
        [1] = u18
        [2] = u7
        [3] = u44
        [4] = u42
        [5] = u17
        [6] = u20
        [7] = u43
    --]]
    local v313 = ("<font color=\"#%*\">%*</font>"):format(u18.Text.Yellow:ToHex(), "Season Premium")
    local v314 = u7:FindFirstChild("TextChannels")
    local v315 = v314 ~= nil and v314:FindFirstChild("RBXGeneral")
    if v315 then
        local v316 = ("%* (@%*)"):format(p311.DisplayName, p311.Name)
        local v317 = ("<font color=\"#%*\">%*</font>"):format(u18.Text.Pink:ToHex(), v316)
        local v318 = ("%* (@%*)"):format(p312.DisplayName, p312.Name)
        v315:DisplaySystemMessage((("%* gifted %* to %*!"):format(v317, v313, (("<font color=\"#%*\">%*</font>"):format(u18.Text.Pink:ToHex(), v318)))))
    end
    if p311 == u44 then
        local v319 = u42.new("Gift!")
        local v320 = ("%* (@%*)"):format(p312.DisplayName, p312.Name)
        v319:Text((("Successfully gifted %* to %*!"):format(v313, (("<font color=\"#%*\">%*</font>"):format(u18.Text.Pink:ToHex(), v320)))))
        v319:Button(function(p321, p322) --[[Anonymous function at line 1407]]
            --[[
            Upvalues:
                [1] = u17
                [2] = u18
                [3] = u20
            --]]
            p321.Label.Text = "Okay"
            u17(p321, u18.Button.Purple)
            u20(p321, p322)
        end)
        u43(v319:Build())
    elseif p312 == u44 then
        local v323 = u42.new("Gift!")
        local v324 = ("%* (@%*)"):format(p311.DisplayName, p311.Name)
        v323:Text((("%* gifted you %*!"):format(("<font color=\"#%*\">%*</font>"):format(u18.Text.Pink:ToHex(), v324), v313)))
        v323:Button(function(p325, p326) --[[Anonymous function at line 1417]]
            --[[
            Upvalues:
                [1] = u17
                [2] = u18
                [3] = u20
            --]]
            p325.Label.Text = "Claim"
            u17(p325, u18.Button.Purple)
            u20(p325, p326)
        end)
        u43(v323:Build())
    end
end)
local u327 = u52.Hourly.Skip
local u328 = u52.Daily.Skip
local u329 = nil
local u330 = nil
v37:ConnectProductChanged(u8.ProductId, function(p331) --[[Anonymous function at line 1451]]
    --[[
    Upvalues:
        [1] = u53
        [2] = u19
    --]]
    u53.Content.Buttons.Purchase.Button.Label.Text = p331 and ("%*%*"):format(u19.RobuxUnicode, p331.PriceInRobux) or "Get Premium"
end)
u17(u53.Content.Buttons.Purchase.Button, u18.Button.Orange)
u20(u53.Content.Buttons.Purchase.Button, function() --[[Anonymous function at line 1456]]
    --[[
    Upvalues:
        [1] = u36
        [2] = u6
        [3] = u44
        [4] = u8
    --]]
    u36:Show()
    u6:PromptProductPurchase(u44, u8.ProductId)
end)
u17(u53.Content.Buttons.Gift.Button, u18.Button.Pink)
u20(u53.Content.Buttons.Gift.Button, function() --[[Anonymous function at line 1463]]
    --[[
    Upvalues:
        [1] = u23
    --]]
    u23:Open("SeasonGiftingPrompt")
end)
u17(u328.Button, u18.Button.Green)
u20(u328.Button, function() --[[Anonymous function at line 1469]]
    --[[
    Upvalues:
        [1] = u36
        [2] = u6
        [3] = u44
        [4] = u8
    --]]
    u36:Show()
    u6:PromptProductPurchase(u44, u8.DailySkip)
end)
u17(u327.Button, u18.Button.Green)
u20(u327.Button, function() --[[Anonymous function at line 1475]]
    --[[
    Upvalues:
        [1] = u36
        [2] = u6
        [3] = u44
        [4] = u8
    --]]
    u36:Show()
    u6:PromptProductPurchase(u44, u8.HourlySkip)
end)
u17(u47.Top.UnlockAll.Button, u18.Button.Pink)
u20(u47.Top.UnlockAll.Button, function() --[[Anonymous function at line 1481]]
    --[[
    Upvalues:
        [1] = u6
        [2] = u44
        [3] = u8
    --]]
    u6:PromptProductPurchase(u44, u8.UnlockAll)
end)
v37:ConnectProductChanged(u8.HourlySkip, function(p332) --[[Anonymous function at line 1485]]
    --[[
    Upvalues:
        [1] = u329
        [2] = u327
        [3] = u19
        [4] = u328
        [5] = u330
    --]]
    if p332 and p332.PriceInRobux then
        u329 = p332.PriceInRobux
    end
    u327.Button.Label.Text = ("%*%*"):format(u19.RobuxUnicode, u329 or "__")
    u328.Button.Label.Text = ("%*%*"):format(u19.RobuxUnicode, u330 or "__")
end)
v37:ConnectProductChanged(u8.DailySkip, function(p333) --[[Anonymous function at line 1492]]
    --[[
    Upvalues:
        [1] = u330
        [2] = u327
        [3] = u19
        [4] = u329
        [5] = u328
    --]]
    if p333 and p333.PriceInRobux then
        u330 = p333.PriceInRobux
    end
    u327.Button.Label.Text = ("%*%*"):format(u19.RobuxUnicode, u329 or "__")
    u328.Button.Label.Text = ("%*%*"):format(u19.RobuxUnicode, u330 or "__")
end)
u15:ConnectDataChanged("Quests", function(p334) --[[Anonymous function at line 1499]]
    --[[
    Upvalues:
        [1] = u327
        [2] = u328
    --]]
    local v335 = 0
    local v336 = 0
    for _, v337 in p334.Quests do
        if v337.Claimed then
            if string.find(v337.Id, "daily%-challenge") then
                v335 = v335 + 1
            elseif string.find(v337.Id, "hourly%-challenge") then
                v336 = v336 + 1
            end
        end
    end
    u327.Visible = v336 < 3
    u328.Visible = v335 < 3
end)
u101:GetPropertyChangedSignal("Visible"):Connect(function() --[[Anonymous function at line 1517]]
    --[[
    Upvalues:
        [1] = u46
        [2] = u101
    --]]
    u46.Tooltip.Frame.Visible = not u101.Visible
end)
u103()
u50.Track.UIListLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(u247)
u50:GetPropertyChangedSignal("CanvasPosition"):Connect(function() --[[Anonymous function at line 1523]]
    --[[
    Upvalues:
        [1] = u28
    --]]
    u28:Hide()
end)
v12:Add(u47.Top.Buttons.Premium.Effect)
v12:Add(u53.Content.Buttons.Purchase.Effect)
u15:ConnectDataChanged("Season", v109)
u15:ConnectDataChanged({ "Season", "Quests" }, u247)
u23.Changed:Connect(function(p338) --[[Anonymous function at line 1533]]
    --[[
    Upvalues:
        [1] = u47
        [2] = u23
        [3] = u46
        [4] = u115
        [5] = u15
        [6] = u121
        [7] = u50
        [8] = u111
    --]]
    if p338 == "Season" then
        local v339 = u47.Close.Visible
        if u23:IsOpen("Season") then
            if u47.Cover.Visible then
                v339 = false
            end
        else
            v339 = true
        end
        u46.Tooltip.Visible = v339
        if u115 == "Standard" then
            local v340 = u15:Get()
            if not v340 then
                return
            end
            u121()
            u50.CanvasPosition = Vector2.new(230 * v340.Season.Level * u46.UIScale.Scale, 0)
        end
    end
    u111 = u111 + 1
end)
u23:BindOnClosed("Season", v85)
u47.Close:GetPropertyChangedSignal("Visible"):Connect(v85)
u28:OnEnter(u47.Streak.Info.Button, function() --[[Anonymous function at line 1554]]
    --[[
    Upvalues:
        [1] = u15
        [2] = u47
        [3] = u8
        [4] = u30
        [5] = u39
        [6] = u18
    --]]
    local v341 = u15:Get()
    if v341 then
        local _ = u47.Streak.Luck.Label
        local v342 = u8:GetLuckMultiplier(v341.Season.Level)
        local v343 = u30.new():Width(290)
        local v344 = u39.autoColor
        local v345 = (v342 - 1) * 100
        return v343:Title("rbxassetid://77981464621340", "Seasonal Luck", v344(("+%*%% Luck"):format((math.floor(v345))), u18.Text.Green)):Add({
            ["Type"] = "Text",
            ["Text"] = ("%* increases the chance of finding %* in the Infinity Pass!"):format(u39.autoColor("Seasonal Luck", u18.Text.Green), (u39.autoColor("Legendary and Secret items", u18.Text.Pink))),
            ["Size"] = 28
        }):Build()
    end
end)
v13(0.25, function() --[[Anonymous function at line 1574]]
    --[[
    Upvalues:
        [1] = u15
        [2] = u14
        [3] = u52
        [4] = u115
        [5] = u114
        [6] = u110
        [7] = u113
        [8] = u96
    --]]
    local v346 = u15:Get()
    if v346 then
        local v347 = u14.now()
        local v348 = v346.Season.Challenges.Daily * u14.secondsInDay
        local v349 = u52.Daily.Title.Timer
        local v350 = u14.formatTime
        local v351 = u14.secondsInDay - (v347 - v348)
        v349.Text = v350((math.max(0, v351)))
        local v352 = v346.Season.Challenges.Hourly * u14.secondsInHour
        local v353 = u52.Hourly.Title.Timer
        local v354 = u14.formatTime
        local v355 = u14.secondsInHour - (v347 - v352)
        v353.Text = v354((math.max(0, v355)))
        if u115 ~= "Standard" then
            if u114 > 1 and os.clock() - u110 > 4 then
                u113 = u113 + 1
                if u114 < u113 then
                    u113 = 1
                end
                u96(true)
            end
        end
    else
        return
    end
end)
local u356 = 0
v4.Heartbeat:Connect(function(p357) --[[Anonymous function at line 1600]]
    --[[
    Upvalues:
        [1] = u115
        [2] = u47
        [3] = u356
    --]]
    if u115 == "Infinite" then
        u47.UIStroke.Rainbow.Rotation = u356 % 360
        u356 = u356 + p357 * 35
    end
end)
u151(u56)
return {}