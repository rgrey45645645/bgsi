--devbgascension

-- Bytecode (Base64):
-- 

local v1 = game:GetService("Players")
local v2 = game:GetService("ReplicatedStorage")
local u3 = game:GetService("HttpService")
local u4 = game:GetService("MarketplaceService")
local u5 = game:GetService("TweenService")
require(v2.Shared.Types)
local u6 = require(v2.Shared.Data.Flavors)
local u7 = require(v2.Shared.Data.Gum)
local v8 = require(v2.Shared.Framework.Classes.Pool)
local u9 = require(v2.Client.Framework.Services.LocalData)
local u10 = require(v2.Client.Gui.Utils.AutoButtonColor)
local u11 = require(v2.Shared.Palette)
local u12 = require(v2.Shared.Data.Currency)
local u13 = require(v2.Shared.Framework.Utilities.String.FormatSuffix)
local v14 = require(v2.Client.Framework.Utilities.Gui.HookScrollingFrame)
local u15 = require(v2.Client.Gui.Utils.ClickableButton)
local u16 = require(v2.Shared.Framework.Network.Remote)
local u17 = require(v2.Client.Gui.GuiFrame)
local u18 = require(v2.Shared.Utils.Stats.ItemUtil)
require(v2.Shared.Framework.Classes.Maid)
local u19 = require(v2.Client.Gui.Utils.GuiArrow)
require(v2.Shared.Utils.Stats.QuestUtil)
local v20 = require(v2.Client.Gui.Utils.UpdateWhileGuiOpen)
local v21 = require(v2.Shared.Utils.CurrencyUtil)
local u22 = require(v2.Shared.Data.Worlds)
local u23 = require(v2.Shared.Utils.RichText)
local u24 = require(v2.Client.Gui.Prompt)
local u25 = require(v2.Shared.Data.Builders.PromptBuilder)
local v26 = require(v2.Shared.Framework.Utilities.ProductInfo)
local u27 = require(v2.Shared.Constants)
local u28 = require(v2.Client.Gui.Utils.Shiny)
local u29 = require(v2.Client.Gui.Animations.ProcessingPurchase)
local u30 = require(v2.Shared.Data.Gamepasses)
local u31 = require(v2.Client.Gui.Utils.PlayLocalSound)
local u32 = v1.LocalPlayer
local u33 = u32.PlayerGui.ScreenGui
local u34 = u33.GumShop.Frame
local u35 = u34.Items.Inner.List
local u36 = u34.Selected
local u37 = u35.Template
u37.Parent = nil
local u38 = {
    ["Kind"] = "Flavors"
}
local u39 = nil
local u40 = nil
local u41 = nil
local u42 = false
local u43 = {}
local function u48(p44) --[[Anonymous function at line 99]]
    --[[
    Upvalues:
        [1] = u22
    --]]
    if not p44 then
        return 0
    end
    for v45, v46 in u22 do
        if v45 == p44 then
            return v46.Order
        end
        for _, v47 in v46.Islands do
            if v47.Name == p44 then
                return v46.Order
            end
        end
    end
    return 0
end
local u55 = v8.new(function() --[[Anonymous function at line 116]]
    --[[
    Upvalues:
        [1] = u37
        [2] = u15
        [3] = u7
        [4] = u6
        [5] = u41
        [6] = u9
        [7] = u22
    --]]
    local u49 = u37:Clone()
    u15(u49.Button, function() --[[Anonymous function at line 119]]
        --[[
        Upvalues:
            [1] = u7
            [2] = u49
            [3] = u6
            [4] = u41
            [5] = u9
            [6] = u22
        --]]
        local v50 = u7[u49.Name] or u6[u49.Name]
        if v50 then
            local v51 = u41
            local v52 = {
                ["Name"] = u49.Name,
                ["Image"] = v50.Image,
                ["Cost"] = v50.Cost
            }
            local v53 = u9:Get()
            local v54
            if v53 then
                if v50.Area then
                    if u22[v50.Area] then
                        v54 = v53.WorldsUnlocked[v50.Area] ~= nil
                    else
                        v54 = v53.AreasUnlocked[v50.Area] ~= nil
                    end
                else
                    v54 = true
                end
            else
                v54 = false
            end
            v52.Unlocked = v54
            v51(v52)
        end
    end)
    return u49
end)
local function u80(_, p56) --[[Anonymous function at line 136]]
    --[[
    Upvalues:
        [1] = u9
        [2] = u7
        [3] = u6
        [4] = u22
        [5] = u48
        [6] = u18
    --]]
    local v57 = u9:Get()
    local u58 = p56 == "Gum" and u7 or u6
    local v59 = {}
    for v60, v61 in u58 do
        local v62 = v61.Cost
        if typeof(v62) ~= "number" then
            local v63 = {
                ["Name"] = v60,
                ["Cost"] = v61.Cost,
                ["Image"] = v61.Image
            }
            local v64
            if v57 then
                if v61.Area then
                    if u22[v61.Area] then
                        v64 = v57.WorldsUnlocked[v61.Area] ~= nil
                    else
                        v64 = v57.AreasUnlocked[v61.Area] ~= nil
                    end
                else
                    v64 = true
                end
            else
                v64 = false
            end
            v63.Unlocked = v64
            table.insert(v59, v63)
        end
    end
    table.sort(v59, function(p65, p66) --[[Anonymous function at line 153]]
        --[[
        Upvalues:
            [1] = u48
            [2] = u58
            [3] = u18
        --]]
        local v67 = u48(u58[p65.Name].Area)
        local v68 = u48(u58[p66.Name].Area)
        if v67 ~= v68 then
            return v67 < v68
        end
        local v69 = p65.Cost
        local v70 = typeof(v69) == "number"
        local v71 = p66.Cost
        if v70 ~= (typeof(v71) == "number") then
            return v70
        end
        local v72 = p65.Cost
        if typeof(v72) ~= "number" then
            local v73 = p66.Cost
            if typeof(v73) ~= "number" then
                return u18:GetAmount(p65.Cost) < u18:GetAmount(p66.Cost)
            end
        end
        return p65.Cost < p66.Cost
    end)
    if p56 ~= "Gum" then
        local v74 = u6["VIP Flavor"]
        local v75 = {
            ["Name"] = "VIP Flavor",
            ["Cost"] = v74.Cost,
            ["Image"] = v74.Image,
            ["Unlocked"] = true
        }
        table.insert(v59, 3, v75)
        return v59
    end
    local v76 = u7["Infinity Gum"]
    local v77 = {
        ["Name"] = "Infinity Gum",
        ["Cost"] = v76.Cost,
        ["Image"] = v76.Image,
        ["Unlocked"] = true
    }
    table.insert(v59, 7, v77)
    local v78 = u7["VIP Gum"]
    local v79 = {
        ["Name"] = "VIP Gum",
        ["Cost"] = v78.Cost,
        ["Image"] = v78.Image,
        ["Unlocked"] = true
    }
    table.insert(v59, 3, v79)
    return v59
end
local function u84() --[[Anonymous function at line 202]]
    --[[
    Upvalues:
        [1] = u42
        [2] = u9
        [3] = u19
        [4] = u38
        [5] = u34
        [6] = u36
        [7] = u35
    --]]
    if u42 then
        local v81 = u9:Get()
        if v81 then
            u19:ClearAll("GumShop")
            if v81.Flavors.Blueberry then
                if not v81.Gum["Stretchy Gum"] then
                    if u38.Kind ~= "Gum" then
                        u19:Add(u34.Tray.Gum, nil, "GumShop")
                        return
                    end
                    if u36.Label.Text == "Stretchy Gum" then
                        u19:Add(u36.Action, nil, "GumShop")
                        return
                    end
                    local v82 = u35:FindFirstChild("Stretchy Gum")
                    if v82 then
                        u19:Add(v82, 155, "GumShop")
                    end
                end
            else
                if u38.Kind ~= "Flavors" then
                    u19:Add(u34.Tray.Flavors, nil, "GumShop")
                    return
                end
                if u36.Label.Text == "Blueberry" then
                    u19:Add(u36.Action, nil, "GumShop")
                    return
                end
                local v83 = u35:FindFirstChild("Blueberry")
                if v83 then
                    u19:Add(v83, 155, "GumShop")
                    return
                end
            end
        end
    else
        return
    end
end
u41 = function(p85) --[[Function name: setSelection, line 238]]
    --[[
    Upvalues:
        [1] = u9
        [2] = u36
        [3] = u11
        [4] = u12
        [5] = u13
        [6] = u18
        [7] = u30
        [8] = u38
        [9] = u7
        [10] = u6
        [11] = u34
        [12] = u23
        [13] = u28
        [14] = u10
        [15] = u27
        [16] = u43
        [17] = u35
        [18] = u5
        [19] = u33
        [20] = u40
        [21] = u84
    --]]
    local v86 = u9:Get()
    if not v86 then
        return
    end
    local v87 = p85.Cost
    if typeof(v87) == "number" then
        u36.Cost.Label.TextColor3 = u11.Text.Green
    elseif p85.Cost.Type == "Currency" then
        local v88 = u12[p85.Cost.Currency]
        u36.Cost.Label.TextColor3 = v88.Color
    else
        u36.Cost.Label.TextColor3 = Color3.new(1, 1, 1)
    end
    local v89 = p85.Cost
    if typeof(v89) == "number" then
        u36.Cost.Visible = false
    else
        u36.Cost.Visible = true
        u36.Cost.Label.Text = u13(u18:GetAmount(p85.Cost), 1000000)
        u18:UpdateIcon(u36.Cost.Icon, p85.Cost)
    end
    u36.Icon.Image = p85.Image
    u36.Label.Text = p85.Name
    local v90 = (v86.Gum[p85.Name] or v86.Flavors[p85.Name]) ~= nil
    local v91 = p85.Cost
    if typeof(v91) == "number" then
        local v92 = p85.Cost
        for v95, v94 in u30 do
            if v94.Id == v92 then
                goto l21
            end
        end
        local v95 = nil
        ::l21::
        if v95 and v86.Passes[v95] then
            v90 = true
        end
    end
    local v96 = v86.Bubble.Gum == p85.Name and true or v86.Bubble.Flavor == p85.Name
    u36.Cost.Visible = not v90
    local v97 = u36.Owned
    local v98
    if v90 then
        v98 = not v96
    else
        v98 = v90
    end
    v97.Visible = v98
    u36.Action.Button.Visible = not (v96 and v90)
    local v99 = (u38.Kind == "Gum" and u7 or u6)[p85.Name]
    u34.Locked.Label.Text = ("Unlock this in %*"):format((u23.autoColor(v99.Area or "None", u11.Text.Yellow)))
    u34.Locked.Visible = not p85.Unlocked
    local v100 = p85.Cost
    if typeof(v100) ~= "number" then
        if v90 then
            if not v96 then
                u36.Action.Button.Label.Text = "Equip"
                u28:Remove(u36.Action.Button)
                u10(u36.Action.Button, u11.Button.Pink)
            end
        else
            u28:Remove(u36.Action.Button)
            u36.Action.Button.Label.Text = "Buy"
            u10(u36.Action.Button, u18:GetOwnedAmount(v86, p85.Cost) < u18:GetAmount(p85.Cost) and u11.Button.Red or u11.Button.Green)
        end
        goto l49
    end
    local v101 = p85.Cost
    for v113, v103 in u30 do
        if v103.Id == v101 then
            ::l41::
            if v113 and v86.Passes[v113] == true and true or false then
                u28:Remove(u36.Action.Button)
                u36.Action.Button.Label.Text = "Equip"
                u10(u36.Action.Button, u11.Button.Pink)
            else
                u28:Add(u36.Action.Button)
                u36.Action.Button.Label.Text = ("%*%*"):format(u27.RobuxUnicode, u43[p85.Cost] or "__")
                u10(u36.Action.Button, u11.Button.Orange)
            end
            u36.Cost.Visible = false
            ::l49::
            local v104 = 1
            for _, v105 in u35:GetChildren() do
                if v105:IsA("Frame") then
                    local v106 = u7[v105.Name] or u6[v105.Name]
                    local v107 = u11.Button.Default
                    local v108 = false
                    if v105.Name == p85.Name then
                        v104 = v105.LayoutOrder
                        v107 = u11.Button.Green
                    else
                        local v109 = v106.Cost
                        if typeof(v109) == "number" then
                            v107 = u11.Button.Orange
                            v108 = true
                        end
                    end
                    if v108 then
                        u28:Add(v105.Button)
                    else
                        u28:Remove(v105.Button)
                    end
                    u10(v105.Button, v107)
                end
            end
            if p85.Name == "Infinity Gum" then
                u36.Stat.Text = "Infinite Storage!"
            elseif u38.Kind == "Gum" then
                u36.Stat.Text = ("%* Storage"):format((u13(u7[p85.Name].Storage, 500000)))
            else
                u36.Stat.Text = ("+%* Bubbles"):format((u13(u6[p85.Name].Bubbles, 500000)))
            end
            local v110 = u35.UIGridLayout.CellSize.X.Offset
            local v111 = (v104 - 1) / 3
            local v112 = v110 * math.floor(v111) - v110 / 2
            u5:Create(u35, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {
                ["CanvasPosition"] = Vector2.new(0, v112 * u33.UIScale.Scale)
            }):Play()
            task.defer(function() --[[Anonymous function at line 346]]
                --[[
                Upvalues:
                    [1] = u36
                    [2] = u33
                --]]
                u36.Cost.Label.Size = UDim2.fromOffset(u36.Cost.Label.TextBounds.X / u33.UIScale.Scale, 50)
            end)
            u36.CostTitle.Visible = u36.Cost.Visible
            u40 = p85
            u84()
            return
        end
    end
    local v113 = nil
    goto l41
end
local function u129() --[[Anonymous function at line 357]]
    --[[
    Upvalues:
        [1] = u9
        [2] = u38
        [3] = u7
        [4] = u6
        [5] = u35
        [6] = u22
        [7] = u30
        [8] = u11
        [9] = u18
        [10] = u12
        [11] = u40
        [12] = u41
        [13] = u84
    --]]
    local v114 = u9:Get()
    if not v114 then
        return
    end
    local v115 = u38.Kind == "Gum" and u7 or u6
    for _, v116 in u35:GetChildren() do
        if v116:IsA("GuiObject") then
            local v117 = v115[v116.Name]
            local v118
            if v114 then
                if v117.Area then
                    if u22[v117.Area] then
                        v118 = v114.WorldsUnlocked[v117.Area] ~= nil
                    else
                        v118 = v114.AreasUnlocked[v117.Area] ~= nil
                    end
                else
                    v118 = true
                end
            else
                v118 = false
            end
            local v119 = (v114.Gum[v116.Name] or v114.Flavors[v116.Name]) ~= nil
            local v120 = v117.Cost
            if typeof(v120) == "number" then
                local v121 = v117.Cost
                for v124, v123 in u30 do
                    if v123.Id == v121 then
                        goto l31
                    end
                end
                local v124 = nil
                ::l31::
                if v124 and v114.Passes[v124] then
                    v119 = true
                end
            end
            local v125 = v114.Bubble.Flavor == v116.Name and true or v114.Bubble.Gum == v116.Name
            v116.Button.Label.Text = v118 and (v116.Name or "???") or "???"
            v116.Button.Cost.Visible = not v119 and v118
            v116.Button.Equipped.Visible = v125 and v118
            local v126 = v116.Button.Owned
            if v119 then
                v119 = not v125
                if v119 then
                    v119 = v118
                end
            end
            v126.Visible = v119
            v116.Button.Locked.Visible = not v118
            v116.Button.Icon.ImageColor3 = v118 and Color3.new(1, 1, 1) or Color3.new()
            local v127 = v116.Button.Cost.Label
            local v128 = v117.Cost
            if typeof(v128) == "number" then
                v127.TextColor3 = u11.Text.Green
            elseif u18:GetOwnedAmount(v114, v117.Cost) < u18:GetAmount(v117.Cost) then
                v127.TextColor3 = u11.Color.Red
            elseif v117.Cost.Type == "Currency" then
                v127.TextColor3 = u12[v117.Cost.Currency].Color
            else
                v127.TextColor3 = Color3.new(1, 1, 1)
            end
        end
    end
    if u40 then
        u41(u40)
    end
    u84()
end
local function u146(p130, p131) --[[Anonymous function at line 412]]
    --[[
    Upvalues:
        [1] = u9
        [2] = u80
        [3] = u55
        [4] = u35
        [5] = u27
        [6] = u43
        [7] = u10
        [8] = u11
        [9] = u18
        [10] = u13
        [11] = u3
        [12] = u33
        [13] = u7
        [14] = u6
        [15] = u41
        [16] = u22
        [17] = u34
        [18] = u38
        [19] = u39
        [20] = u129
    --]]
    local v132 = u9:Get()
    if v132 then
        local v133 = u80(p130, p131)
        for v134, v135 in v133 do
            local u136 = u55:Get()
            u136.Name = v135.Name
            u136.Button.Icon.Image = v135.Image
            u136.LayoutOrder = v134
            u136.ZIndex = 100 - v134
            u136.Parent = u35
            local v137 = v135.Cost
            if typeof(v137) == "number" then
                u136.Button.Cost.UIPadding.PaddingRight = UDim.new()
                u136.Button.Cost.Icon.Visible = false
                u136.Button.Cost.Label.Text = ("%*%*"):format(u27.RobuxUnicode, u43[v135.Cost] or "__")
                u10(u136.Button, u11.Button.Orange)
            else
                local v138 = u18:GetAmount(v135.Cost)
                u136.Button.Cost.Icon.Visible = true
                u136.Button.Cost.Label.Text = u13(v138, 1000000)
                u136.Button.Cost.UIPadding.PaddingRight = UDim.new(0, 18)
                u136:SetAttribute("Cost", u3:JSONEncode(v135.Cost))
                u18:UpdateIcon(u136.Button.Cost.Icon, v135.Cost)
                u10(u136.Button, u11.Button.Default)
            end
            task.defer(function() --[[Anonymous function at line 442]]
                --[[
                Upvalues:
                    [1] = u136
                    [2] = u33
                --]]
                u136.Button.Cost.Label.Size = UDim2.fromOffset(u136.Button.Cost.Label.TextBounds.X / u33.UIScale.Scale, 30)
            end)
        end
        local v139 = p131 == "Gum" and v132.Bubble.Gum or v132.Bubble.Flavor
        local v140 = u7[v139] or u6[v139]
        if v140 then
            local v141 = task.defer
            local v142 = u41
            local v143 = {
                ["Name"] = v139,
                ["Cost"] = v140.Cost,
                ["Image"] = v140.Image
            }
            local v144
            if v132 then
                if v140.Area then
                    if u22[v140.Area] then
                        v144 = v132.WorldsUnlocked[v140.Area] ~= nil
                    else
                        v144 = v132.AreasUnlocked[v140.Area] ~= nil
                    end
                else
                    v144 = true
                end
            else
                v144 = false
            end
            v143.Unlocked = v144
            v141(v142, v143)
        elseif v133[1] then
            task.defer(u41, v133[1])
        end
        for _, v145 in u34.Tray:GetChildren() do
            if v145:IsA("Frame") then
                u10(v145.Button, v145.Name == p131 and u11.Button.Blue or u11.Button.Inactive)
            end
        end
        u34.Title.Label.Text = p131
        u34.Title.Label.Highlight.Text = p131
        u34.Title.Icon.Image = p131 == "Flavors" and u6["Bubble Gum"].Image or u7["Basic Gum"].Image
        u38.Kind = p131
        u39 = p130
        u55:Done()
        task.defer(u129)
    end
end
local function v148(p147) --[[Anonymous function at line 482]]
    --[[
    Upvalues:
        [1] = u42
        [2] = u19
        [3] = u129
    --]]
    if u42 ~= p147 then
        u42 = p147
        u19:ClearAll()
        u129()
    end
end
local u149 = u39
local v150 = {
    "Bubble",
    "Flavors",
    "Gum",
    "Passes"
}
for _, v151 in v21:GetDataKeys() do
    table.insert(v150, v151)
end
v20("GumShop", v150, u129)
for _, u152 in u34.Tray:GetChildren() do
    if u152:IsA("Frame") then
        u15(u152.Button, function() --[[Anonymous function at line 500]]
            --[[
            Upvalues:
                [1] = u146
                [2] = u149
                [3] = u152
            --]]
            u146(u149, u152.Name)
        end)
    end
end
for _, v153 in { u7, u6 } do
    for _, u154 in v153 do
        local v155 = u154.Cost
        if typeof(v155) == "number" then
            v26:ConnectGamepassChanged(u154.Cost, function(p156) --[[Anonymous function at line 509]]
                --[[
                Upvalues:
                    [1] = u43
                    [2] = u154
                --]]
                if p156 and p156.PriceInRobux then
                    u43[u154.Cost] = p156.PriceInRobux
                end
            end)
        end
    end
end
v14(u35, u35.UIGridLayout)
u15(u36.Action.Button, function() --[[Anonymous function at line 520]]
    --[[
    Upvalues:
        [1] = u9
        [2] = u36
        [3] = u7
        [4] = u6
        [5] = u30
        [6] = u29
        [7] = u4
        [8] = u32
        [9] = u18
        [10] = u25
        [11] = u38
        [12] = u24
        [13] = u31
        [14] = u16
    --]]
    local v157 = u9:Get()
    if not v157 then
        return
    end
    local v158 = u36.Label.Text
    local v159 = u7[v158] or u6[v158]
    if not v159 then
        return
    end
    local v160 = v159.Cost
    if typeof(v160) ~= "number" then
        if u36.Action.Button.Label.Text == "Buy" and u18:GetOwnedAmount(v157, v159.Cost) < u18:GetAmount(v159.Cost) then
            local v162 = u25.fromNotEnough(v157, v159.Cost, function(p161) --[[Anonymous function at line 540]]
                --[[
                Upvalues:
                    [1] = u38
                --]]
                return ("You need %* to purchase this %*!"):format(p161, u38.Kind == "Flavors" and "Flavor" or u38.Kind)
            end)
            if u38.Kind == "Gum" then
                v162:Gamepass("Infinity Gum")
            end
            return u24(v162:Build())
        end
        goto l15
    end
    local v163 = v159.Cost
    for v166, v165 in u30 do
        if v165.Id == v163 then
            ::l12::
            if v166 and not v157.Passes[v166] then
                u29:Show()
                return u4:PromptGamePassPurchase(u32, v159.Cost)
            end
            ::l15::
            if u36.Action.Button.Label.Text == "Buy" then
                task.delay(0, u31, "CurrencyPickup")
                task.delay(0.14285714285714285, u31, "CurrencyPickup")
                u31("GumBuy")
                u16:FireServer("GumShopPurchase", v158)
                return
            elseif u7[v158] then
                u16:FireServer("UpdateStorage", v158)
            elseif u6[v158] then
                u16:FireServer("UpdateFlavor", v158)
            end
        end
    end
    local v166 = nil
    goto l12
end)
u10(u34.Close, u11.Button.Red)
u15(u34.Close, function() --[[Anonymous function at line 565]]
    --[[
    Upvalues:
        [1] = u17
    --]]
    u17:Close()
end)
u17:BindOnOpened("GumShop", function() --[[Anonymous function at line 570]]
    --[[
    Upvalues:
        [1] = u31
    --]]
    u31("ShopOpen")
end)
u38.open = u146
u38.setTutorial = v148
return u38